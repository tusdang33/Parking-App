Subject: [PATCH] done user profile
---
Index: app/src/main/java/com/parking/parkingapp/common/State.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/common/State.kt b/app/src/main/java/com/parking/parkingapp/common/State.kt
--- a/app/src/main/java/com/parking/parkingapp/common/State.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/common/State.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -1,10 +1,11 @@
 package com.parking.parkingapp.common
 
 sealed class State {
-    object Loading: State()
+    data object Loading: State()
     data class Error(val error: ErrorDataState? = null): State()
-    object Success: State()
-    object Idle: State()
+    data class Success(val success: SuccessDataState? = null): State()
+    data object Idle: State()
 }
 
-interface ErrorDataState
\ No newline at end of file
+interface ErrorDataState
+interface SuccessDataState
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginFragment.kt b/app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginFragment.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginFragment.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -79,7 +79,7 @@
                         loadingVisible(true)
                     }
 
-                    State.Success -> {
+                    is State.Success -> {
                         navigateToHomeScreen()
                         handleLoginError(FormatLoginError())
                         loadingVisible(false)
Index: app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginViewModel.kt
--- a/app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginViewModel.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginViewModel.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -49,7 +49,7 @@
 
         authRepository.login(email, password)
             .success {
-                sendSingleEvent(State.Success)
+                sendSingleEvent(State.Success())
             }
             .fail {
                 sendSingleEvent(
Index: app/src/main/java/com/parking/parkingapp/view/authenticate/register/RegisterFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/authenticate/register/RegisterFragment.kt b/app/src/main/java/com/parking/parkingapp/view/authenticate/register/RegisterFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/authenticate/register/RegisterFragment.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/authenticate/register/RegisterFragment.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -103,7 +103,7 @@
                         loadingVisible(true)
                     }
 
-                    State.Success -> {
+                    is State.Success -> {
                         handleRegisterError(FormatRegisterError())
                         findNavController().navigate(R.id.action_registerFragment_to_loginFragment)
                         loadingVisible(false)
Index: app/src/main/java/com/parking/parkingapp/view/authenticate/register/RegisterViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/authenticate/register/RegisterViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/authenticate/register/RegisterViewModel.kt
--- a/app/src/main/java/com/parking/parkingapp/view/authenticate/register/RegisterViewModel.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/authenticate/register/RegisterViewModel.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -61,7 +61,7 @@
             password
         )
             .success {
-                sendSingleEvent(State.Success)
+                sendSingleEvent(State.Success())
             }
             .fail {
                 sendSingleEvent(
Index: app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuFragment.kt b/app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuFragment.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuFragment.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -10,6 +10,7 @@
 import androidx.core.animation.doOnStart
 import androidx.fragment.app.viewModels
 import androidx.lifecycle.LifecycleCoroutineScope
+import com.bumptech.glide.Glide
 import com.parking.parkingapp.R
 import com.parking.parkingapp.common.State
 import com.parking.parkingapp.databinding.FragmentDrawerMenuBinding
@@ -46,7 +47,7 @@
     }
 
     override fun intiData() {
-        //suppress
+        viewModel.fetchUserData()
     }
 
     override fun obverseFromViewModel(scope: LifecycleCoroutineScope) {
@@ -65,7 +66,7 @@
                         //suppress
                     }
 
-                    State.Success -> {
+                    is State.Success -> {
                         close() {
                             (activity as? MainActivity)?.apply {
                                 mainNavController().navigate(R.id.action_homeFragment_to_loginFragment)
@@ -75,6 +76,18 @@
                 }
             }
         }
+        scope.launch {
+            viewModel.userData.collect {
+                Glide
+                    .with(requireContext())
+                    .load(it.image)
+                    .centerCrop()
+                    .placeholder(R.drawable.man)
+                    .into(binding.drawerAvatar)
+
+                it.username?.let { binding.drawerUsername.text = it }
+            }
+        }
     }
 
     fun open() {
Index: app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuViewModel.kt
--- a/app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuViewModel.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuViewModel.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -1,11 +1,15 @@
 package com.parking.parkingapp.view.drawer_menu
 
+import android.net.Uri
 import androidx.lifecycle.viewModelScope
+import com.google.firebase.auth.FirebaseUser
 import com.parking.parkingapp.common.BaseViewModel
 import com.parking.parkingapp.common.State
 import com.parking.parkingapp.common.success
 import com.parking.parkingapp.data.repository.AuthRepository
 import dagger.hilt.android.lifecycle.HiltViewModel
+import kotlinx.coroutines.flow.MutableStateFlow
+import kotlinx.coroutines.flow.asStateFlow
 import kotlinx.coroutines.launch
 import javax.inject.Inject
 
@@ -13,7 +17,27 @@
 class DrawerMenuViewModel @Inject constructor(
     private val authRepository: AuthRepository
 ): BaseViewModel() {
+    inner class UserProfile(
+        val image: Uri? = null,
+        val username: String? = null,
+        val email: String? = null,
+    )
+
+    private val _userData: MutableStateFlow<UserProfile> = MutableStateFlow(UserProfile())
+    val userData = _userData.asStateFlow()
     fun logout() = viewModelScope.launch {
-        authRepository.logout().success { sendSingleEvent(State.Success) }
+        authRepository.logout().success { sendSingleEvent(State.Success()) }
+    }
+
+    fun fetchUserData() = viewModelScope.launch {
+        authRepository.getCurrentUser<FirebaseUser>().success { fuser ->
+            fuser?.let { user ->
+                _userData.value = UserProfile(
+                    user.photoUrl,
+                    user.displayName,
+                    user.email
+                )
+            }
+        }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/home/HomeFragment.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/home/HomeFragment.kt b/app/src/main/java/com/parking/parkingapp/view/home/HomeFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/home/HomeFragment.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/home/HomeFragment.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -66,7 +66,7 @@
                         //suppress
                     }
 
-                    State.Success -> {
+                    is State.Success -> {
                         findNavController().navigate(R.id.action_homeFragment_to_loginFragment)
                     }
                 }
Index: app/src/main/java/com/parking/parkingapp/view/home/HomeViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/home/HomeViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/home/HomeViewModel.kt
--- a/app/src/main/java/com/parking/parkingapp/view/home/HomeViewModel.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/home/HomeViewModel.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -15,6 +15,6 @@
     private val authRepository: AuthRepository
 ): BaseViewModel() {
     fun logout() = viewModelScope.launch {
-        authRepository.logout().success {sendSingleEvent(State.Success) }
+        authRepository.logout().success {sendSingleEvent(State.Success()) }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/profile/ChangeProfileSuccessDialog.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/profile/ChangeProfileSuccessDialog.kt b/app/src/main/java/com/parking/parkingapp/view/profile/ChangeProfileSuccessDialog.kt
--- a/app/src/main/java/com/parking/parkingapp/view/profile/ChangeProfileSuccessDialog.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/profile/ChangeProfileSuccessDialog.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -1,8 +1,10 @@
 package com.parking.parkingapp.view.profile
 
+import android.view.Gravity
 import android.view.LayoutInflater
 import android.view.ViewGroup
 import androidx.fragment.app.FragmentManager
+import com.parking.parkingapp.R
 import com.parking.parkingapp.databinding.DialogProfileSuccessBinding
 import com.parking.parkingapp.view.BaseDialog
 
@@ -20,6 +22,14 @@
         }
     }
 
+    override fun onStart() {
+        super.onStart()
+        dialog?.window?.setBackgroundDrawableResource(R.color.colorTransparent)
+        dialog?.window?.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT)
+        dialog?.window?.setGravity(Gravity.CENTER)
+        dialog?.setCanceledOnTouchOutside(false)
+    }
+
     override fun shows(fm: FragmentManager): BaseDialog<DialogProfileSuccessBinding> {
         kotlin.runCatching {
             if (!fm.isStateSaved) {
Index: app/src/main/java/com/parking/parkingapp/view/profile/ProfileFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/profile/ProfileFragment.kt b/app/src/main/java/com/parking/parkingapp/view/profile/ProfileFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/profile/ProfileFragment.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/profile/ProfileFragment.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -1,5 +1,8 @@
 package com.parking.parkingapp.view.profile
 
+import android.content.res.ColorStateList
+import android.text.Editable
+import android.text.TextWatcher
 import android.view.LayoutInflater
 import android.view.ViewGroup
 import androidx.activity.result.PickVisualMediaRequest
@@ -11,9 +14,11 @@
 import com.parking.parkingapp.R
 import com.parking.parkingapp.common.State
 import com.parking.parkingapp.common.grantReadPermissionToUri
+import com.parking.parkingapp.common.hasVisible
 import com.parking.parkingapp.databinding.FragmentProfileBinding
 import com.parking.parkingapp.view.BaseFragment
 import com.parking.parkingapp.view.MainActivity
+import com.parking.parkingapp.view.profile.change_password.ChangePasswordBottomSheet
 import dagger.hilt.android.AndroidEntryPoint
 import kotlinx.coroutines.launch
 
@@ -48,11 +53,43 @@
     }
 
     override fun initActions() {
+        binding.profileUsername.addTextChangedListener(object: TextWatcher {
+            override fun beforeTextChanged(
+                p0: CharSequence?,
+                p1: Int,
+                p2: Int,
+                p3: Int
+            ) {
+                //suppress
+            }
+
+            override fun onTextChanged(
+                p0: CharSequence?,
+                p1: Int,
+                p2: Int,
+                p3: Int
+            ) {
+                p0?.let { query ->
+                    handleAllowChangeInfo(query.toString())
+                }
+
+            }
+
+            override fun afterTextChanged(p0: Editable?) {
+                //suppress
+            }
+        })
+
         binding.profileImagePick.setOnClickListener {
             pickImageLauncher.launch(PickVisualMediaRequest(ActivityResultContracts.PickVisualMedia.ImageOnly))
         }
         binding.profileChangePassword.setOnClickListener {
-            ChangePasswordBottomSheet().shows(parentFragmentManager)
+            ChangePasswordBottomSheet().apply {
+                onSuccess = {
+                    ChangeProfileSuccessDialog().shows(parentFragmentManager)
+                }
+                email = viewModel.userData.value.email
+            }.shows(parentFragmentManager)
         }
 
         binding.profileChange.setOnClickListener {
@@ -60,6 +97,16 @@
         }
     }
 
+    private fun handleAllowChangeInfo(username: String) {
+        with(binding.profileChange) {
+            isEnabled = username != viewModel.userData.value.username
+            backgroundTintList = ColorStateList.valueOf(
+                if (isEnabled) requireContext().getColor(R.color.blue)
+                else requireContext().getColor(R.color.gray)
+            )
+        }
+    }
+
     override fun intiData() {
         viewModel.fetchUserData()
     }
@@ -81,14 +128,29 @@
         scope.launch {
             viewModel.singleEvent.collect { state ->
                 when (state) {
-                    is State.Error -> TODO()
-                    State.Idle -> TODO()
-                    State.Loading -> TODO()
-                    State.Success -> {
-                        ChangePasswordBottomSheet().shows(parentFragmentManager)
+                    is State.Error -> {
+                        loadingVisible(false)
+                    }
+
+                    State.Idle -> {
+                        loadingVisible(false)
+                    }
+
+                    State.Loading -> {
+                        loadingVisible(true)
+                    }
+
+                    is State.Success -> {
+                        loadingVisible(false)
+                        ChangeProfileSuccessDialog().shows(parentFragmentManager)
                     }
                 }
             }
         }
     }
+
+    private fun loadingVisible(isLoading: Boolean) {
+        binding.profileLoading.hasVisible = isLoading
+        binding.profileChange.hasVisible = !isLoading
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/profile/ProfileViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/profile/ProfileViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/profile/ProfileViewModel.kt
--- a/app/src/main/java/com/parking/parkingapp/view/profile/ProfileViewModel.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/profile/ProfileViewModel.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -41,12 +41,13 @@
     }
 
     fun updateUserData(username: String?) = viewModelScope.launch(NonCancellable) {
+        sendSingleEvent(State.Loading)
         authRepository.updateProfile(
             name = username,
             email = null,
             image = pickedImage.toString()
         ).success {
-            sendSingleEvent(State.Success)
+            sendSingleEvent(State.Success())
         }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/profile/ChangePasswordBottomSheet.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/profile/ChangePasswordBottomSheet.kt b/app/src/main/java/com/parking/parkingapp/view/profile/change_password/ChangePasswordBottomSheet.kt
rename from app/src/main/java/com/parking/parkingapp/view/profile/ChangePasswordBottomSheet.kt
rename to app/src/main/java/com/parking/parkingapp/view/profile/change_password/ChangePasswordBottomSheet.kt
--- a/app/src/main/java/com/parking/parkingapp/view/profile/ChangePasswordBottomSheet.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/profile/change_password/ChangePasswordBottomSheet.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -1,4 +1,4 @@
-package com.parking.parkingapp.view.profile
+package com.parking.parkingapp.view.profile.change_password
 
 import android.text.InputType
 import android.text.method.PasswordTransformationMethod
@@ -7,14 +7,26 @@
 import android.view.ViewGroup
 import android.widget.ImageView
 import androidx.fragment.app.FragmentManager
+import androidx.fragment.app.viewModels
+import androidx.lifecycle.lifecycleScope
 import com.parking.parkingapp.R
+import com.parking.parkingapp.common.State
+import com.parking.parkingapp.common.hasVisible
 import com.parking.parkingapp.databinding.BottomsheetChangePasswordBinding
 import com.parking.parkingapp.view.BaseDialog
+import dagger.hilt.android.AndroidEntryPoint
+import kotlinx.coroutines.launch
 
+@AndroidEntryPoint
 class ChangePasswordBottomSheet : BaseDialog<BottomsheetChangePasswordBinding>() {
+    private val viewModel: ChangePasswordViewModel by viewModels()
+
     private var isShowingOldPassword = false
     private var isShowingNewPassword = false
     private var isShowingRetypePassword = false
+    var onSuccess: (() -> Unit)? = null
+    var email: String? = null
+
     override fun inflateBinding(
         inflater: LayoutInflater,
         container: ViewGroup?
@@ -29,7 +41,48 @@
     }
 
     override fun initView() {
-        //suppress
+        lifecycleScope.launch {
+            viewModel.singleEvent.collect { state ->
+                when (state) {
+                    is State.Error -> {
+                        loadingVisible(false)
+                        handleChangePasswordError(state.error as FormatChangePasswordError)
+                    }
+
+                    State.Idle -> TODO()
+                    State.Loading -> loadingVisible(true)
+                    is State.Success -> {
+                        loadingVisible(false)
+                        dismiss()
+                        onSuccess?.invoke()
+                    }
+                }
+
+            }
+        }
+    }
+
+    private fun handleChangePasswordError(changePasswordError: FormatChangePasswordError) {
+        val (emailError, passwordError, retypeError, commonError) = changePasswordError
+        binding.profileErrorOldPassword.apply {
+            hasVisible = emailError != null
+            text = emailError
+        }
+
+        binding.profileErrorNewPassword.apply {
+            hasVisible = passwordError != null
+            text = passwordError
+        }
+
+        binding.profileErrorRetypePassword.apply {
+            hasVisible = retypeError != null
+            text = retypeError
+        }
+
+        binding.profileErrorCommon.apply {
+            hasVisible = commonError != null
+            text = commonError
+        }
     }
 
     override fun initActions() {
@@ -83,6 +136,20 @@
                 setSelection(this.text.length)
             }
         }
+
+        binding.saveChangePassword.setOnClickListener {
+            viewModel.submitPassword(
+                email = email ?: "",
+                oldPassword = binding.changeEdtOldPassword.text.toString(),
+                newPassword = binding.changeEdtNewPassword.text.toString(),
+                retypePassword = binding.changeEdtRetypePassword.text.toString(),
+            )
+        }
+    }
+
+    private fun loadingVisible(isLoading: Boolean) {
+        binding.changePassLoading.hasVisible = isLoading
+        binding.saveChangePassword.hasVisible = !isLoading
     }
 
     override fun onCreateCustomAnimation(): Int = R.style.BottomSheetDialogAnim
Index: app/src/main/java/com/parking/parkingapp/view/profile/change_password/ChangePasswordViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/profile/change_password/ChangePasswordViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/profile/change_password/ChangePasswordViewModel.kt
new file mode 100644
--- /dev/null	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
+++ b/app/src/main/java/com/parking/parkingapp/view/profile/change_password/ChangePasswordViewModel.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -0,0 +1,85 @@
+package com.parking.parkingapp.view.profile.change_password
+
+import androidx.lifecycle.viewModelScope
+import com.parking.parkingapp.common.BaseViewModel
+import com.parking.parkingapp.common.ErrorDataState
+import com.parking.parkingapp.common.State
+import com.parking.parkingapp.common.fail
+import com.parking.parkingapp.common.success
+import com.parking.parkingapp.data.repository.AuthRepository
+import com.parking.parkingapp.domain.usecase.ValidatePasswordUseCase
+import com.parking.parkingapp.domain.usecase.ValidateRetypePasswordUseCase
+import dagger.hilt.android.lifecycle.HiltViewModel
+import kotlinx.coroutines.NonCancellable
+import kotlinx.coroutines.launch
+import javax.inject.Inject
+
+@HiltViewModel
+class ChangePasswordViewModel @Inject constructor(
+    private val authRepository: AuthRepository,
+    private val validatePasswordUseCase: ValidatePasswordUseCase,
+    private val validateRetypePasswordUseCase: ValidateRetypePasswordUseCase,
+): BaseViewModel() {
+    fun submitPassword(
+        email: String,
+        oldPassword: String,
+        newPassword: String,
+        retypePassword: String,
+    ) = viewModelScope.launch(NonCancellable) {
+        val passwordValidateResult = validatePasswordUseCase(newPassword)
+        val retypePasswordValidateResult = validateRetypePasswordUseCase(
+            newPassword,
+            retypePassword
+        )
+
+        val hasError = listOf(
+            passwordValidateResult,
+            retypePasswordValidateResult
+        ).any { !it.successful }
+        val changePasswordError = FormatChangePasswordError()
+        if (hasError) {
+            sendSingleEvent(
+                State.Error(
+                    changePasswordError.copy(
+                        passwordError = passwordValidateResult.errorMessage,
+                        retypePasswordError = retypePasswordValidateResult.errorMessage
+                    )
+                )
+            )
+            return@launch
+        }
+        authRepository.login(email, oldPassword).fail {
+            sendSingleEvent(
+                State.Error(
+                    changePasswordError.copy(
+                        oldPasswordError = it
+                    )
+                )
+            )
+        }.success {
+            updatePass(newPassword)
+        }
+    }
+
+    private fun updatePass(newPass: String) = viewModelScope.launch(NonCancellable) {
+        sendSingleEvent(State.Loading)
+        authRepository.updatePass(newPass).success {
+            sendSingleEvent(State.Success())
+        }.fail {
+            sendSingleEvent(
+                State.Error(
+                    FormatChangePasswordError(
+                        commonError = it
+                    )
+                )
+            )
+        }
+    }
+}
+
+data class FormatChangePasswordError(
+    val oldPasswordError: String? = null,
+    val passwordError: String? = null,
+    val retypePasswordError: String? = null,
+    val commonError: String? = null
+): ErrorDataState
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/splash/SplashScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/splash/SplashScreen.kt b/app/src/main/java/com/parking/parkingapp/view/splash/SplashScreen.kt
--- a/app/src/main/java/com/parking/parkingapp/view/splash/SplashScreen.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/splash/SplashScreen.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -52,7 +52,7 @@
                         // suppress
                     }
 
-                    State.Success -> navigateToNextScreen(true)
+                    is State.Success -> navigateToNextScreen(true)
                 }
             }
         }
Index: app/src/main/java/com/parking/parkingapp/view/splash/SplashViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/splash/SplashViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/splash/SplashViewModel.kt
--- a/app/src/main/java/com/parking/parkingapp/view/splash/SplashViewModel.kt	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/java/com/parking/parkingapp/view/splash/SplashViewModel.kt	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -21,7 +21,7 @@
             authRepository.getCurrentUser<FirebaseUser>()
                 .success {
                     if (it != null) {
-                        sendSingleEvent(State.Success)
+                        sendSingleEvent(State.Success())
                     } else {
                         sendSingleEvent(State.Error())
                     }
Index: app/src/main/res/layout/bottomsheet_change_password.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/bottomsheet_change_password.xml b/app/src/main/res/layout/bottomsheet_change_password.xml
--- a/app/src/main/res/layout/bottomsheet_change_password.xml	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/res/layout/bottomsheet_change_password.xml	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -158,11 +158,33 @@
         android:translationY="-10dp"
         android:visibility="gone" />
 
-    <androidx.appcompat.widget.AppCompatButton
-        android:id="@+id/login_btn"
-        style="@style/BlackFilledButton"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:backgroundTint="@color/blue"
-        android:text="Save Change" />
+    <TextView
+        android:id="@+id/profile_error_common"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Wrong"
+        android:textColor="@color/red"
+        android:translationY="-10dp"
+        android:visibility="gone" />
+
+    <FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <ProgressBar
+            android:id="@+id/change_pass_loading"
+            android:layout_width="50dp"
+            android:layout_height="50dp"
+            android:layout_gravity="center"
+            android:indeterminate="true"
+            android:indeterminateTint="@color/blue" />
+
+        <androidx.appcompat.widget.AppCompatButton
+            android:id="@+id/save_change_password"
+            style="@style/BlackFilledButton"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/blue"
+            android:text="Save Change" />
+    </FrameLayout>
 </LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/dialog_profile_success.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/dialog_profile_success.xml b/app/src/main/res/layout/dialog_profile_success.xml
--- a/app/src/main/res/layout/dialog_profile_success.xml	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/res/layout/dialog_profile_success.xml	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -1,37 +1,45 @@
 <?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
-    android:layout_margin="24dp"
-    android:background="@drawable/rounded_22dp"
-    android:clipChildren="false"
-    android:clipToPadding="false"
-    android:divider="@drawable/divider_vertical"
-    android:elevation="20dp"
-    android:gravity="center"
-    android:orientation="vertical"
-    android:padding="20dp"
-    android:showDividers="middle">
+    android:clipChildren="false"
+    android:clipToPadding="false"
+    android:padding="24dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@drawable/rounded_22dp"
+        android:clipChildren="false"
+        android:clipToPadding="false"
+        android:divider="@drawable/divider_vertical"
+        android:elevation="20dp"
+        android:gravity="center"
+        android:orientation="vertical"
+        android:padding="20dp"
+        android:showDividers="middle"
+        tools:ignore="UselessParent">
 
-    <ImageView
-        android:layout_width="60dp"
-        android:layout_height="60dp"
-        android:src="@drawable/check"
-        tools:ignore="ContentDescription" />
+        <ImageView
+            android:layout_width="60dp"
+            android:layout_height="60dp"
+            android:src="@drawable/check"
+            tools:ignore="ContentDescription" />
 
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="Success"
-        android:textColor="@color/black"
-        android:textSize="28sp"
-        android:textStyle="bold" />
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Success"
+            android:textColor="@color/black"
+            android:textSize="28sp"
+            android:textStyle="bold" />
 
-    <androidx.appcompat.widget.AppCompatButton
-        android:id="@+id/profile_success_change"
-        style="@style/BlackFilledButton"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:text="Ok" />
-</LinearLayout>
\ No newline at end of file
+        <androidx.appcompat.widget.AppCompatButton
+            android:id="@+id/profile_success_change"
+            style="@style/BlackFilledButton"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Ok" />
+    </LinearLayout>
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_drawer_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_drawer_menu.xml b/app/src/main/res/layout/fragment_drawer_menu.xml
--- a/app/src/main/res/layout/fragment_drawer_menu.xml	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/res/layout/fragment_drawer_menu.xml	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -47,10 +47,23 @@
         tools:visibility="visible">
 
         <de.hdodenhof.circleimageview.CircleImageView
-            android:id="@+id/profile_avatar"
+            android:id="@+id/drawer_avatar"
             android:layout_width="80dp"
             android:layout_height="80dp"
-            android:src="@color/black" />
+            android:src="@drawable/man" />
+
+        <Space
+            android:layout_width="wrap_content"
+            android:layout_height="5dp" />
+
+        <TextView
+            android:id="@+id/drawer_username"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Username"
+            android:textColor="@color/white"
+            android:textSize="16sp"
+            android:textStyle="bold" />
 
         <Space
             android:layout_width="wrap_content"
Index: app/src/main/res/layout/fragment_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_profile.xml b/app/src/main/res/layout/fragment_profile.xml
--- a/app/src/main/res/layout/fragment_profile.xml	(revision e055891467d1c8eb37d545ea31a5829550059fa2)
+++ b/app/src/main/res/layout/fragment_profile.xml	(revision 7013d9739563c1e4d7068f1f59905b9da0eda844)
@@ -107,11 +107,24 @@
         android:layout_marginVertical="20dp"
         android:background="@color/gray" />
 
-    <androidx.appcompat.widget.AppCompatButton
-        android:id="@+id/profile_change"
-        style="@style/BlackFilledButton"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:backgroundTint="@color/blue"
-        android:text="Save Change" />
+    <FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <ProgressBar
+            android:id="@+id/profile_loading"
+            android:layout_width="50dp"
+            android:layout_height="50dp"
+            android:layout_gravity="center"
+            android:indeterminate="true"
+            android:indeterminateTint="@color/blue" />
+
+        <androidx.appcompat.widget.AppCompatButton
+            android:id="@+id/profile_change"
+            style="@style/BlackFilledButton"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:backgroundTint="@color/blue"
+            android:text="Save Change" />
+    </FrameLayout>
 </LinearLayout>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/lock.png b/app/src/main/res/drawable/lock.png
new file mode 100644
index 0000000000000000000000000000000000000000..346690eca089b4b0bbd0e7e0de0d633652294fed
GIT binary patch
literal 11207
zc%1Eec|6qZ`|mwtO+vCI>z84YHIyd1#GtI%mB^NCF_gl1RQ9D&CL!BcGs+f8Op$q7
zkfBj2#8XT|#FQG_x#xM#_j{J#Kj-{+{y1K*dCli@eeV0Z-q(J8?vd_r+-iq_v;Y8L
z2iE$C697oS`SA0?FV=-oHvHm_HpjZ~!@tY?XVT#Pwn%G_Xt;ii^Ff%Si!MOo?ifq=
z80Uz<n7GsD13+9{oMuRPXte+7$N<fV^Fc-545a~30N5jDE*FXyK3?qd#wBchUw!;=
zHIVS3$S99z7xK*M?T1gxdc-)C?W{`M?5EK;uc`67CvDb`*5l0Xif6VycrfxpIADF7
zv1cAxdw$ojK(kh$k}_dOb7Vw#!E>KAYN3d-_kP{DK;y}kjqW?SR&w9J*9x!Qd39)V
z@lyBfrNIzs85uGB1)D0}U8n(KYbhy5ZPVH*PCV&keyein%ka9@AZ`cwV`6|3Ru@xk
zNi!pS*?W6_a((qoZ!n=1OLM~7PAsp!xU4xIv|EsJxDtRI>nhz!Wm)oLRdx!hP5S8F
zqxVR});OIDn9`TuS_OF(%n=}qL@RW~s@h<@XdZ;)1*3t|^_%g^8#c5Qf?OWU-I%!0
zmd$-79SQWT)k;EKS=*CVuOxMnbgIke!-%c!mjs@S{PvEe91s=Z6#x!abunKY77CY!
z^7NkQ<*l70vhLelRVaPANk1Sor3DvQK<HQ}Cz?DKV^4D#Kho50M)M&gs@LTW1?;|$
zmo5iDKhGuzYQ{2A2`Pw@IYlmr$tTIrM!&0~pT>7UtxiA-<trx~p`kJktdvK|<+GHq
zCIhq0MdV%(bp!#_;Qsf@CHIVM*P|X84IO;^K01AB5Sqomm@jPy#Bj|86HTZ%#g??a
z9W28a5s^tMLT#WS$ab6*1t$i4`Kxv$WGW|^(YEzRITTV+K1z((1477%TqNkSWF&3~
z+p_mzt)!_>mJC%HdkEp5ej_Q15E-gUbtS=$_J;69ifR_7L1Z1n9{m2788ox$k`u$u
zoJK_@9H-gM7}VaI#Ig%W@?WCgRX~}dJm3jbYJp&^$k<Bb`*|fWg%pa~fOZRS5#n+$
z0}2MvY!<W{ln*L|5GC{Wy*lF(q4DKx^G9ftqZL2_4ehQ(=-wA{8z*59@R&68SM<A5
zPd<e7RU}>kdiXb?``%oYA;m%NM$AQHqK}^}ckMv|&{bd)bkvp|YB~0MJZnZlE?#Uw
z_*c9!@#AS(-daic{H9HirbA2uv1FsRe^J@z=1@RHix6^@iw8_#t91FWY(DI)XHc@_
zw}Kc;$TkGBMZs;?AzQUh;?`O0wi$yZTgTy)E8TE!oJT6+Y%&sPK}4(8>>zBadr<P2
zt2O(KG4b&vhF{xT4D@-zFuTsux9nLjf{+ALGVZASdd3NA2uXqmG(kv#*6cdcNJEQ)
zbx$7a`en^WbPT^kb|4d&>N_!BttlI6s3g5Tbc{Aq<-apc))k2CtBVP|Lb{iUO6u@m
zMJ4wP&NgpA%bj-wB73S(TU%O;7^XU9++Cef=`CvN9k~rOEmfnERFXQr#zbL(&Qk$U
z?CQC^b(=H<dGz&`k$O(V5CM^UN*z9dh^lQmE!V$V8EO=;K0!QBF#JogXb|b7R#K?M
zIEif`w}9TIW>WO>!};?}1&UV_9~guNq+;V;>^9SS-Vx+9WJmDMaElG&dbhCcZ9f^F
z+M9a`a+<Q^cwI<7s#fwljr2&l%_|6Tw!w$yQ{^uciR1ytVT!xiu+vEgnChk_tynge
z;m-HU5%_A}9Q0OVT$(;$^6MU!wrWE)^v!q#e5+$}w|cDEx=eL^auSg>Yq$@%qJcJa
zm?$B<p!HA8cHg;JtmG^wFh#DUBJtO3t8`@v-y|ZIxkz(uPiJAshBFoTw_gIU9bix%
zqlNh`^Ti&9-&N6E!BPT1TIJ@To^2<V=0W!W)M6B)nsx}O$IZ7#nh}qc^hgCVxa$?s
z+`;^C>A!9cUUsB?rXK=SpOY9je5d~|g|8gs^>eW%;Pda5%bIKV=!#P?RKKdhwGOl)
z<?Q=|$Uf^HQYN$|nQq3ZDqo>UW%0+fgQrV)(#k6;+_p(Jq)_a|z^J8KiHAa+LP#-A
zLZQD?8MX3oz6I`)7XW9W7#TE!NT}Xzg}8kGByBG&V>fXkzhK7PhRHaCGExc2!AVe*
zUZP5F4Fwz~r%>cS@TPe_GPBz>B@Z~pgd_AV5T*k#mhUS2_?B=jjq+4Q3)XJaM3kw(
zFx-}L^6b-<SIKO~^%zfMV!{Uu|8y=Ae|n$KYLXM}9CQ~rSrDVXhS2u*Mw)7@Kf1M^
ze6)}}SIl({LO2bh!_AtVhZ9oJmRBpeWcsFq8(&{VD}=bz8rQfa;+0Eo4+SLo%W{7|
zf-pS+1sYh6Z3s6HBDv31Rcrtsx|xUxWZbstW4DQKOX*7lF6l^o24rE6?R<^l16bPC
zs%X(#ej;$V?t;;^r|A-odIlkuuK5shUd%Szl2a6n-4Ui$-C8P16n!P}k|NW0Xn^+m
zI}%&S(cpqt5OL74OdU$`faNWfgd$XX1wA>erWPOlfj}$0nK7}q=a|!K(dNWPDXPxL
z$%<jWR<tQs6P*8UomP5?Ai9GsQ#**kuB<#f*NzkExc3YL{ATX@EyoRbVufwv&4<tQ
zxX|h^YaVv^v^7{jD~-Eh6LcFTiw?O{VIEmb(p4U)UD}fW8q`@4{X+}7JfQ*jmO@iF
zW~dbIq<bLS&4#aR<&jdM+xL$faI|!D+-cClT6KA8=+Hx&fgz*|!{LAcm~ez;$B9+Y
z<J{1~{nZ0&LWqeoCT@^%x6VTcTcAqzF+{Q3vu3V*C1y-W{|Ryxqqc#y<r=@`h}JRX
z&&nUAsHdW;Dwe&lW7V|6N^$YzR?>!D%GJ+emb2f4VeI%oXx6X{Ra7uv<da*t%dBWa
z;v4UKR7+p}+&x=Y=Ykpe7b79#1%<C~O-cH6KItNi$I`XKA}X$6>3H{Em96-3#l8C&
zhaou|cPoCc`0c}}kA*ftLU}9?>~3u3v6SCo%@xtVhM=%x4PYt^dip9M5momblUdU#
zX4LVy6IP~SOx9Is21`yaX`Cyt7@a61<wNt_gS(8xz<gEf_r-&RoVLN~@@zt5J}Y5j
zN@DM0kLB~00lpbgGV(@y85a(4Pm^IZwzpW@ZMM->VOpPp1$F%Ak5fX}I{pMDn7>+#
zeS}6ae`gKZyK}{x520_bii3I7%|SyI1~*ei?xG7#6-te!n@uagJlxADMU|W_d8U*L
z3(qdH1x2H4JLplpIY{dJ>(ss?<pggU!*28Qz74OE#<|Jxd^i>qJ7C(A58i)ut)2Y`
z4%nYTCEW44U+>&`GQk1{=tE9{rh;p;+X>6Ceh6tIrgp#<8H43v%IJ*kW!OXEVRW<0
z1lZs5Vp2%o=^lQXg+l?7Ua9y!P`86KV_QpxnhYtGt@ryjisUNiCZ*oY$WZs7L7wv8
zSy<v<qSW7AGxv^pw;|<MJuBkU?TVyOm)T<4L!tY8AYzJWhI3zzD1)6#i7^6YpN_(o
zd7jE+nK4D~Q{?~}s$D)ujyC*pZ@-o;28MxVyO3xF^o<qmF(J?^D80}OyB!AT3f;^%
z(-!2BdPMV+s_tBmQOoZsq4jLkWpr=9aSuCuD3{WN6zPC7O&UzVqwYcJ*R7Nj@K(P&
z%US48rMB_yxB@8#QO~6GW#fGz<Y5>Z(SFPK`jXI|KZBOzjxZh>SPjReEN3~yd{gpm
z0Nm;~2U~65D}-d>3U2*MCcT8F!sA5dHDFoa7vDRr+R)P17mIbic+j$=W4ppR$&BYc
z-X^bRn@d}TlFM&qyi;{%*cDY!`DaS99rbuW1j}+C=-?K4VB5ge*SA2>Y!gau_Nkvc
z+}o|g%bjHll3}r3B(!?YZ%z`Q5uAQ|KY%+v!>+T<a_F(iM@;4nFKPhRqkHarW;0OJ
z#@zJhNvH1Qx28QeNwk@K_b<yy#cOm@u(~N84L<oX7E8!Zt>Zl-82)-^_P0StmXBX>
z7Ef{o;D#nIMu&9cgi^zZF(=`;5+Tdo>&zA!a%PoGFAQj9Z{ru_QLxk7jEjXcQo=BX
z`)no4=VW+EZ&cPcgx@Y-Us&btl70|WJc6P|bD?kKy;4mVU^wh~cI4oV0YdfX=yxZX
z3c)h2;A!-oTkEOKM`!_bMTdjLz3iN(c5FsJFZUIsh+HD#@#7MLaq&>VL)ZB_THM-c
z%Srv8{clC21WZkx7=ju}!ET?UJ;Hadcry-nzrdtc4(`j|$<NKBpe|{1wngYu*&3{v
zbPTsN#5WmH(rXr$(a+EQ2U4V9)srvMA@{AKT*XWAgw<aOSvwKsfE)H%JuIddlbX_9
zG891cNHz7p*}W3sH5>VQcU2P-Q3kH~CzGDj6=hbMNfGX;_`(P@hW9@8jHN#h(iFi@
zEu<r4I1^rg)rB&f$qjM(A(=k+o%{l(27}E)Q@6&UEqv&TzIS5;KLnQa>ST#0mjP~=
z*;#ovS_ePnC1R68WRZivY%QtW|9Vclg&1-KPa_*hQBdM}Tj+^!S!6g`c6+<~Y~-H?
zmj1kkRtSDB+xSa@Hl6(#?&9d|3V*Jh{aL^PJf&3MF$#yHuNH*qWkcn@g!t+EiXZS$
zqO01sN}zPbbvD((;J{A<vR*93Ukq$%+|cXCTv7V=e74yhZYr{&_8UP3bdC<cMdUhy
zb*j^Z++?c|n2pMsfAaRzAp!iBLAuhu<%j2<V7NcHVvf2(Sls@pvuLn+_yq>9lz2`S
zG(Bk&Jw3l9!$a|hRXu~04mn2U<3JxT)#i*}h+uLJ8YC74$x?Ra!jb7FT~S21%Kx(?
zQzpk(@VgWbC1QolW$*{e$0fsG<*C%PjsSi#c#)?0{g#`{HwjDX@i{3A!=s3$Jqt#i
zt6MmxNE(r*)2oY+vgqPaRqw@=LRk`2A^)^7G`ItEC=3>j*+_~79U<Z+bC@<yb4Ln8
z<#1`F*OQFLilr~RgJqH5T`;i++-J29m=FK+_}LfP#3!eJ8C;XH?XpBHNsfIZ@sYU{
ze*T9*E_t%2m#Wj}KCK~u?=g>9xVOYI5p-in#XrNOHoc~bMnEp&?EaG31}@5;a(UbG
zT+~Db_!ZiP1O6}n7up4wfLWsL0G0p{aV1eb8=bv(NsxzPFAJkfgk6^X{*$|(-FHz)
zDQ*yaUn`q~>KD_3?8Vs6-@~{a^GL<Z+fbd_aYFv(xqDASDSKJ@`mAGKwU1xt*1e|w
zd-02VNu!=~RF^sb3?lS`z{Z&!2@fUOB-uLR>|4_)0eq>siHC)JgX5)gdFTJZ30H&z
z7gSmPYAl^+wqn5KYGU)X&CnhH`@XHVYwx#j+!9Fm2Woj~L;04c#lqD@yQ{|47t)ba
zHLvaIuan5-Kg~_5&E=iDjv$tt=d_U0_l3aXm4B}SfK#sk;7<Ghm;WzZdNy#Cb*p5l
zeZ_zGxozC&B^zdB)A}>SCA3tO{8;)8t%kmni@r1T+Z5KT(d83W(tQ?hl6c|!+d{3d
zJHfJ*U*gw_+FI^eKAUh|m=AMoYPbAo6y`bhrd+>dhQ%Jdf;%$mI5IU=hT|QzQPi=b
z74}>VV82;Vx+G-iyYAZ7{=>ZnDdIdH|Gu?4y5YgXSufoBBYJ`}&B8{4=rwB|<^ZM}
z@@}C+u9I4nOZGCrxG6y1KT5M8z!&;Qgl8K47adRnrXR#aH3)+@SyaLxaWrrbzbPeN
z`Qu*3QEc2kk9pm}6amPlBG15qc9USN5|R-n1>U|qiam(!Jo$WDZAKl<#Y4ee?eoUE
z?YsT!UF$XqE+Hd>a`2|QW{Xftxg+pCVJ)M{$Rucrwud6qN)cF-e3m{c6IS9U6KK%5
zSGnJYok6lsKeY~~@7dE#Y}n0&XJq>6`+PhU)YZN%0!tP<(ohLZv&lr32P)H~N$3xL
z9tzLZK0WLq%l2gien^gR!?n3%0%JXg26Tb+8PrFWkZU+G5S-UW&~#}2wTG#o=pS8J
zWj?J$5P)x<A_cn%0#!O9N8J(k9jx`R?As(QcPj+&AG2mx5G++Hc`JdQry{KNM$KIf
zyx?E$SoST#vjw`Dxj7=3WbRi$8b@i|&q0Emi>|bPp)&81Q?C4B1hSp1i&Yp=I={In
z;~ol(?=<&xUSFQFodW6pD2)QW_ZR_S5S~gJxv6d(BHI@yhL7K;T&>3bJaji6QDzvb
zTvB!>Dg`G}8nvzLjzIc#Lb!Oo32>PP*!F^chtX|3W!;-6Xjr-;P`Gy7N$*<4aWweh
zWW9b0OLV6KywoF-UO|P>TP_FTt9=(U!dEMO5tJoCbf?jhCR3ri9E^G@M%^Nv!b*qA
z@&Lo86SU_x5~o^)rgsULYKV*Og72;jUnUw%6%v(8YR^Pv;zUl}KjPyxxf7xo?R}Eb
z?>@@E541rg>*r3J9HTn|igQYaoG7anCnE0v&X(r|UuTg>O5{p_pS_bG(?ED;%v6Y?
zqVVrKoa{EiYkn&=>1Z9h1|aCBsDq`wBw#pxRp>+wK=-}FSQj@TwJ*D+KbHs6br!>K
zGf(^S_!<bLHxXQIr6V9_<jCHT0#0z4O=pPXKmEROYaKy(dco3PyS`7rv`rv=nBa=N
z?N`hV%-bAk$u<&k?tJM=uAn~dI%g$K%+g<{-V{+gA@9KlfVPAi9FgCkl>@EWC1?lW
z8)izgLuH1NQ~Gx7a>vo8Cxw9b>xN*vqgQYB)vxF<0l**BR&h(V1vk}{C#r&f%Y&($
zLTJM#p`EG?z~!4dXUSvj18!+ZheJa9L8P#M^i?#tIitV@R{tTVoBQRExElNc_<7zm
zB<pA)e0+$G0q{L9YgoJtxCGw80YJ%<s@w;G3i3&Uj!d0Sq!|81WF!Lr=)aK9i;Lzf
zw|P+k5UhKw=UOQ!hF`|HL+$2w`Qsq-&wD~;0l06U^(LSK+{ks^2EO?>Xzt=EyDZ}Z
zri}Z)?so()sAfF>AuBa-L2T(wopxfJQ}ZJT02ECB&n`#(WP$0z4`DsVn{TmXhV<Pw
zA6d_FeOI4nS7KSM!B!D>V}Cw4Yh{0z&3jwFn(XHPK3=bryqdjbm~gH=@c10<6|AC|
z*rMA-ykrwmymTc1a&Nm5Zrt%OIWg2YerhP<tv$07GkVZr0y$Z|u(+NSAv=6;_e`gL
zQqM6=d_S+OQ9_DJ&V)zGC{TBV2_b!hHQ!km|EtO)K7K)uyih;6W*@(175t{)yJuTK
z*Ef&zY03<rnMX0KtR0xo6n#u=f4qK^Ip`DO0cqFY+{+!|dMQNX+7}o)^FSx?&`E|&
zjT?r_$dUXKLc3Lhxio0=IPROx!0p!|1=~ym&;UQf%U9I;>vLh}XGU+^xfx}q!KHUl
zf$)p$$dAjcPq%dgT8uCBiI(Wk2K?LsayX~$U-tylxn2e_ztrTszTMbFk9yI3c}6*5
zt=t(mvTHkQ*#FMhyJ)xis*4ni1isx20c3R1j0sfg9MxW3+vkgX4$kXv%z~0CvsyKG
z)GGJl$;Hy1KN665e+b9I_1x`Rrli&=VNAu#sxIB_(KycMlk&%n@k5<oS*Jn=Zw%0{
zgBuP2@SPifQ@uyd#51njz%3=^7(ME2_`7~Adz8F5R?$mj*dM=O1KmYdLOg+>`xDo`
zo=HF@U3)Mu6(C#H2(@Od%+7{<e^JO@_vm>&tb4%S3i(HWB_3h%yNZw55=ZJPU7tMn
zGRLu#{cUwFM{?HF3h_t30Pywoy^q~mzB_|sMz4@7Z_UXE(@fM))}HX{XEr;_jim)1
z;74X3MF8oBOJmkP(UXk$^9y=R^p|fJPT!%&<cvs8uBE-V`sq$Z{P7e8%934sj8D3)
z&#o1&PySWc=8Strp8a}rFpBPoFLMBR-rt|=;}|czCTnnB%+(K@9iHQF%J)Si^dzpl
zh+(2lwb8(oYkj`3mv!^f(CfhoS0;M!{lrLp&*r_BnDLd<-!g%8HWG}!Q__;HollZi
zeeiH$oZ_3m$r#=h6Tu*-fUl|W@o;l?KC2|vzA0zt;YqJ92d!?*GYs#Pz5sAgEo#rD
z5f_b|AF+?RTcwwDCkH0zZ-s}wH-_C|N&~LogHPrnz8N_ewWqG&OFhS%{cmi3na~{_
zu}?;RO@{2BwB;68RP9mqpr$<z*rUpLlv{jGmTO6r2h=u|8eSyHos25O2}T%pTz-)F
z^VKK14p@Y`OS7N7)WyxrSb0&G275NxQbvQiNc`;z0Q8&T_|UyERrleW8y|E&yMF^q
zUYJ(2F(q^M{hpY<s`m4He0Kc1iIEqHpzIp7(hkG>>k39K;q^GdMWgn_BqMmsl)_7*
z0Yy8E88Xtd{?&jf_2kdZ)u#8uy-GKeKS4pgF}?S49cSTSljVEvosP{`Zgv6XKFrk9
z?mcZjaax7`vPuT+J=(cDk}298@-K$7Ree&~bIj35Uf!aZl@Tl0==`7uTo`R({xOsL
z50E?_CcQK3+6SaKza&)^m14{jxQfkPVTrkDuAnWLb<$KE6Q>e0L`xz2b1#0Il&ff*
zwq{D1ateeR$3*cLZA%{dBxuCrUuv74fU1cvzx?%MF=Oqbwupl`WLkc+NHzHLmu++%
zhi1Q#Bjm({Vw|8tEL?f@?e9f7IblH;I0?ASeIf>WSy8+o&jS&sxz#v7D&1%Q`2HRi
z0Gwdgv(WMW;2#Cw={k7#asb3HoZk_#9{om_`LjI-^a()UQSw7;Jgg`p7i4uEc0;+<
zo5?ChFYnm}89ho&`iTIrJAeSsrVv8x&t<uIw=j*IQ8h>ofC(8eeKLBL{8sNd1}U;f
z43yc0VyK>06yvU^aojhcxo$AxN*X{%4uSVZF1!mlCYhhfbVq;}aOioVt^JmS^O2?N
z+!tm(hz<6={~W_BvK?{}9KZB_^dN;X-8r$jGd{uUDTkgFY`XiwYUJ7}@5s9<4sx7d
z#ukji=sO*%{Z3`#xD_OzU3SObhd3Gl_zX1-m=ZO;JU<`61JHc%!?g#@_)8K2zFE5-
z5fB`~Y|6p!&px}*2CaaE&n?!h1x&rOj?Fj!o507TZ~!vB$YK26YJXkdGXp49f+Kl2
z?D5%f>DHX&gy0Z4Ut!>&!l9~Q{onG>85V3MFGDBq$0@@xlR4$I!{GqOs$8lu9MjnC
zc{K2EYptw~pOHnZMb2&RAuE9<SY%)5<szrLdVkIyM!vA*+{V2K)b~iG<iXyg9|ygK
zmV}>?TMteSNcFtI@Lr3Y>N^g#XvsnJ@j_pMHSpotkEF8wkUet6-7i*RY%BQ%%qD^2
zrA8cmr}h<|k&|uzc04QUBPOdVa8^d=hyKFk6J3C};VdmNimSqLcRjoG>o`8ckwb`D
zI@_iv>`pbsGSd=K!Y9LIxzc1gA)0gjQEMb!nkj`o6hfD7Td7bf^Mj%V77JIJaojh$
zh@X?n)HsCgLF7*Z(Lz$hw^cI_b-8Le^382m@R|mGb-1jllDN0~fBJ(HFj-G@Mn1`u
zF7g$p*iirU>71*Tgi}isG)6sa+HR8a8(lDq6IgF&VJjblk>Mo<e5E90yIu18=Ua1j
z7VljcZ<~wMd;)r*J+GZUW7|Wc8i&FJC(5igyg$nF`X`eGN7laFd(CS4NZ0v8C)%7i
zad;60({rAa{%1qvUYBZIet|ivy}9~S_00#pV5qPWRG6zqzV-I(@IlI<m6J5A;nkhB
z+aOiRt@!7y>g><iF+cYEd$(&I{-FbF(m@zF*;!{7-n<FYqNfEG)P$0&E}FWPK6bD4
zT!RDX1k5XaJvc(JD`)OB<$NkJIrJ%HprrX7EZLm=_m?;Na#8ls!U?9-gh60GuTPAg
z{W{lKP9Jc09w{?UqF3I1{Zb!*?FO9x1u#^o<yFakS2tAhW4pcwAHon8g0H?dYq1H;
zt~EVP$JQKCuNhIxzwe^-ECp)$IBh{!HHJ|%YgG30fgBUvG%`W2>@nIx3>3c(kmXsD
zfKIBkP>C4UpEag@`yl|88G)B&DXL*jImiotcck*Q2%6jEs>o2Imc@8lV#1FE;jgbZ
z4tiK2x?qw^Pt`K^u&PFt&Q@^?*5Quybl-?SVs&g*NT6&dG*3#gK{UC0E%}oE#aBYG
z=M@?TrZ)QA7)#e3<1}jMK<VI#8w2c`?Ta+zon1@Ul&ZU{7f)Rvep#e8o4mG$k@ciM
zSM96U>|~9w+`~Rh#zPZ>%XQrwe5)Z((cwgHY4S4+5UJQXki!0JZ*J(f8v~t<k%ZVE
z+4pls9mq;-+~<&7M)B``&>c@;>|GnY)8fQ;e15b|xU@mMNX3&Hl9r<KxN)d!&CPIJ
zUK<VsS+a&9ncZ9EkA9r86&l`=D_hB_>(;no<7TU*^G`=GTlWLbhEHdw<6+yK!dF+D
zm0X%Tj}rDI?@5Yoh2ujbFYm?$WFqw7gh|p><HTua>7us*vV5l7ctE7}+MjYhiC_IO
ztFHstn_9<5TbQfuIeO};3q6jdm<1i#{e?AbMB^t-Krw4kjs1E!bGa!IJ=n0VguS-?
z+v#OK8JH+C^oP2qWy{YN#btfb@5cASiL8<{AcluN!e!Nm!HJ7}Cp?(@vMF5p<Nbr-
zuM4@WD+qcl&fN-Vb3@d%IIkI#i;d$LItGbXgkzc&c_Cx#ujlZQCj6k~RqW+$1gG}>
zeO)k=fY!m^;|RHY%W&-C(r$3d5l(hHgbsuxWJMr8gn8K)wJ#n3)393^{F&+n;{4$Y
z46K+_Wo>faTa(!@0lo-sPr2N&*;8a+%Cp3=M4o-m?F7#OaM>K9{A&akUHU?BY8Tw3
zP+BmMpr(trhg<wByuij@Fn-DN&55kV&};-pGPUbLSQeXi9iyM%ISej;8bfnkpirOF
zs6*U+@MSLYm1l0j*54Rl7nzchSAB_-E09+B#^HC_TXXfhE+PtsuFT9#!V1&S`^`VV
z&rn(*@)=iC&M!|CMdJx%#~vaAwEsFp13I5)mbb!<!^63!v*6OcSu8;uP&EEtXHPIr
zI-rolnTju8=6@Y-d@ua(fBcY{UQvGDiwEr-^9l+c2<fHAGNo`Wl{F_y4nGtZiR6J$
zuMD+=Z(mjf_(TpS<{mK3x}tsP{B95l`&r}>{zrdV{K_)*=IsBqE>iZ<-2F3{{sYSY
z*Olkjp?p~=f2X2dj^gE`3Yt(p7aV0;%f~078sqQA>&G}kV55tq-2J#YiR>8f1e!Py
zCDNb9WuSS5x%DUtO5%dgO|4g{sV=dA$nokGy}j4|bKR;gM+@TdhFKvaLK6Tyf3Md*
z0Q<VzBdR+!SSp-{`vZ)!tgyLo;V%-DkLI4=fwwrlmdgO$hx#sJqB|uGXL0o_MDSQ#
zm<tJuFYs5?Ol?7ex14d`yjaj;{S`hGf^Wik^?D)rzw2@}!rp$3&G+=e_9?H0`LN*v
z*-F?T%;5TKCl|uqwoLPJg1Z#M6S=)%<Oq^?{CfCHF)5b91FhkZ76;}fmV@}bAt=GC
zU4nxp01szhU-VyC?Z1|}I`Bv!CGb18BhTdU6p}+9Jq$>5t`s<?!THG-!n0UVy40X_
zOW+|u&>^gHov_FBov-W`-c}DIk`gJ>P=CE@jSu4Zi)&$UlHi6lQp!_%;{=mG@XKQR
zJJ|X4Am6zz3u4H6Z3RTSz51$GB9Me$v{3S5<AxozJgLDQE5csYhn(T0q|Px(QsghE
zV=|9NFh_gs<j2Ui_KBR4$dF^YVOq_iW~bXoe|SrdQ{2F@6!wS09*2smA&dZL!4#e`
z(~0}YvsDGlcvFtkLB6cX`kpO{5hf-nc8g0BwxFC_+V!=ek{|DG&vCDaO80@UVAXXY
z4oMwTmK#&Ti)Ua>c^YkiNaYm&fEwdQDBaw?YroH`Rw=n=?6~u4<AEK5{WEnJA$+|{
zel<dOx-9wZ<9)1-Upm&J65~llE=fS!n`sPic^ZUfOALDY%ktoBI=KJu&p$u!X%zzC
zt?ECg2kjp@#}}nicV8Yspii}PjxUULT#4yO2V)^M5Gnu9ImApE60H7L^0<245QZE0
zS|?=mpS_WcbZ9)&<VLe$N&&ngSv~s=nv17wzb%;yMpd7b4?@5+z@P(AeE$1cN&5eE
zR`P0vj)2bd%W4F0i@o*xKv^WXPYlcG5556~rk`oDr}=UCK33Pv9!BrtDLXIBIR=`)
z+Vs#|4FAF?m~&7f+5bhr5vZ-+xIhyF9cNl9ns##}sd>oc#kAlA0cB6PX7)fW6oEO&
z+1-__^HAVeN=gcS_jFyJyCy>fiV*1#w~?52Pfg>TJz33ggG*V@;7H}Ncoe(AIlc4U
z$msWTfy$E4MBOBndQt%%ztO5EQ7IsX|MdHs@&QL+I<rGfI>iwsK#5e&)UxS>GbZ4k
zqtm3a)EvRJMQJ7gA`1Nzrz?P<Tk|i{1#J<aM;oYWlI(@1$R4u(`alQ)5Oc12U;J*N
zL0g`BV?GPTfri(*+3zg~wU6C2qv=946#pT#bf_bj7~T^rv4-+ds~f`zfD5&5w5qBm
z34O?}>dbc?EYX7sfUu9Nw7;VgTxu(^b&U1{zFJb0#)$o{qar+I#>PqvW2Ok0N?z-0
z-0GadQGPgCXAxPU*l2PkFtyXjZ*_R?SA!FgZ$dg~4I>^|I}veWAgx>zn|W)UnTm9<
ze?IMmmCPLD<uXOFQ9j<%7LKZ7_;_21#hWY-4tS+fjqH+IB>__<<;*cG`!I*bmE<O^
z>lkznd5&a0ZI9Y8bt-~fBkgiY_Gpi;Cm3rq8f3d#7ppN$Pzyn@@yL9?O%mSgad{MD
zZH)#J0_lZ>aAM32xJmnGR>jB7o)#fd>7T$oO^D@;`gj)Z5d5gda8XHu?+W{#Psd^<
zZP=Zh)k`?6WI?~V)RZWGyFhv-YQupR%tQl+pu@@u-p{88=w{|r0sQugU7z@|aqd<K
zJf_ovw$pAi+?R)<f3@#-#)OK&IJEWXpDziGF3lI9Y39ukk&cSj^H_(lNs1xGQPQB+
zl}PF#vNTYcmQ3wm31WaKE;^%}VB@&+)|p~n@S@FQxNj@hM&hF4?MgI=a<I<2&f118
zEr`Lx%~CI<vCvM4M{6Ig5NY}56&^GXg64IWBG&&L7XtraUwkJcSJ|lcOccdH_{9-K
z+TGw2Qx+L_P)p(1nJ_K{zjY1CN_iudwDs3mqM;+WEJ7BPsSL(V*<owa22#M;8e5tc
z%1D`EhPD50YqE(3-D=9!Hn+7xPBMmMu)CCTH#W00HU^5eB}e|S{#wx5#)@kvjiEG%
nt*xw}bi%V8f!iDpZgC0jsw>6!b_ByB1F)9Ik2IS5{_)=c$@531

