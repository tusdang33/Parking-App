Subject: [PATCH] create parking
---
Index: app/src/main/java/com/parking/parkingapp/common/BDX.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/common/BDX.kt b/app/src/main/java/com/parking/parkingapp/common/BDX.kt
deleted file mode 100644
--- a/app/src/main/java/com/parking/parkingapp/common/BDX.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ /dev/null	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -1,11 +0,0 @@
-package com.parking.parkingapp.common
-
-enum class BDX(
-    val lat: Double,
-    val long: Double,
-    val label: String
-) {
-    BDX1(21.009340598652518, 105.82435938510464, " Bãi đỗ xe Thái Hà"),
-    BDX2(21.03518123753838, 105.8100852675858, "Bãi đỗ xe Ba Đình"),
-    BDX3(21.014365407553424, 105.80357422198051, "Bãi đỗ xe Cầu Giấy")
-}
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/common/Stub.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/common/Stub.kt b/app/src/main/java/com/parking/parkingapp/common/Stub.kt
new file mode 100644
--- /dev/null	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
+++ b/app/src/main/java/com/parking/parkingapp/common/Stub.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -0,0 +1,270 @@
+package com.parking.parkingapp.common
+
+import com.parking.parkingapp.data.entity.ParkEntity
+
+val parkStub = listOf(
+    ParkEntity(
+        id = "hWrol",
+        name = "92 Khương trung",
+        address = "Thanh Xuân, Hà Nội, Vietnam",
+        detailAddress = "92 P.Khương Trung, Khương Trung, Thanh Xuân, Hà Nội, Vietnam",
+        image = "https://media.vneconomy.vn/images/upload/2023/12/27/bai-do-xe1.jpg",
+        maxSlot = 30,
+        currentSlot = 0,
+        lat = 20.998917,
+        long = 105.819134,
+        pricePerHour = 15000,
+        openTime = 6.0,
+        closeTime = 22.0,
+    ),
+    ParkEntity(
+        id = "mMniQ",
+        name = "302 Láng",
+        address = "Đống Đa, Hà Nội, Vietnam",
+        detailAddress = "Nhà 13 Ng. 302 Đ. Láng, Thịnh Quang, Đống Đa, Hà Nội, Vietnam",
+        image = "https://cqm.vn/wp-content/uploads/z3931945320771_d9d67ac273afb962bd36fff32b7de74d.jpg",
+        maxSlot = 40,
+        currentSlot = 0,
+        lat = 21.007536737112677,
+        long = 105.81600874518435,
+        pricePerHour = 17000,
+        openTime = 5.0,
+        closeTime = 23.0,
+    ),
+    ParkEntity(
+        id = "xThss",
+        name = "Vincom Nguyễn Chí Thanh",
+        address = "Đống Đa, Hà Nội, Vietnam",
+        detailAddress = "Vincom Center, 54A Đ. Nguyễn Chí Thanh, Láng Thượng, Đống Đa, Hà Nội, Vietnam",
+        image = "https://eparking.vn/wp-content/uploads/2024/03/tieu-chuan-bai-dau-xe-chung-cu.jpg",
+        maxSlot = 200,
+        currentSlot = 0,
+        lat = 21.022975888608478,
+        long = 105.80960262062881,
+        pricePerHour = 20000,
+        openTime = 6.0,
+        closeTime = 23.0,
+    ),
+    ParkEntity(
+        id = "jV1U0",
+        name = "10A Quang Trung",
+        address = "Hà Đông, Hà Nội, Vietnam",
+        detailAddress = "10A Đ. Quang Trung, P. Nguyễn Trãi, Hà Đông, Hà Nội, Vietnam",
+        image = "https://tl.cdnchinhphu.vn/344445545208135680/2022/6/27/img-5828-16563035923211045998597.jpg",
+        maxSlot = 100,
+        currentSlot = 0,
+        lat = 20.971804596502384,
+        long = 105.7762988260981,
+        pricePerHour = 12000,
+        openTime = 6.0,
+        closeTime = 22.0,
+    ),
+    ParkEntity(
+        id = "6uR83",
+        name = "29 Đình Thôn",
+        address = "Nam Từ Liêm, Hà Nội, Vietnam",
+        detailAddress = "29 Đ. Đình Thôn, Đình Thôn, Nam Từ Liêm, Hà Nội, Vietnam",
+        image = "https://autopro8.mediacdn.vn/134505113543774208/2022/9/25/screen-shot-2022-09-25-at-142119-166409050575816658016-1664101083021-1664101083198311437017.png",
+        maxSlot = 50,
+        currentSlot = 0,
+        21.02050818645722, 105.77859890528029,
+        pricePerHour = 12000,
+        openTime = 6.0,
+        closeTime = 22.0,
+    ),
+    ParkEntity(
+        id = "1ZPHh",
+        name = "104 Trần Bình",
+        address = "Cầu Giấy, Hà Nội, Vietnam",
+        detailAddress = "104 P. Trần Bình, Mỹ Đình, Cầu Giấy, Hà Nội, Vietnam",
+        image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTQlwPDfZWCr_VXOcEfAdkZqOkRnJdgTQqehQ&s",
+        maxSlot = 95,
+        currentSlot = 0,
+        21.03130815553721, 105.77691423450361,
+        pricePerHour = 10000,
+        openTime = 6.0,
+        closeTime = 23.0,
+    ),
+    ParkEntity(
+        id = "fOWG4",
+        name = "155 Cầu Giấy",
+        address = "Cầu Giấy, Hà Nội, Vietnam",
+        detailAddress = "2 Ng. 155 Đ. Cầu Giấy, Quan Hoa, Cầu Giấy, Hà Nội, Vietnam",
+        image = "https://www.secom.vn/wp-content/uploads/2024/06/bai-do-xe-thong-minh-la-gi.jpg",
+        maxSlot = 90,
+        currentSlot = 0,
+        21.032351009760763, 105.79763517780864,
+        pricePerHour = 13000,
+        openTime = 6.0,
+        closeTime = 23.0,
+    ),
+    ParkEntity(
+        id = "JH6dO",
+        name = "109 Trần Hưng Đạo",
+        address = "Hoàn Kiếm, Hà Nội, Vietnam",
+        detailAddress = "109 Trần Hưng Đạo, Cửa Nam, Hoàn Kiếm, Hà Nội, Vietnam",
+        image = "https://aozoom.com.vn/storage/uploads/news/27-07-2023/12088cb28c3db934de9b013689c5eb2233ffdc76.jpg",
+        maxSlot = 75,
+        currentSlot = 0,
+        21.02333109627214, 105.84197383659325,
+        pricePerHour = 25000,
+        openTime = 6.0,
+        closeTime = 23.0,
+    ),
+    ParkEntity(
+        id = "ndLvX",
+        name = "164 Nguyễn Văn Cừ",
+        address = "Long Biên, Hà Nội, Vietnam",
+        detailAddress = "164 Đ. Nguyễn Văn Cừ, Bồ Đề, Long Biên, Hà Nội 100000, Vietnam",
+        image = "https://maisonoffice.vn/wp-content/uploads/2024/08/bai-do-xe-hoi.jpg",
+        maxSlot = 75,
+        currentSlot = 0,
+        21.0429183546513, 105.87141241134204,
+        pricePerHour = 14000,
+        openTime = 7.0,
+        closeTime = 21.0,
+    ),
+    ParkEntity(
+        id = "ZyjGL",
+        name = "447 Nguyễn Văn Linh",
+        address = "Long Biên, Hà Nội, Vietnam",
+        detailAddress = "447 Đ. Nguyễn Văn Linh, Phúc Đồng, Long Biên, Hà Nội, Vietnam",
+        image = "https://acihome.vn/uploads/15/giai-phap-thiet-ke-bai-do-xe-tai-resort.jpg",
+        maxSlot = 85,
+        currentSlot = 0,
+        21.034871960097647, 105.90467265557372,
+        pricePerHour = 15000,
+        openTime = 6.0,
+        closeTime = 21.0,
+    ),
+    ParkEntity(
+        id = "gKsDd",
+        name = "244 Võ Chí Công",
+        address = "Tây Hồ, Hà Nội, Vietnam",
+        detailAddress = "244 Đ. Võ Chí Công, Xuân La, Tây Hồ, Hà Nội, Vietnam",
+        image = "https://shopping.saigoncentre.com.vn/Data/Sites/1/News/32/013.jpg",
+        maxSlot = 150,
+        currentSlot = 0,
+        21.05836438764959, 105.80468983026418,
+        pricePerHour = 18000,
+        openTime = 6.0,
+        closeTime = 23.5,
+    ),
+    ParkEntity(
+        id = "qt2O6",
+        name = "64 Đường Cầu",
+        address = "Bắc Từ Liêm, Hà Nội, Vietnam",
+        detailAddress = "64 Đường Cầu, Phúc Diễn, Bắc Từ Liêm, Hà Nội, Vietnam",
+        image = "https://acihome.com.vn/uploads/15/thiet-ke-bai-do-xe-oto-thong-dung.jpg",
+        maxSlot = 130,
+        currentSlot = 0,
+        21.04644969978108, 105.7499930621451,
+        pricePerHour = 16000,
+        openTime = 6.0,
+        closeTime = 22.5,
+    ),
+    ParkEntity(
+        id = "VAqkx",
+        name = "238 Đại Từ",
+        address = "Hoàng Mai, Hà Nội, Vietnam",
+        detailAddress = "238 P. Đại Từ, Đại Kim, Hoàng Mai, Hà Nội, Vietnam",
+        image = "https://decocrete.eu/wp-content/uploads/2022/05/e0139c815e509f0ec641.jpg",
+        maxSlot = 100,
+        currentSlot = 0,
+        20.97059898298291, 105.83238071228075,
+        pricePerHour = 19000,
+        openTime = 6.0,
+        closeTime = 21.5,
+    ),
+    ParkEntity(
+        id = "y3viX",
+        name = "147 Tân Mai",
+        address = "Hoàng Mai, Hà Nội, Vietnam",
+        detailAddress = "147 P. Tân Mai, Tân Mai, Hoàng Mai, Hà Nội, Vietnam",
+        image = "https://media-cdn-v2.laodong.vn/storage/newsportal/2023/7/21/1219522/DJI_0943.JPG",
+        maxSlot = 80,
+        currentSlot = 0,
+        20.9834752461977, 105.85121888456176,
+        pricePerHour = 19000,
+        openTime = 6.0,
+        closeTime = 21.5,
+    ),
+    ParkEntity(
+        id = "qXP9X",
+        name = "89 Giải Phóng",
+        address = "Hai Bà Trưng, Hà Nội, Vietnam",
+        detailAddress = "89 Đ. Giải Phóng, Đồng Tâm, Hai Bà Trưng, Hà Nội, Vietnam",
+        image = "https://www.galaxyoffice.vn/wp-content/uploads/2024/06/bai-giu-xe-oto-quan-thanh-xuan.jpg",
+        maxSlot = 230,
+        currentSlot = 0,
+        21.002792973389525, 105.84157241140929,
+        pricePerHour = 19000,
+        openTime = 6.0,
+        closeTime = 23.5,
+    ),
+    ParkEntity(
+        id = "fuv2M",
+        name = "208 Xã Đàn",
+        address = "Đống Đa, Hà Nội, Vietnam",
+        detailAddress = "208 P. Xã Đàn, Phương Liên, Đống Đa, Hà Nội, Vietnam",
+        image = "https://uniquevietnam.vn/wp-content/uploads/2021/07/quang-cao-tai-bai-gui-xe-16-1207x800.jpg",
+        maxSlot = 85,
+        currentSlot = 0,
+        21.011767813942946, 105.83686714065693,
+        pricePerHour = 19000,
+        openTime = 6.0,
+        closeTime = 23.5,
+    ),
+    ParkEntity(
+        id = "03rXX",
+        name = "290 Kim Mã",
+        address = "Ba Đình, Hà Nội, Vietnam",
+        detailAddress = "11 Ng. 290 P. Kim Mã, Kim Mã, Ba Đình, Hà Nội, Vietnam",
+        image = "https://visaho.vn/upload_images/images/2023/12/23/quy-dinh-cho-do-xe-chung-cu.png",
+        maxSlot = 65,
+        currentSlot = 0,
+        21.031932863951198, 105.82247199822677,
+        pricePerHour = 15000,
+        openTime = 6.0,
+        closeTime = 22.5,
+    ),
+    ParkEntity(
+        id = "9dhXa",
+        name = "67 Văn Cao",
+        address = "Ba Đình, Hà Nội, Vietnam",
+        detailAddress = "67 Đ. Văn Cao, Liễu Giai, Ba Đình, Hà Nội, Vietnam",
+        image = "https://nld.mediacdn.vn/2019/7/14/bai-xe-ngam--15630735571051888097108.jpg",
+        maxSlot = 55,
+        currentSlot = 0,
+        21.04021907992392, 105.81614233134084,
+        pricePerHour = 18000,
+        openTime = 6.0,
+        closeTime = 21.5,
+    ),
+    ParkEntity(
+        id = "O5zQ2",
+        name = "26 Nguyễn Đình Hoàn",
+        address = "Cầu Giấy, Hà Nội, Vietnam",
+        detailAddress = "26 P. Nguyễn Đình Hoàn, Nghĩa Đô, Cầu Giấy, Hà Nội, Vietnam",
+        image = "https://eparking.vn/wp-content/uploads/2024/03/tieu-chuan-ve-kich-thuoc-cho-do-xe-trong-tang-ham.jpg",
+        maxSlot = 80,
+        currentSlot = 0,
+        21.044913506915076, 105.80517486271579,
+        pricePerHour = 20000,
+        openTime = 6.0,
+        closeTime = 23.0,
+    ),
+    ParkEntity(
+        id = "DvR3t",
+        name = "1A Âu Cơ",
+        address = "Tây Hồ, Hà Nội, Vietnam",
+        detailAddress = "1A Đ. Âu Cơ, Quảng An, Tây Hồ, Hà Nội, Vietnam",
+        image = "https://image.nhatime.vn/blogs/image/tieu-chuan-bai-dau-xe-chung-cu-moi-nhat_2022051314194058490300.jpeg",
+        maxSlot = 70,
+        currentSlot = 0,
+        21.059269003094666, 105.83393366232016,
+        pricePerHour = 18000,
+        openTime = 6.0,
+        closeTime = 23.0,
+    ),
+)
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/entity/FireUserEntity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/entity/FireUserEntity.kt b/app/src/main/java/com/parking/parkingapp/data/entity/FireUserEntity.kt
--- a/app/src/main/java/com/parking/parkingapp/data/entity/FireUserEntity.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/data/entity/FireUserEntity.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -6,7 +6,5 @@
 @Parcelize
 data class FireUserEntity(
     val id: String = "",
-    val name: String? = null,
-    val email: String = "",
-    val image: String? = null
+    val email: String = ""
 ): Parcelable
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/entity/ParkEntity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/entity/ParkEntity.kt b/app/src/main/java/com/parking/parkingapp/data/entity/ParkEntity.kt
--- a/app/src/main/java/com/parking/parkingapp/data/entity/ParkEntity.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/data/entity/ParkEntity.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -6,6 +6,7 @@
     val id: String = "",
     val name: String = "",
     val address: String = "",
+    val detailAddress: String = "",
     val image: String = "",
     val maxSlot: Int = 0,
     val currentSlot: Int = 0,
Index: app/src/main/java/com/parking/parkingapp/data/model/MyRentedPark.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/model/MyRentedPark.kt b/app/src/main/java/com/parking/parkingapp/data/model/MyRentedPark.kt
--- a/app/src/main/java/com/parking/parkingapp/data/model/MyRentedPark.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/data/model/MyRentedPark.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -1,7 +1,10 @@
 package com.parking.parkingapp.data.model
 
+import android.os.Parcelable
 import com.parking.parkingapp.data.entity.RentParkEntity
+import kotlinx.parcelize.Parcelize
 
+@Parcelize
 data class MyRentedPark(
     val id: String,
     val userId: String,
@@ -10,7 +13,7 @@
     val endTime: String,
     val totalPay: Int,
     val rentedDate: String
-)
+): Parcelable
 
 fun RentParkEntity.toMyRentedPark(): MyRentedPark {
     return MyRentedPark(
Index: app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt b/app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt
--- a/app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -9,6 +9,7 @@
     val id: String,
     val name: String,
     val address: String,
+    val detailAddress: String,
     val image: String,
     val maxSlot: Int,
     val currentSlot: Int,
@@ -24,6 +25,7 @@
         this.id,
         this.name,
         this.address,
+        this.detailAddress,
         this.image,
         this.maxSlot,
         this.currentSlot,
@@ -40,6 +42,7 @@
         this.id,
         this.name,
         this.address,
+        this.detailAddress,
         this.image,
         this.maxSlot,
         this.currentSlot,
Index: app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt b/app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt
--- a/app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -7,6 +7,7 @@
 
 interface ParkRepository {
     fun getPark(): Flow<Resource<List<ParkModel>>>
-    suspend fun rentPark(myRentedPark: MyRentedPark): Resource<Unit>
+    suspend fun rentPark(myRentedPark: MyRentedPark): Resource<MyRentedPark>
     fun getMyRentedPark(userId: String): Flow<Resource<List<MyRentedPark>>>
+    fun upDate()
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt b/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt
--- a/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -32,7 +32,7 @@
     ): Resource<FireUserEntity> {
         return try {
             val fireUser = firebaseAuth.signInWithEmailAndPassword(email, pass).await().user!!
-            val user = FireUserEntity(fireUser.uid, fireUser.displayName, email, null)
+            val user = FireUserEntity(fireUser.uid, email)
             Resource.Success(user)
         } catch (e: Exception) {
             Resource.Fail(errorMessage = e.message)
@@ -54,7 +54,7 @@
     ): Resource<FireUserEntity> {
         return try {
             val fireUser = firebaseAuth.createUserWithEmailAndPassword(email, pass).await().user!!
-            val user = FireUserEntity(fireUser.uid, "", email, null)
+            val user = FireUserEntity(fireUser.uid, email)
             fireStoreUserCollection.document(fireUser.uid)
                 .collection(CollectionRef.INFO.value)
                 .document(fireUser.uid)
Index: app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt b/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt
--- a/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -2,9 +2,13 @@
 
 import android.util.Log
 import com.google.firebase.firestore.CollectionReference
+import com.google.firebase.firestore.SetOptions
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
 import com.parking.parkingapp.common.CollectionRef
 import com.parking.parkingapp.common.FireCollectionRef
 import com.parking.parkingapp.common.Resource
+import com.parking.parkingapp.common.parkStub
 import com.parking.parkingapp.data.entity.ParkEntity
 import com.parking.parkingapp.data.entity.RentParkEntity
 import com.parking.parkingapp.data.model.MyRentedPark
@@ -42,15 +46,17 @@
             awaitClose()
         }
 
-    override suspend fun rentPark(myRentedPark: MyRentedPark): Resource<Unit> {
+    override suspend fun rentPark(myRentedPark: MyRentedPark): Resource<MyRentedPark> {
         return try {
+            val result: MyRentedPark
             userCollectionRef
                 .document(myRentedPark.userId)
                 .collection(CollectionRef.MY_PARK.value)
                 .document().apply {
-                    set(myRentedPark.copy(id = this.id).toRentParkEntity()).await()
+                    result = myRentedPark.copy(id = this.id)
+                    set(result.toRentParkEntity()).await()
                 }
-            Resource.Success(Unit)
+            Resource.Success(result)
         } catch (e: Exception) {
             Resource.Fail(e.message)
         }
@@ -67,11 +73,23 @@
                             it.toObject(RentParkEntity::class.java)?.toMyRentedPark()
                         }))
                     }.addOnFailureListener {
-                        Log.e("tudm", "getMyRentedPark:${it.message} ", )
+                        trySend(Resource.Fail(it.message))
                     }
             }.onFailure {
                 send(Resource.Fail(it.message))
             }
             awaitClose()
         }
+
+    override fun upDate() {
+        Firebase.firestore.runTransaction { transaction ->
+            parkStub.forEach { park ->
+                transaction.set(
+                    parkCollectionRef.document(park.id),
+                    park,
+                    SetOptions.merge()
+                )
+            }
+        }
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/BaseFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/BaseFragment.kt b/app/src/main/java/com/parking/parkingapp/view/BaseFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/BaseFragment.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/BaseFragment.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -30,6 +30,10 @@
         savedInstanceState: Bundle?
     ) {
         super.onViewCreated(view, savedInstanceState)
+        (activity as? MainActivity)?.apply {
+            isShowHeader(false)
+            isShowMenu(false)
+        }
         initViews()
         initActions()
         intiData()
Index: app/src/main/java/com/parking/parkingapp/view/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/MainActivity.kt b/app/src/main/java/com/parking/parkingapp/view/MainActivity.kt
--- a/app/src/main/java/com/parking/parkingapp/view/MainActivity.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/MainActivity.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -48,11 +48,18 @@
                 }
             }
         })
+
         supportFragmentManager.findFragmentById(R.id.nav_host_fragment)?.childFragmentManager?.let {
             it.addOnBackStackChangedListener {
                 handleOnScreenChange(it.fragments.lastOrNull())
             }
         }
+        binding.headerMenu.setOnClickListener {
+            ((supportFragmentManager
+                .findFragmentById(R.id.drawer_menu) as? NavHostFragment)
+                ?.childFragmentManager
+                ?.primaryNavigationFragment as? DrawerMenuFragment)?.open()
+        }
     }
 
     private fun handleOnScreenChange(screen: Fragment?) {
@@ -95,6 +102,10 @@
         binding.header.hasVisible = isShow
     }
 
+    fun isShowMenu(isShow: Boolean) {
+        binding.headerMenu.hasVisible = isShow
+    }
+
 
     override fun inflateBinding(): ActivityMainBinding = ActivityMainBinding.inflate(layoutInflater)
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/map/MapViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/map/MapViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/map/MapViewModel.kt
--- a/app/src/main/java/com/parking/parkingapp/view/map/MapViewModel.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/map/MapViewModel.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -1,6 +1,5 @@
 package com.parking.parkingapp.view.map
 
-import android.util.Log
 import androidx.lifecycle.viewModelScope
 import com.mapbox.geojson.Point
 import com.parking.parkingapp.common.BaseViewModel
@@ -57,7 +56,7 @@
             delay(500)
             directionRepository.getSearchSuggestion(query).collect {
                 _searchSuggestion.value = _park.filter { park ->
-                    park.name.contains(query, true)
+                    park.name.contains(query, true) || park.address.contains(query, true)
                 }.map { park -> park.toAutoCompleteModel() } + (it ?: listOf())
             }
         }
@@ -69,7 +68,7 @@
     ) {
         debounceJob?.cancel()
         debounceJob = viewModelScope.launch {
-            delay(500)
+            delay(1000)
             _parkInRange.value = _park.filter {
                 val e = currentCoordinate.distanceTo(
                     Point.fromLngLat(it.long, it.lat)
Index: app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt b/app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -1,11 +1,9 @@
 package com.parking.parkingapp.view.map
 
-import android.Manifest
 import android.annotation.SuppressLint
-import android.content.pm.PackageManager
+import android.app.Activity.RESULT_OK
 import android.graphics.Bitmap
 import android.graphics.BitmapFactory
-import android.graphics.Canvas
 import android.os.Bundle
 import android.text.Editable
 import android.text.TextWatcher
@@ -17,12 +15,14 @@
 import android.view.View.VISIBLE
 import android.view.ViewGroup
 import android.view.animation.AnimationUtils
-import androidx.core.app.ActivityCompat
+import android.widget.Toast
+import androidx.activity.result.contract.ActivityResultContracts
 import androidx.core.content.ContextCompat
 import androidx.fragment.app.setFragmentResultListener
 import androidx.fragment.app.viewModels
 import androidx.lifecycle.Lifecycle
 import androidx.lifecycle.LifecycleCoroutineScope
+import androidx.lifecycle.lifecycleScope
 import androidx.lifecycle.repeatOnLifecycle
 import androidx.recyclerview.widget.LinearLayoutManager
 import com.bumptech.glide.Glide
@@ -36,6 +36,7 @@
 import com.mapbox.maps.CameraOptions
 import com.mapbox.maps.EdgeInsets
 import com.mapbox.maps.ImageHolder
+import com.mapbox.maps.LayerPosition
 import com.mapbox.maps.MapboxMap
 import com.mapbox.maps.Style
 import com.mapbox.maps.extension.style.expressions.dsl.generated.interpolate
@@ -67,7 +68,6 @@
 import com.mapbox.navigation.core.lifecycle.MapboxNavigationObserver
 import com.mapbox.navigation.core.lifecycle.requireMapboxNavigation
 import com.parking.parkingapp.R
-import com.parking.parkingapp.common.BDX
 import com.parking.parkingapp.common.hasVisible
 import com.parking.parkingapp.common.hideKeyboard
 import com.parking.parkingapp.data.model.ParkModel
@@ -75,9 +75,10 @@
 import com.parking.parkingapp.view.BaseFragment
 import com.parking.parkingapp.view.MainActivity
 import com.parking.parkingapp.view.map.ui.PDivierItemDecoration
-import com.parking.parkingapp.view.map.ui.ParkingMarker
 import com.parking.parkingapp.view.park.ParkDetailFragment
 import dagger.hilt.android.AndroidEntryPoint
+import kotlinx.coroutines.Job
+import kotlinx.coroutines.delay
 import kotlinx.coroutines.launch
 
 @AndroidEntryPoint
@@ -93,6 +94,9 @@
         )
         const val ROUTE_FOUND_LAYER_ID = "route-found-layer-id"
         const val ROUTE_FOUND_SOURCE_ID = "route-found-source-id"
+        const val ROAD_LAYER = "road-label"
+        const val SYMBOL_LAYER_ID = "symbol_layer_id"
+        const val SYMBOL_SOURCE_ID = "symbol_source_id"
         const val LOCATION_PERMISSION_REQUEST_CODE = 113
 
     }
@@ -105,6 +109,19 @@
     private var markedLocation: Point? = null
     private var currentShowingPark: ParkModel? = null
     private var pointAnnotationManager: PointAnnotationManager? = null
+    private var isRouteHasBeenDraw = false
+
+    private val gpsRequestLauncher = registerForActivityResult(
+        ActivityResultContracts.StartIntentSenderForResult()
+    ) { result ->
+        if (result.resultCode == RESULT_OK) {
+            Toast.makeText(requireContext(), getString(R.string.gps_is_on), Toast.LENGTH_SHORT)
+                .show()
+        } else {
+            Toast.makeText(requireContext(), getString(R.string.gps_is_off), Toast.LENGTH_SHORT)
+                .show()
+        }
+    }
 
     override fun inflateBinding(
         inflater: LayoutInflater,
@@ -124,17 +141,43 @@
 
             override fun onDetached(mapboxNavigation: MapboxNavigation) {
                 mapboxNavigation.unregisterRoutesObserver(routesObserver)
+
             }
         }
     )
 
     override fun initViews() {
-        checkLocationPermission()
+        checkLocationPermission(requireContext(), requireActivity())
+        requestGPS(
+            requireActivity(),
+            gpsRequestLauncher
+        )
         (activity as? MainActivity)?.apply {
             isShowHeader(false)
         }
-
+        binding.mapView.mapboxMap.apply {
+            loadStyle(
+                style(Style.MAPBOX_STREETS) {
+                    +lineLayerPreset(ROUTE_FOUND_LAYER_ID, ROUTE_FOUND_SOURCE_ID)
+                    +geoJsonSource(ROUTE_FOUND_SOURCE_ID)
+                }
+            ) {
+                it.apply {
+                    moveStyleLayer(ROUTE_FOUND_LAYER_ID, LayerPosition(null, ROAD_LAYER, null))
+                }
+                updateCamera(currentLocation ?: DEFAULT_LOCATION)
+                subscribeCameraChanged {
+                    viewModel.getParkInRange(cameraState.center)
+                }
+            }
+        }
         binding.mapView.apply {
+            pointAnnotationManager = annotations.createPointAnnotationManager(
+                AnnotationConfig(
+                    layerId = SYMBOL_LAYER_ID,
+                    sourceId = SYMBOL_SOURCE_ID
+                )
+            )
             compass.enabled = false
             logo.enabled = false
             attribution.enabled = false
@@ -157,28 +200,19 @@
                     }.toJson()
                 )
                 enabled = true
+                layerAbove = SYMBOL_LAYER_ID
                 addOnIndicatorPositionChangedListener { position ->
-                    currentLocation = position
-                }
-            }
-            pointAnnotationManager = annotations.createPointAnnotationManager(
-                AnnotationConfig()
-            )
-        }
-        binding.mapView.mapboxMap.apply {
-            loadStyle(
-                style(Style.MAPBOX_STREETS) {
-                    +lineLayerPreset(ROUTE_FOUND_LAYER_ID, ROUTE_FOUND_SOURCE_ID)
-                    +geoJsonSource(ROUTE_FOUND_SOURCE_ID)
+                    if (currentLocation == null) {
+                        currentLocation = position
+                    } else if (currentLocation!!.distanceTo(position) > 5) {
+                        updateRidingRoute(position)
+                        currentLocation = position
+                    }
                 }
-            ) {
-                dumbMarker()
-                updateCamera(currentLocation ?: DEFAULT_LOCATION)
-                subscribeCameraChanged {
-                    viewModel.getParkInRange(cameraState.center)
-                }
             }
+
         }
+
 
         binding.mapSuggestRcv.apply {
             layoutManager = LinearLayoutManager(requireContext())
@@ -190,36 +224,6 @@
         }
     }
 
-    private fun dumbMarker() {
-        addAnnotationToMap(
-            Point.fromLngLat(BDX.BDX1.long, BDX.BDX1.lat),
-            createBitmapFromView(
-                ParkingMarker.Builder(requireContext())
-                    .slotStatus(ParkingMarker.Companion.SLOT.S100)
-                    .suggestStatus(ParkingMarker.Companion.STATUS.GOOD)
-                    .build()
-            )
-        )
-        addAnnotationToMap(
-            Point.fromLngLat(BDX.BDX2.long, BDX.BDX2.lat),
-            createBitmapFromView(
-                ParkingMarker.Builder(requireContext())
-                    .slotStatus(ParkingMarker.Companion.SLOT.S0)
-                    .suggestStatus(ParkingMarker.Companion.STATUS.BAD)
-                    .build()
-            )
-        )
-        addAnnotationToMap(
-            Point.fromLngLat(BDX.BDX3.long, BDX.BDX3.lat),
-            createBitmapFromView(
-                ParkingMarker.Builder(requireContext())
-                    .slotStatus(ParkingMarker.Companion.SLOT.S50)
-                    .suggestStatus(ParkingMarker.Companion.STATUS.NORMAL)
-                    .build()
-            )
-        )
-    }
-
     override fun initActions() {
         binding.mapMenu.setOnClickListener {
             getDrawerMenu()?.open()
@@ -239,6 +243,7 @@
         }
         placeAutocompleteAdapter.apply {
             setOnItemClick { point ->
+                binding.mapSearchEdt.setText("")
                 markedLocation = point
                 transformRightIcon(true)
                 goToLocation(
@@ -297,6 +302,9 @@
             addClickListener(
                 OnPointAnnotationClickListener { pointAnnotation ->
                     handleOnMarkerClick(pointAnnotation)
+                    isRouteHasBeenDraw = false
+                    markedLocation = pointAnnotation.point
+                    transformRightIcon(true)
                     false
                 }
             )
@@ -382,6 +390,17 @@
         }
     }
 
+    private var updateRidingJob: Job? = null
+    private fun updateRidingRoute(position: Point) {
+        if (updateRidingJob?.isCompleted == false) return
+        updateRidingJob = viewLifecycleOwner.lifecycleScope.launch {
+            if (isRouteHasBeenDraw && markedLocation != null) {
+                direction(position, markedLocation!!)
+            }
+            delay(1000L)
+        }
+    }
+
     private fun direction(
         start: Point,
         end: Point
@@ -411,6 +430,7 @@
                 routes: List<NavigationRoute>,
                 routerOrigin: String
             ) {
+                isRouteHasBeenDraw = true
                 drawRoute(
                     binding.mapView.mapboxMap,
                     routes.firstOrNull()?.directionsRoute?.geometry() ?: ""
@@ -519,8 +539,6 @@
                 true
             )
         }
-        Log.e("tudm", "addAnnotationToMap:$markerView $pointAnnotationManager ")
-        if (clearOldMarker) pointAnnotationManager?.deleteAll()
         val pointAnnotationOptions: PointAnnotationOptions = PointAnnotationOptions()
             .withPoint(point)
             .withIconImage(markerIcon)
@@ -546,40 +564,4 @@
         )
         (activity as MainActivity).isFirstTimeLogin = false
     }
-
-    private fun checkLocationPermission() {
-        if (ContextCompat.checkSelfPermission(
-                requireContext(),
-                Manifest.permission.ACCESS_FINE_LOCATION
-            )
-            != PackageManager.PERMISSION_GRANTED
-        ) {
-            ActivityCompat.requestPermissions(
-                requireActivity(),
-                arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),
-                LOCATION_PERMISSION_REQUEST_CODE
-            )
-        }
-    }
-
-    private fun createBitmapFromView(
-        view: View,
-        divScale: Double = 2.5
-    ): Bitmap {
-        view.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED)
-        view.layout(0, 0, view.measuredWidth, view.measuredHeight)
-        val bitmap = Bitmap.createBitmap(
-            view.measuredWidth,
-            view.measuredHeight,
-            Bitmap.Config.ARGB_8888
-        )
-        val canvas = Canvas(bitmap)
-        view.draw(canvas)
-        return Bitmap.createScaledBitmap(
-            bitmap,
-            (view.measuredWidth / divScale).toInt(),
-            (view.measuredHeight / divScale).toInt(),
-            true
-        )
-    }
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt b/app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt
--- a/app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -1,7 +1,25 @@
 package com.parking.parkingapp.view.map
 
+import android.Manifest
 import android.annotation.SuppressLint
+import android.app.Activity
+import android.content.Context
+import android.content.IntentSender
+import android.content.pm.PackageManager
+import android.graphics.Bitmap
+import android.graphics.Canvas
 import android.graphics.Color
+import android.view.View
+import androidx.activity.result.ActivityResultLauncher
+import androidx.activity.result.IntentSenderRequest
+import androidx.core.app.ActivityCompat
+import androidx.core.content.ContextCompat
+import com.google.android.gms.common.api.ResolvableApiException
+import com.google.android.gms.location.Granularity
+import com.google.android.gms.location.LocationRequest
+import com.google.android.gms.location.LocationServices
+import com.google.android.gms.location.LocationSettingsRequest
+import com.google.android.gms.location.Priority
 import com.mapbox.geojson.Point
 import com.mapbox.maps.extension.style.StyleExtensionImpl
 import com.mapbox.maps.extension.style.layers.generated.LineLayer
@@ -13,6 +31,7 @@
 import java.time.LocalTime
 import java.time.format.DateTimeFormatter
 import java.util.Calendar
+import java.util.Locale
 
 fun StyleExtensionImpl.Builder.lineLayerPreset(
     layerId: String,
@@ -57,7 +76,7 @@
     startTime: String,
     endTime: String
 ): Boolean {
-    val formatter = DateTimeFormatter.ofPattern("h:mma")
+    val formatter = DateTimeFormatter.ofPattern("h:mma", Locale.US)
     val start = LocalTime.parse(startTime, formatter)
     val end = LocalTime.parse(endTime, formatter)
     val now = LocalTime.now()
@@ -69,6 +88,20 @@
     }
 }
 
+@SuppressLint("NewApi")
+fun isCurrentTimeInRange(
+    startTime: LocalTime,
+    endTime: LocalTime,
+    currentTime: LocalTime? = null
+): Boolean {
+    val now = currentTime ?: LocalTime.now()
+    return if (startTime.isBefore(endTime)) {
+        now.isAfter(startTime) && now.isBefore(endTime)
+    } else {
+        now.isAfter(startTime) || now.isBefore(endTime)
+    }
+}
+
 fun calculateDecimalTimeDifference(startTime: Calendar, endTime: Calendar): Double {
     val diffInMillis = endTime.timeInMillis - startTime.timeInMillis
     return diffInMillis.toDouble() / (1000 * 60 * 60)
@@ -77,4 +110,68 @@
 fun Double.roundToOneDecimal(): Double {
     val decimalFormat = DecimalFormat("#.#")
     return decimalFormat.format(this).toDouble()
+}
+
+fun checkLocationPermission(
+    context: Context,
+    activity: Activity
+) {
+    if (ContextCompat.checkSelfPermission(
+            context, Manifest.permission.ACCESS_FINE_LOCATION
+        ) != PackageManager.PERMISSION_GRANTED
+    ) {
+        ActivityCompat.requestPermissions(
+            activity,
+            arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),
+            MapboxFragment.LOCATION_PERMISSION_REQUEST_CODE
+        )
+    }
+}
+
+fun requestGPS(
+    activity: Activity,
+    requestLauncher: ActivityResultLauncher<IntentSenderRequest>
+) {
+    val settingsRequest = LocationSettingsRequest.Builder()
+        .addLocationRequest(LocationRequest.Builder(Priority.PRIORITY_HIGH_ACCURACY, 1000).apply {
+            setMinUpdateDistanceMeters(1000F)
+            setGranularity(Granularity.GRANULARITY_PERMISSION_LEVEL)
+            setWaitForAccurateLocation(true)
+        }.build())
+        .build()
+
+    LocationServices.getSettingsClient(activity)
+        .checkLocationSettings(settingsRequest)
+        .addOnFailureListener { exception ->
+            if (exception is ResolvableApiException) {
+                try {
+                    val intentSenderRequest = IntentSenderRequest.Builder(exception.resolution)
+                        .build()
+                    requestLauncher.launch(intentSenderRequest)
+                } catch (sendEx: IntentSender.SendIntentException) {
+                    sendEx.printStackTrace()
+                }
+            }
+        }
+}
+
+fun createBitmapFromView(
+    view: View,
+    divScale: Double = 2.5
+): Bitmap {
+    view.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED)
+    view.layout(0, 0, view.measuredWidth, view.measuredHeight)
+    val bitmap = Bitmap.createBitmap(
+        view.measuredWidth,
+        view.measuredHeight,
+        Bitmap.Config.ARGB_8888
+    )
+    val canvas = Canvas(bitmap)
+    view.draw(canvas)
+    return Bitmap.createScaledBitmap(
+        bitmap,
+        (view.measuredWidth / divScale).toInt(),
+        (view.measuredHeight / divScale).toInt(),
+        true
+    )
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingAdapter.kt b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingAdapter.kt
--- a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingAdapter.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingAdapter.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -8,6 +8,7 @@
 import com.parking.parkingapp.R
 import com.parking.parkingapp.data.model.MyRentedPark
 import com.parking.parkingapp.databinding.MyParkingItemBinding
+import com.parking.parkingapp.view.map.formatCurrency
 import com.parking.parkingapp.view.map.formatCurrencyPerHour
 
 class MyParkingAdapter : RecyclerView.Adapter<MyParkingAdapter.MyParkingViewHolder>() {
@@ -29,7 +30,7 @@
                 .into(binding.myParkImage)
             binding.myParkName.text = myRentedPark.park.name
             binding.myParkAddress.text = myRentedPark.park.address
-            binding.myParkPrice.text = formatCurrencyPerHour(myRentedPark.totalPay)
+            binding.myParkPrice.text = formatCurrency(myRentedPark.totalPay.toDouble())
             binding.myParkTime.text = binding.root.context.getString(
                 R.string.my_park_time,
                 myRentedPark.startTime, myRentedPark.endTime
Index: app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -3,14 +3,12 @@
 import android.view.LayoutInflater
 import android.view.ViewGroup
 import androidx.fragment.app.viewModels
-import androidx.lifecycle.Lifecycle
 import androidx.lifecycle.LifecycleCoroutineScope
-import androidx.lifecycle.repeatOnLifecycle
 import androidx.recyclerview.widget.LinearLayoutManager
 import com.parking.parkingapp.databinding.FragmentMyParkingBinding
 import com.parking.parkingapp.view.BaseFragment
+import com.parking.parkingapp.view.MainActivity
 import dagger.hilt.android.AndroidEntryPoint
-import kotlinx.coroutines.flow.collect
 import kotlinx.coroutines.launch
 
 @AndroidEntryPoint
@@ -24,6 +22,12 @@
     ): FragmentMyParkingBinding = FragmentMyParkingBinding.inflate(inflater, container, false)
 
     override fun initViews() {
+        (activity as? MainActivity)?.apply {
+            isShowHeader(true)
+            setOnHeaderBack()
+            setHeaderTitle("My Parking")
+            isShowMenu(true)
+        }
         binding.myParkingRcv.apply {
             layoutManager = LinearLayoutManager(requireContext())
             adapter = myParkingAdapter
@@ -31,17 +35,17 @@
     }
 
     override fun initActions() {
+        //suppress
     }
 
     override fun intiData() {
+        viewModel.fetchData()
     }
 
     override fun obverseFromViewModel(scope: LifecycleCoroutineScope) {
         scope.launch {
             viewModel.myPark.collect {
-                repeatOnLifecycle(Lifecycle.State.STARTED) {
-                    myParkingAdapter.updateData(it)
-                }
+                myParkingAdapter.updateData(it)
             }
         }
     }
Index: app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingViewModel.kt
--- a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingViewModel.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingViewModel.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -22,17 +22,17 @@
     private val _myPark = MutableStateFlow<List<MyRentedPark>>(listOf())
     val myPark = _myPark.asStateFlow()
 
-    init {
+    fun fetchData() {
         viewModelScope.launch {
             authRepository.getCurrentUser<FirebaseUser>().success { user ->
                 user?.let { fuser ->
                     parkRepository.getMyRentedPark(fuser.uid).collect { result ->
                         result.success {
-                            _myPark.value = it ?: listOf()
+                            _myPark.value = it?.toList() ?: listOf()
                         }
                     }
                 }
             }
         }
-    }
-}
\ No newline at end of file
+
+    }    }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -3,7 +3,6 @@
 import android.annotation.SuppressLint
 import android.app.TimePickerDialog
 import android.os.Bundle
-import android.util.Log
 import android.view.LayoutInflater
 import android.view.ViewGroup
 import androidx.fragment.app.setFragmentResult
@@ -12,6 +11,9 @@
 import androidx.navigation.fragment.findNavController
 import com.bumptech.glide.Glide
 import com.parking.parkingapp.R
+import com.parking.parkingapp.common.State
+import com.parking.parkingapp.common.hasVisible
+import com.parking.parkingapp.data.model.MyRentedPark
 import com.parking.parkingapp.data.model.ParkModel
 import com.parking.parkingapp.databinding.FragmentParkDetailBinding
 import com.parking.parkingapp.view.BaseFragment
@@ -24,9 +26,7 @@
 import com.parking.parkingapp.view.map.isCurrentTimeInRange
 import com.parking.parkingapp.view.map.roundToOneDecimal
 import dagger.hilt.android.AndroidEntryPoint
-import java.time.LocalDate
-import java.time.LocalTime
-import java.time.format.DateTimeFormatter
+import kotlinx.coroutines.launch
 import java.util.Calendar
 
 @AndroidEntryPoint
@@ -62,7 +62,7 @@
                 .into(binding.parkImage)
             binding.parkName.text = it.name
             binding.parkAddress.text = it.address
-            binding.detailAddress.text = it.address
+            binding.detailAddress.text = it.detailAddress
             binding.parkPrice.text = formatCurrencyPerHour(it.pricePerHour)
             binding.parkDistance.text = arguments?.getString(ParkModel::class.java.name + "distance")
             val startTime = formatTime(it.openTime)
@@ -96,7 +96,11 @@
                 currentPark!!,
                 binding.pickedStartTime.text.toString(),
                 binding.pickedEndTime.text.toString(),
-                binding.totalTime.text.split(" ").first().toDouble()
+                binding.totalTime.text.split(" ").first().toDouble(),
+                isCurrentTimeInRange(
+                    formatTime(currentPark!!.openTime),
+                    formatTime(currentPark!!.closeTime)
+                )
             )
         }
     }
@@ -118,6 +122,14 @@
                     parkModel = currentPark!!,
                     isStartTime = true
                 )
+                if (startTime == null) {
+                    binding.parkError.apply {
+                        text = getString(R.string.start_time_not_valid)
+                        hasVisible = true
+                    }
+                    return@TimePickerDialog
+                }
+                binding.parkError.hasVisible = false
                 val time =
                     String.format(TIME_FORMAT, startTime!!.get(Calendar.HOUR_OF_DAY), startTime!!.get(Calendar.MINUTE))
                 binding.pickedStartTime.text = time
@@ -137,6 +149,14 @@
                     parkModel = currentPark!!,
                     isStartTime = false
                 )
+                if (endTime == null) {
+                    binding.parkError.apply {
+                        text = getString(R.string.end_time_not_valid)
+                        hasVisible = true
+                    }
+                    return@TimePickerDialog
+                }
+                binding.parkError.hasVisible = false
                 val time =
                     String.format(TIME_FORMAT, endTime!!.get(Calendar.HOUR_OF_DAY), endTime!!.get(Calendar.MINUTE))
                 binding.pickedEndTime.text = time
@@ -175,89 +195,56 @@
         }
     }
 
-    @SuppressLint("NewApi")
-    private fun Calendar.validatePickedTime(
-        startTime: Calendar?,
-        endTime: Calendar?,
-        parkModel: ParkModel,
-        isStartTime: Boolean
-    ): Calendar {
-        val formatter = DateTimeFormatter.ofPattern("h:mma")
-        val start = LocalTime.parse(formatTime(parkModel.openTime), formatter)
-        val close = LocalTime.parse(formatTime(parkModel.closeTime), formatter)
-        val pickedLocalTime = LocalTime.of(this.get(Calendar.HOUR_OF_DAY), this.get(Calendar.MINUTE))
-        val pickedStartTime = startTime?.let { LocalTime.of(it.get(Calendar.HOUR_OF_DAY), it.get(Calendar.MINUTE)) }
-        val pickedEndTime = endTime?.let { LocalTime.of(it.get(Calendar.HOUR_OF_DAY), it.get(Calendar.MINUTE)) }
-        val isInTime = isCurrentTimeInRange(formatTime(parkModel.openTime), formatTime(parkModel.closeTime))
-        val now = LocalTime.now()
-        return if (isStartTime) {
-            if (pickedLocalTime.isBefore(start)) {
-                Calendar.getInstance().apply {
-                    set(
-                        Calendar.HOUR_OF_DAY, if (isInTime) now.hour
-                        else start.hour
-                    )
-                    set(
-                        Calendar.MINUTE, if (isInTime) now.minute
-                        else start.minute
-                    )
-                }
-            } else if (pickedLocalTime.isBefore(now) || pickedLocalTime.isAfter(close)) {
-                Calendar.getInstance().apply {
-                    set(Calendar.HOUR_OF_DAY, now.hour)
-                    set(Calendar.MINUTE, now.minute)
-                }
-            } else if (pickedEndTime != null && pickedLocalTime.isAfter(pickedEndTime)) {
-                Calendar.getInstance().apply {
-                    val nowPlusHour = pickedEndTime.hour + 1
-                    val hour = if (nowPlusHour < close.hour) nowPlusHour else close.hour
-                    set(Calendar.HOUR_OF_DAY, hour)
-                    set(Calendar.MINUTE, now.minute)
-                }
-            } else {
-                this
-            }
-        } else {
-            if (pickedLocalTime.isAfter(close)) {
-                Calendar.getInstance().apply {
-                    set(Calendar.HOUR_OF_DAY, close.hour)
-                    set(Calendar.MINUTE, close.minute)
-                }
-            } else if (pickedLocalTime.isBefore(now)
-                || pickedLocalTime.isBefore(start)
-            ) {
-                Calendar.getInstance().apply {
-                    val nowPlusHour = now.hour + 1
-                    val hour = if ((nowPlusHour) < close.hour) {
-                        if (pickedStartTime != null && nowPlusHour <= pickedStartTime.hour) {
-                            pickedStartTime.hour + 1
-                        } else {
-                            nowPlusHour
-                        }
-                    } else {
-                        close.hour
-                    }
-                    set(Calendar.HOUR_OF_DAY, hour)
-                    set(Calendar.MINUTE, now.minute)
-                }
-            } else if (pickedStartTime != null && pickedLocalTime <= pickedStartTime) {
-                Calendar.getInstance().apply {
-                    val hour = if ((pickedStartTime.hour + 1) < close.hour) pickedStartTime.hour + 1 else close.hour
-                    set(Calendar.HOUR_OF_DAY, hour)
-                    set(Calendar.MINUTE, now.minute)
-                }
-            } else {
-                this
-            }
-        }
-    }
-
     override fun intiData() {
-
+        //suppress
     }
 
     override fun obverseFromViewModel(scope: LifecycleCoroutineScope) {
+        scope.launch {
+            viewModel.singleEvent.collect { state ->
+                loadingVisible(state == State.Loading)
+                handleError((state as? State.Error)?.error as? RentError)
+                when (state) {
+                    is State.Error -> {
+                        handleError(state.error as RentError)
+                    }
+
+                    State.Idle -> {
+                        //suppress
+                    }
 
-    }
+                    State.Loading -> {
+                        //suppress
+                    }
 
+                    is State.Success -> findNavController().navigate(
+                        R.id.action_parkDetailFragment_to_parkReservationFragment,
+                        Bundle().apply {
+                            putParcelable(
+                                MyRentedPark::class.java.name,
+                                (state.success as RentSuccess).result
+                            )
+                        }
+                    )
+                }
+            }
+        }
+    }
+
+    private fun loadingVisible(isLoading: Boolean) {
+        binding.parkLoading.hasVisible = isLoading
+        binding.checkoutButton.hasVisible = !isLoading
+    }
+
+    private fun handleError(rentError: RentError?) {
+        if (rentError != null) {
+            binding.parkError.apply {
+                text = rentError.errorMessage
+                hasVisible = true
+            }
+        } else {
+            binding.parkError.hasVisible = false
+        }
+
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/park/ParkDetailUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailUtils.kt b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailUtils.kt
new file mode 100644
--- /dev/null	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
+++ b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailUtils.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -0,0 +1,93 @@
+package com.parking.parkingapp.view.park
+
+import android.annotation.SuppressLint
+import com.parking.parkingapp.data.model.ParkModel
+import com.parking.parkingapp.view.map.formatTime
+import com.parking.parkingapp.view.map.isCurrentTimeInRange
+import java.time.LocalTime
+import java.time.format.DateTimeFormatter
+import java.util.Calendar
+import java.util.Locale
+
+@SuppressLint("NewApi")
+fun Calendar.validatePickedTime(
+    startTime: Calendar?,
+    endTime: Calendar?,
+    parkModel: ParkModel,
+    isStartTime: Boolean
+): Calendar? {
+    val formatter = DateTimeFormatter.ofPattern("h:mma", Locale.US)
+    val start = LocalTime.parse(formatTime(parkModel.openTime), formatter)
+    val close = LocalTime.parse(formatTime(parkModel.closeTime), formatter)
+    val pickedLocalTime = LocalTime.of(this.get(Calendar.HOUR_OF_DAY), this.get(Calendar.MINUTE))
+    val pickedStartTime = startTime?.let {
+        LocalTime.of(
+            it.get(Calendar.HOUR_OF_DAY), it.get(
+                Calendar.MINUTE
+            )
+        )
+    }
+    val pickedEndTime = endTime?.let {
+        LocalTime.of(
+            it.get(Calendar.HOUR_OF_DAY),
+            it.get(Calendar.MINUTE)
+        )
+    }
+    val isInTime = isCurrentTimeInRange(
+        formatTime(parkModel.openTime),
+        formatTime(parkModel.closeTime)
+    )
+    val now = LocalTime.now()
+    val isOpen = isCurrentTimeInRange(start, close)
+    return if (isStartTime) {
+        when {
+            pickedLocalTime.isBefore(start) -> {
+                Calendar.getInstance().apply {
+                    set(
+                        Calendar.HOUR_OF_DAY, if (isInTime) now.hour
+                        else start.hour
+                    )
+                    set(
+                        Calendar.MINUTE, if (isInTime) now.minute
+                        else start.minute
+                    )
+                }
+            }
+
+            !isCurrentTimeInRange(now, close, pickedLocalTime) -> {
+                if (isOpen) {
+                    Calendar.getInstance().apply {
+                        set(Calendar.HOUR_OF_DAY, now.hour)
+                        set(Calendar.MINUTE, now.minute)
+                    }
+                } else {
+                    Calendar.getInstance().apply {
+                        set(Calendar.HOUR_OF_DAY, start.hour)
+                        set(Calendar.MINUTE, start.minute)
+                    }
+                }
+            }
+
+            pickedEndTime != null && pickedLocalTime.isAfter(pickedEndTime) -> {
+                null
+            }
+
+            else -> this
+        }
+    } else {
+        when {
+            pickedLocalTime.isAfter(close) -> {
+                Calendar.getInstance().apply {
+                    set(Calendar.HOUR_OF_DAY, close.hour)
+                    set(Calendar.MINUTE, close.minute)
+                }
+            }
+
+            pickedLocalTime.isBefore(now) || pickedLocalTime.isBefore(start) -> null
+
+            pickedStartTime != null && pickedLocalTime <= pickedStartTime -> null
+
+            else -> this
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/park/ParkDetailViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailViewModel.kt
--- a/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailViewModel.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailViewModel.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -1,10 +1,12 @@
 package com.parking.parkingapp.view.park
 
 import android.annotation.SuppressLint
-import android.util.Log
 import androidx.lifecycle.viewModelScope
 import com.google.firebase.auth.FirebaseUser
 import com.parking.parkingapp.common.BaseViewModel
+import com.parking.parkingapp.common.ErrorDataState
+import com.parking.parkingapp.common.State
+import com.parking.parkingapp.common.SuccessDataState
 import com.parking.parkingapp.common.fail
 import com.parking.parkingapp.common.success
 import com.parking.parkingapp.data.model.MyRentedPark
@@ -14,7 +16,6 @@
 import dagger.hilt.android.lifecycle.HiltViewModel
 import kotlinx.coroutines.launch
 import java.time.LocalDate
-import java.time.LocalTime
 import javax.inject.Inject
 
 @HiltViewModel
@@ -24,8 +25,15 @@
 ) : BaseViewModel() {
 
     @SuppressLint("NewApi")
-    fun submitCheckout(parkModel: ParkModel, startTime: String, endTime: String, totalPay: Double) =
+    fun submitCheckout(
+        parkModel: ParkModel,
+        startTime: String,
+        endTime: String,
+        totalPay: Double,
+        isSubmitInOpenTime: Boolean
+    ) =
         viewModelScope.launch {
+            sendSingleEvent(State.Loading)
             authRepository.getCurrentUser<FirebaseUser>().success { user ->
                 user?.also {
                     parkRepository.rentPark(
@@ -35,15 +43,24 @@
                             park = parkModel,
                             startTime = startTime,
                             endTime = endTime,
-                            totalPay = totalPay.toInt(),
-                            rentedDate = LocalDate.now().toString()
+                            totalPay = (totalPay * parkModel.pricePerHour).toInt(),
+                            rentedDate = if (isSubmitInOpenTime) LocalDate.now().toString()
+                            else LocalDate.now().plusDays(1).toString()
                         )
-                    ).success {
-                        Log.e("tudm", "submitCheckout: ", )
-                    }.fail {
-                        Log.e("tudm", "fail:$it ", )
+                    ).success { result ->
+                        sendSingleEvent(State.Success(RentSuccess(result)))
+                    }.fail { error ->
+                        sendSingleEvent(State.Error(RentError(error)))
                     }
                 }
             }
         }
-}
\ No newline at end of file
+}
+
+data class RentSuccess(
+    val result: MyRentedPark?
+): SuccessDataState
+
+data class RentError(
+    val errorMessage: String?
+): ErrorDataState
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/park/ParkReservationFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/park/ParkReservationFragment.kt b/app/src/main/java/com/parking/parkingapp/view/park/ParkReservationFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/park/ParkReservationFragment.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/park/ParkReservationFragment.kt	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -1,14 +1,15 @@
 package com.parking.parkingapp.view.park
 
-import android.os.Bundle
-import androidx.fragment.app.Fragment
 import android.view.LayoutInflater
-import android.view.View
 import android.view.ViewGroup
 import androidx.lifecycle.LifecycleCoroutineScope
+import androidx.navigation.fragment.findNavController
 import com.parking.parkingapp.R
+import com.parking.parkingapp.data.model.MyRentedPark
 import com.parking.parkingapp.databinding.FragmentParkReservationBinding
 import com.parking.parkingapp.view.BaseFragment
+import com.parking.parkingapp.view.MainActivity
+import com.parking.parkingapp.view.map.formatCurrency
 
 class ParkReservationFragment: BaseFragment<FragmentParkReservationBinding>() {
     override fun inflateBinding(
@@ -17,18 +18,31 @@
     ): FragmentParkReservationBinding = FragmentParkReservationBinding.inflate(inflater, container, false)
 
     override fun initViews() {
-
+        (activity as? MainActivity)?.apply {
+            isShowHeader(false)
+            setOnHeaderBack()
+        }
+        (arguments?.getParcelable(MyRentedPark::class.java.name) as? MyRentedPark)?.let {
+            binding.reservationParkName.text = it.park.name
+            binding.reservationParkAddress.text = it.park.address
+            binding.reservationParkBill.text = formatCurrency(it.totalPay.toDouble()).uppercase()
+            binding.reservationParkId.text = getString(R.string.booking_id, it.id)
+        }
     }
 
     override fun initActions() {
-
+        binding.doneButton.setOnClickListener {
+            findNavController().navigate(
+                R.id.action_parkReservationFragment_to_mapHolderFragment
+            )
+        }
     }
 
     override fun intiData() {
-
+        //suppress
     }
 
     override fun obverseFromViewModel(scope: LifecycleCoroutineScope) {
-
+        //suppress
     }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/res/layout/activity_main.xml	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -15,7 +15,8 @@
             android:layout_height="wrap_content"
             android:paddingHorizontal="16dp"
             android:paddingVertical="12dp"
-            android:visibility="gone">
+            android:visibility="gone"
+            tools:visibility="visible">
 
             <LinearLayout
                 android:id="@+id/header_back"
@@ -49,6 +50,15 @@
                 android:textColor="@color/black"
                 android:textSize="18sp"
                 android:textStyle="bold" />
+
+            <ImageView
+                android:id="@+id/header_menu"
+                android:layout_width="30dp"
+                android:layout_height="30dp"
+                android:layout_gravity="end"
+                android:src="@drawable/menu"
+                android:visibility="gone"
+                tools:ignore="ContentDescription" />
         </FrameLayout>
 
         <View
Index: app/src/main/res/layout/fragment_drawer_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_drawer_menu.xml b/app/src/main/res/layout/fragment_drawer_menu.xml
--- a/app/src/main/res/layout/fragment_drawer_menu.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/res/layout/fragment_drawer_menu.xml	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -62,7 +62,7 @@
             android:layout_height="wrap_content"
             android:text="Username"
             android:textColor="@color/white"
-            android:textSize="16sp"
+            android:textSize="20sp"
             android:textStyle="bold" />
 
         <Space
Index: app/src/main/res/layout/fragment_park_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_park_detail.xml b/app/src/main/res/layout/fragment_park_detail.xml
--- a/app/src/main/res/layout/fragment_park_detail.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/res/layout/fragment_park_detail.xml	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -351,7 +351,20 @@
                 android:textStyle="bold" />
         </FrameLayout>
 
+        <TextView
+            android:id="@+id/park_error"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Wrong"
+            android:textColor="@color/red"
+            android:visibility="gone"
+            app:layout_constraintBottom_toTopOf="@id/park_button_container"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            tools:visibility="visible" />
+
         <FrameLayout
+            android:id="@+id/park_button_container"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:layout_marginHorizontal="20dp"
@@ -363,7 +376,7 @@
             app:layout_constraintTop_toBottomOf="@+id/park_time_container">
 
             <ProgressBar
-                android:id="@+id/login_loading"
+                android:id="@+id/park_loading"
                 android:layout_width="50dp"
                 android:layout_height="50dp"
                 android:layout_gravity="center"
Index: app/src/main/res/layout/fragment_park_reservation.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_park_reservation.xml b/app/src/main/res/layout/fragment_park_reservation.xml
--- a/app/src/main/res/layout/fragment_park_reservation.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/res/layout/fragment_park_reservation.xml	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -1,10 +1,12 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:background="@color/sub_yellow"
+    android:gravity="center"
+    android:orientation="vertical"
     tools:context=".view.park.ParkReservationFragment">
 
     <FrameLayout
@@ -16,7 +18,6 @@
         android:paddingVertical="20dp">
 
         <LinearLayout
-            android:id="@+id/bill_info"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:divider="@drawable/divider_vertical"
@@ -30,7 +31,7 @@
             <TextView
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:text="Thanh toan thanh cong"
+                android:text="@string/payment_success"
                 android:textColor="@color/black"
                 android:textSize="26sp"
                 android:textStyle="bold" />
@@ -41,6 +42,7 @@
                 android:background="@color/gray" />
 
             <TextView
+                android:id="@+id/reservation_park_bill"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:text="500.000d"
@@ -51,7 +53,7 @@
             <TextView
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:text="Ban da dat cho thanh cong"
+                android:text="@string/rent_success"
                 android:textColor="@color/black"
                 android:textSize="18sp" />
 
@@ -61,9 +63,10 @@
                 android:src="@drawable/success" />
 
             <TextView
+                android:id="@+id/reservation_park_id"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
-                android:text="BOOKING ID : 324994587" />
+                android:text="@string/booking_id" />
 
             <LinearLayout
                 android:layout_width="match_parent"
@@ -95,6 +98,7 @@
             </LinearLayout>
 
             <TextView
+                android:id="@+id/reservation_park_name"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:text="Bai do Xe Long Thanh"
@@ -103,10 +107,21 @@
                 android:textStyle="bold" />
 
             <TextView
+                android:id="@+id/reservation_park_address"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:text="Long Thanh, TP.Ho Chi Minh" />
         </LinearLayout>
     </FrameLayout>
 
-</FrameLayout>
\ No newline at end of file
+    <androidx.appcompat.widget.AppCompatButton
+        android:id="@+id/done_button"
+        style="@style/BlackFilledButton"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="15dp"
+        android:layout_marginVertical="20dp"
+        android:backgroundTint="@color/green"
+        android:text="Done" />
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_profile.xml b/app/src/main/res/layout/fragment_profile.xml
--- a/app/src/main/res/layout/fragment_profile.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/res/layout/fragment_profile.xml	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -92,12 +92,13 @@
         android:textSize="16sp" />
 
     <EditText
-        android:enabled="false"
         android:id="@+id/profile_email"
         style="@style/EditTextWithOutline"
+        android:textColor="@color/gray"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:autofillHints=""
+        android:enabled="false"
         android:inputType="textEmailSubject"
         tools:ignore="LabelFor" />
 
Index: app/src/main/res/layout/my_parking_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/my_parking_item.xml b/app/src/main/res/layout/my_parking_item.xml
--- a/app/src/main/res/layout/my_parking_item.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/res/layout/my_parking_item.xml	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -4,18 +4,17 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:id="@+id/park_info_container"
     android:layout_width="match_parent"
-    android:layout_height="80dp"
-    android:layout_marginHorizontal="20dp"
+    android:layout_height="100dp"
+    android:layout_marginVertical="15dp"
+    android:layout_marginHorizontal="10dp"
     android:background="@drawable/white_rounded_outline"
     android:elevation="4dp"
-    android:padding="10dp"
-    android:visibility="gone"
-    tools:visibility="visible">
+    android:padding="10dp">
 
     <ImageView
         android:id="@+id/my_park_image"
-        android:layout_width="50dp"
-        android:layout_height="50dp"
+        android:layout_width="80dp"
+        android:layout_height="80dp"
         android:src="@drawable/parking_placeholder"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintStart_toStartOf="parent"
@@ -30,6 +29,7 @@
         android:text="Bai do Long Thanh"
         android:textColor="@color/black"
         android:textStyle="bold"
+        android:textSize="18sp"
         app:layout_constraintBottom_toTopOf="@id/my_park_address"
         app:layout_constraintStart_toEndOf="@id/my_park_image"
         app:layout_constraintTop_toTopOf="parent" />
@@ -40,15 +40,15 @@
         android:layout_height="wrap_content"
         android:layout_marginStart="10dp"
         android:text="Hanoi, VietNam"
-        android:textSize="10sp"
+        android:textSize="14sp"
         app:layout_constraintStart_toEndOf="@id/my_park_image"
         app:layout_constraintTop_toBottomOf="@id/my_park_name"
         tools:ignore="SmallSp" />
 
     <ImageView
         android:id="@+id/my_park_coin"
-        android:layout_width="10dp"
-        android:layout_height="10dp"
+        android:layout_width="@dimen/sub_icon_park_card"
+        android:layout_height="@dimen/sub_icon_park_card"
         android:layout_marginStart="10dp"
         android:background="@drawable/coin"
         app:layout_constraintBottom_toBottomOf="@id/my_park_price"
@@ -63,7 +63,7 @@
         android:layout_marginHorizontal="3dp"
         android:text="500.000d"
         android:textColor="@color/black"
-        android:textSize="10sp"
+        android:textSize="@dimen/sub_string_park_card"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toStartOf="@id/my_park_dot1"
         app:layout_constraintStart_toEndOf="@id/my_park_coin"
@@ -84,8 +84,8 @@
 
     <ImageView
         android:id="@+id/my_park_time_icon"
-        android:layout_width="10dp"
-        android:layout_height="10dp"
+        android:layout_width="@dimen/sub_icon_park_card"
+        android:layout_height="@dimen/sub_icon_park_card"
         android:src="@drawable/time"
         app:layout_constraintBottom_toBottomOf="@id/my_park_price"
         app:layout_constraintEnd_toStartOf="@id/my_park_time"
@@ -100,7 +100,7 @@
         android:layout_marginHorizontal="3dp"
         android:text="10:00-13:00"
         android:textColor="@color/black"
-        android:textSize="10sp"
+        android:textSize="@dimen/sub_string_park_card"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintStart_toEndOf="@id/my_park_time_icon"
         app:layout_constraintEnd_toStartOf="@id/my_park_dot2"
@@ -121,8 +121,8 @@
 
     <ImageView
         android:id="@+id/my_park_date_icon"
-        android:layout_width="10dp"
-        android:layout_height="10dp"
+        android:layout_width="@dimen/sub_icon_park_card"
+        android:layout_height="@dimen/sub_icon_park_card"
         android:src="@drawable/calendar"
         app:layout_constraintBottom_toBottomOf="@id/my_park_price"
         app:layout_constraintEnd_toStartOf="@id/my_park_date"
@@ -137,7 +137,7 @@
         android:layout_marginHorizontal="3dp"
         android:text="22/11/20224"
         android:textColor="@color/black"
-        android:textSize="10sp"
+        android:textSize="@dimen/sub_string_park_card"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintStart_toEndOf="@id/my_park_date_icon"
         app:layout_constraintTop_toBottomOf="@id/my_park_address"
Index: app/src/main/res/navigation/nav_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/nav_graph.xml b/app/src/main/res/navigation/nav_graph.xml
--- a/app/src/main/res/navigation/nav_graph.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/res/navigation/nav_graph.xml	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -13,6 +13,8 @@
             app:destination="@id/registerFragment" />
         <action
             android:id="@+id/action_loginFragment_to_mapHolderFragment"
+            app:popUpToInclusive="true"
+            app:popUpTo="@id/mapHolderFragment"
             app:destination="@id/mapHolderFragment" />
     </fragment>
     <fragment
@@ -58,5 +60,20 @@
         android:id="@+id/parkDetailFragment"
         android:name="com.parking.parkingapp.view.park.ParkDetailFragment"
         android:label="fragment_park_detail"
-        tools:layout="@layout/fragment_park_detail" />
+        tools:layout="@layout/fragment_park_detail" >
+        <action
+            android:id="@+id/action_parkDetailFragment_to_parkReservationFragment"
+            app:destination="@id/parkReservationFragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/parkReservationFragment"
+        android:name="com.parking.parkingapp.view.park.ParkReservationFragment"
+        android:label="fragment_park_reservation"
+        tools:layout="@layout/fragment_park_reservation" >
+        <action
+            android:id="@+id/action_parkReservationFragment_to_mapHolderFragment"
+            app:popUpToInclusive="true"
+            app:popUpTo="@id/mapHolderFragment"
+            app:destination="@id/mapHolderFragment" />
+    </fragment>
 </navigation>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/res/values/strings.xml	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -34,4 +34,11 @@
     <string name="detail_checkout">Thanh toán %s</string>
     <string name="detail_checkout_default">Thanh toán 0Đ</string>
     <string name="my_park_time">%s - %s</string>
+    <string name="payment_success">Thanh toán thành công</string>
+    <string name="rent_success">Bạn đã đặt chỗ thành công</string>
+    <string name="booking_id">BOOKING ID : %s</string>
+    <string name="gps_is_on">GPS đã được bật</string>
+    <string name="gps_is_off">GPS không được bật</string>
+    <string name="start_time_not_valid">Thời gian bắt đầu không hợp lệ</string>
+    <string name="end_time_not_valid">Thời gian kết thúc không hợp lệ</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values/values.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/values.xml b/app/src/main/res/values/values.xml
new file mode 100644
--- /dev/null	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
+++ b/app/src/main/res/values/values.xml	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <dimen name="sub_string_park_card">12sp</dimen>
+    <dimen name="sub_icon_park_card">12dp</dimen>
+</resources>
\ No newline at end of file
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/gradle/libs.versions.toml	(revision c7958867ae818305fa0d5c3ed4f573f43bcbd3ef)
@@ -11,6 +11,7 @@
 constraintlayout = "2.1.4"
 firebase-bom = "33.4.0"
 googleServices = "4.4.2"
+googleServicesLocation = "21.0.1"
 firebaseStorage = "21.0.1"
 firebaseAuth = "23.0.0"
 firebaseFirestore = "25.1.0"
@@ -50,7 +51,7 @@
 androidx-navigation-ui = { group = "androidx.navigation", name = "navigation-ui-ktx", version.ref = "navigationFragment" }
 google-service-map = { group = "com.google.android.gms", name = "play-services-maps", version.ref = "google-service" }
 map-support = { group = "com.google.android.libraries.places", name = "places", version.ref = "map-support" }
-google-service-location = { group = "com.google.android.gms", name = "play-services-location", version.ref = "googleServices" }
+google-service-location = { group = "com.google.android.gms", name = "play-services-location", version.ref = "googleServicesLocation" }
 retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
 retrofit-converter = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit" }
 api-logger = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "api-logger" }
