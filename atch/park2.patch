Subject: [PATCH] rent park
---
Index: app/src/main/java/com/parking/parkingapp/common/FireCollectionRef.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/common/FireCollectionRef.kt b/app/src/main/java/com/parking/parkingapp/common/FireCollectionRef.kt
--- a/app/src/main/java/com/parking/parkingapp/common/FireCollectionRef.kt	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/java/com/parking/parkingapp/common/FireCollectionRef.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -7,5 +7,8 @@
 annotation class FireCollectionRef(val collectionRef: CollectionRef)
 
 enum class CollectionRef(val value: String) {
-    PARK("park")
+    PARK("park"),
+    USER("user"),
+    INFO("info"),
+    MY_PARK("my_park"),
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/entity/Park.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/entity/Park.kt b/app/src/main/java/com/parking/parkingapp/data/entity/ParkEntity.kt
rename from app/src/main/java/com/parking/parkingapp/data/entity/Park.kt
rename to app/src/main/java/com/parking/parkingapp/data/entity/ParkEntity.kt
--- a/app/src/main/java/com/parking/parkingapp/data/entity/Park.kt	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/java/com/parking/parkingapp/data/entity/ParkEntity.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -2,7 +2,7 @@
 
 import java.io.Serializable
 
-data class Park(
+data class ParkEntity(
     val id: String = "",
     val name: String = "",
     val address: String = "",
Index: app/src/main/java/com/parking/parkingapp/data/entity/RentParkEntity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/entity/RentParkEntity.kt b/app/src/main/java/com/parking/parkingapp/data/entity/RentParkEntity.kt
new file mode 100644
--- /dev/null	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/data/entity/RentParkEntity.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -0,0 +1,13 @@
+package com.parking.parkingapp.data.entity
+
+import java.io.Serializable
+
+data class RentParkEntity(
+    val id: String = "",
+    val userId: String = "",
+    val park: ParkEntity = ParkEntity(),
+    val startTime: String = "",
+    val endTime: String = "",
+    val totalPay: Int = 0,
+    val rentedDate: String = ""
+): Serializable
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/model/MyRentedPark.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/model/MyRentedPark.kt b/app/src/main/java/com/parking/parkingapp/data/model/MyRentedPark.kt
new file mode 100644
--- /dev/null	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/data/model/MyRentedPark.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -0,0 +1,37 @@
+package com.parking.parkingapp.data.model
+
+import com.parking.parkingapp.data.entity.RentParkEntity
+
+data class MyRentedPark(
+    val id: String,
+    val userId: String,
+    val park: ParkModel,
+    val startTime: String,
+    val endTime: String,
+    val totalPay: Int,
+    val rentedDate: String
+)
+
+fun RentParkEntity.toMyRentedPark(): MyRentedPark {
+    return MyRentedPark(
+        id = this.id,
+        userId = this.userId,
+        park = this.park.toParkModel(),
+        startTime = this.startTime,
+        endTime = this.endTime,
+        totalPay = this.totalPay,
+        rentedDate = this.rentedDate,
+    )
+}
+
+fun MyRentedPark.toRentParkEntity(): RentParkEntity {
+    return RentParkEntity(
+        id = this.id,
+        userId = this.userId,
+        park = this.park.toParkEntity(),
+        startTime = this.startTime,
+        endTime = this.endTime,
+        totalPay = this.totalPay,
+        rentedDate = this.rentedDate,
+    )
+}
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt b/app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt
--- a/app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -1,9 +1,8 @@
 package com.parking.parkingapp.data.model
 
 import android.os.Parcelable
-import com.parking.parkingapp.data.entity.Park
+import com.parking.parkingapp.data.entity.ParkEntity
 import kotlinx.parcelize.Parcelize
-import java.io.Serializable
 
 @Parcelize
 data class ParkModel(
@@ -20,7 +19,7 @@
     val closeTime: Double
 ): Parcelable
 
-fun Park.toParkModel(): ParkModel {
+fun ParkEntity.toParkModel(): ParkModel {
     return ParkModel(
         this.id,
         this.name,
@@ -34,4 +33,20 @@
         this.openTime,
         this.closeTime,
     )
+}
+
+fun ParkModel.toParkEntity(): ParkEntity {
+    return ParkEntity(
+        this.id,
+        this.name,
+        this.address,
+        this.image,
+        this.maxSlot,
+        this.currentSlot,
+        this.lat,
+        this.long,
+        this.pricePerHour,
+        this.openTime,
+        this.closeTime,
+    )
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt b/app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt
--- a/app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -1,10 +1,12 @@
 package com.parking.parkingapp.data.repository
 
 import com.parking.parkingapp.common.Resource
-import com.parking.parkingapp.data.entity.Park
+import com.parking.parkingapp.data.model.MyRentedPark
 import com.parking.parkingapp.data.model.ParkModel
 import kotlinx.coroutines.flow.Flow
 
 interface ParkRepository {
     fun getPark(): Flow<Resource<List<ParkModel>>>
+    suspend fun rentPark(myRentedPark: MyRentedPark): Resource<Unit>
+    fun getMyRentedPark(userId: String): Flow<Resource<List<MyRentedPark>>>
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt b/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt
--- a/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -4,6 +4,8 @@
 import com.google.firebase.auth.FirebaseAuth
 import com.google.firebase.auth.ktx.userProfileChangeRequest
 import com.google.firebase.firestore.CollectionReference
+import com.parking.parkingapp.common.CollectionRef
+import com.parking.parkingapp.common.FireCollectionRef
 import com.parking.parkingapp.common.Resource
 import com.parking.parkingapp.data.entity.FireUserEntity
 import com.parking.parkingapp.data.repository.AuthRepository
@@ -11,7 +13,7 @@
 import javax.inject.Inject
 
 class AuthRepositoryImpl @Inject constructor(
-    private val fireStoreUserCollection: CollectionReference,
+    @FireCollectionRef(CollectionRef.USER) private val fireStoreUserCollection: CollectionReference,
     private val firebaseAuth: FirebaseAuth,
 ): AuthRepository {
 
@@ -54,7 +56,7 @@
             val fireUser = firebaseAuth.createUserWithEmailAndPassword(email, pass).await().user!!
             val user = FireUserEntity(fireUser.uid, "", email, null)
             fireStoreUserCollection.document(fireUser.uid)
-                .collection("info")
+                .collection(CollectionRef.INFO.value)
                 .document(fireUser.uid)
                 .set(user)
                 .await()
Index: app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt b/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt
--- a/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -1,20 +1,27 @@
 package com.parking.parkingapp.data.repositoryImpl
 
+import android.util.Log
 import com.google.firebase.firestore.CollectionReference
 import com.parking.parkingapp.common.CollectionRef
 import com.parking.parkingapp.common.FireCollectionRef
 import com.parking.parkingapp.common.Resource
-import com.parking.parkingapp.data.entity.Park
+import com.parking.parkingapp.data.entity.ParkEntity
+import com.parking.parkingapp.data.entity.RentParkEntity
+import com.parking.parkingapp.data.model.MyRentedPark
 import com.parking.parkingapp.data.model.ParkModel
+import com.parking.parkingapp.data.model.toMyRentedPark
 import com.parking.parkingapp.data.model.toParkModel
+import com.parking.parkingapp.data.model.toRentParkEntity
 import com.parking.parkingapp.data.repository.ParkRepository
 import kotlinx.coroutines.channels.awaitClose
 import kotlinx.coroutines.flow.Flow
 import kotlinx.coroutines.flow.callbackFlow
+import kotlinx.coroutines.tasks.await
 import javax.inject.Inject
 
 class ParkRepositoryImpl @Inject constructor(
-    @FireCollectionRef(CollectionRef.PARK) private val parkCollectionRef: CollectionReference
+    @FireCollectionRef(CollectionRef.PARK) private val parkCollectionRef: CollectionReference,
+    @FireCollectionRef(CollectionRef.USER) private val userCollectionRef: CollectionReference,
 ): ParkRepository {
     override fun getPark(): Flow<Resource<List<ParkModel>>> =
         callbackFlow {
@@ -25,7 +32,7 @@
                     }
                     value?.let { snapShots ->
                         trySend(Resource.Success(snapShots.documents.mapNotNull {
-                            it.toObject(Park::class.java)?.toParkModel()
+                            it.toObject(ParkEntity::class.java)?.toParkModel()
                         }))
                     }
                 }
@@ -34,4 +41,37 @@
             }
             awaitClose()
         }
+
+    override suspend fun rentPark(myRentedPark: MyRentedPark): Resource<Unit> {
+        return try {
+            userCollectionRef
+                .document(myRentedPark.userId)
+                .collection(CollectionRef.MY_PARK.value)
+                .document().apply {
+                    set(myRentedPark.copy(id = this.id).toRentParkEntity()).await()
+                }
+            Resource.Success(Unit)
+        } catch (e: Exception) {
+            Resource.Fail(e.message)
+        }
+    }
+
+    override fun getMyRentedPark(userId: String): Flow<Resource<List<MyRentedPark>>> =
+        callbackFlow {
+            runCatching {
+                userCollectionRef
+                    .document(userId)
+                    .collection(CollectionRef.MY_PARK.value)
+                    .get().addOnSuccessListener { snapShots ->
+                        trySend(Resource.Success(snapShots.documents.mapNotNull {
+                            it.toObject(RentParkEntity::class.java)?.toMyRentedPark()
+                        }))
+                    }.addOnFailureListener {
+                        Log.e("tudm", "getMyRentedPark:${it.message} ", )
+                    }
+            }.onFailure {
+                send(Resource.Fail(it.message))
+            }
+            awaitClose()
+        }
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/di/NetWorkModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/di/NetWorkModule.kt b/app/src/main/java/com/parking/parkingapp/di/NetWorkModule.kt
--- a/app/src/main/java/com/parking/parkingapp/di/NetWorkModule.kt	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/java/com/parking/parkingapp/di/NetWorkModule.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -28,11 +28,6 @@
 @Module
 @InstallIn(SingletonComponent::class)
 object NetWorkModule {
-    @Singleton
-    @Provides
-    fun provideFireStoreUserCollection(): CollectionReference =
-        Firebase.firestore.collection("user")
-
     @Singleton
     @Provides
     fun provideFirebaseAuth(): FirebaseAuth = Firebase.auth
@@ -78,4 +73,10 @@
     @FireCollectionRef(CollectionRef.PARK)
     fun provideParkCollection(): CollectionReference =
         Firebase.firestore.collection(CollectionRef.PARK.value)
+
+    @Singleton
+    @Provides
+    @FireCollectionRef(CollectionRef.USER)
+    fun provideUserCollection(): CollectionReference =
+        Firebase.firestore.collection(CollectionRef.USER.value)
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt b/app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -339,11 +339,11 @@
                     .with(requireContext())
                     .load(it.image)
                     .centerCrop()
-                    .placeholder(R.drawable.man)
+                    .placeholder(R.drawable.parking_placeholder)
                     .into(binding.parkImage)
                 binding.parkName.text = it.name
                 binding.parkAddress.text = it.address
-                binding.parkPrice.text = formatCurrency(it.pricePerHour)
+                binding.parkPrice.text = formatCurrencyPerHour(it.pricePerHour)
                 binding.parkDistance.text = getString(
                     R.string.distance_meter,
                     distance.toInt().toString()
Index: app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt b/app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt
--- a/app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -31,11 +31,16 @@
 fun Point.distanceTo(destination: Point): Double =
     TurfMeasurement.distance(this, destination, "meters")
 
-fun formatCurrency(amount: Int): String {
+fun formatCurrencyPerHour(amount: Int): String {
     val formatter = DecimalFormat("#,###")
     return "${formatter.format(amount)}đ/h"
 }
 
+fun formatCurrency(amount: Double): String {
+    val formatter = DecimalFormat("#,###")
+    return "${formatter.format(amount)}đ"
+}
+
 fun formatTime(hour: Double): String {
     val hours = hour.toInt()
     val minutes = ((hour - hours) * 60).toInt()
Index: app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingAdapter.kt b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingAdapter.kt
new file mode 100644
--- /dev/null	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingAdapter.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -0,0 +1,56 @@
+package com.parking.parkingapp.view.my_parking
+
+import android.view.LayoutInflater
+import android.view.ViewGroup
+import androidx.recyclerview.widget.RecyclerView
+import androidx.recyclerview.widget.RecyclerView.ViewHolder
+import com.bumptech.glide.Glide
+import com.parking.parkingapp.R
+import com.parking.parkingapp.data.model.MyRentedPark
+import com.parking.parkingapp.databinding.MyParkingItemBinding
+import com.parking.parkingapp.view.map.formatCurrencyPerHour
+
+class MyParkingAdapter : RecyclerView.Adapter<MyParkingAdapter.MyParkingViewHolder>() {
+    private val myParkingList = mutableListOf<MyRentedPark>()
+
+    fun updateData(newList: List<MyRentedPark>) {
+        myParkingList.clear()
+        myParkingList.addAll(newList)
+        notifyDataSetChanged()
+    }
+
+    inner class MyParkingViewHolder(val binding: MyParkingItemBinding) : ViewHolder(binding.root) {
+        fun bind(myRentedPark: MyRentedPark) {
+            Glide
+                .with(binding.root.context)
+                .load(myRentedPark.park.image)
+                .centerCrop()
+                .placeholder(R.drawable.parking_placeholder)
+                .into(binding.myParkImage)
+            binding.myParkName.text = myRentedPark.park.name
+            binding.myParkAddress.text = myRentedPark.park.address
+            binding.myParkPrice.text = formatCurrencyPerHour(myRentedPark.totalPay)
+            binding.myParkTime.text = binding.root.context.getString(
+                R.string.my_park_time,
+                myRentedPark.startTime, myRentedPark.endTime
+            )
+            binding.myParkDate.text = myRentedPark.rentedDate
+        }
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyParkingViewHolder {
+        return MyParkingViewHolder(
+            MyParkingItemBinding.inflate(
+                LayoutInflater.from(parent.context),
+                parent,
+                false
+            )
+        )
+    }
+
+    override fun getItemCount(): Int = myParkingList.size
+
+    override fun onBindViewHolder(holder: MyParkingViewHolder, position: Int) {
+        holder.bind(myParkingList[position])
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -2,31 +2,48 @@
 
 import android.view.LayoutInflater
 import android.view.ViewGroup
+import androidx.fragment.app.viewModels
+import androidx.lifecycle.Lifecycle
 import androidx.lifecycle.LifecycleCoroutineScope
+import androidx.lifecycle.repeatOnLifecycle
+import androidx.recyclerview.widget.LinearLayoutManager
 import com.parking.parkingapp.databinding.FragmentMyParkingBinding
 import com.parking.parkingapp.view.BaseFragment
+import dagger.hilt.android.AndroidEntryPoint
+import kotlinx.coroutines.flow.collect
+import kotlinx.coroutines.launch
 
+@AndroidEntryPoint
 class MyParkingFragment: BaseFragment<FragmentMyParkingBinding>() {
+    private val viewModel: MyParkingViewModel by viewModels()
+
+    private val myParkingAdapter by lazy { MyParkingAdapter() }
     override fun inflateBinding(
         inflater: LayoutInflater,
         container: ViewGroup?
     ): FragmentMyParkingBinding = FragmentMyParkingBinding.inflate(inflater, container, false)
 
     override fun initViews() {
-
+        binding.myParkingRcv.apply {
+            layoutManager = LinearLayoutManager(requireContext())
+            adapter = myParkingAdapter
+        }
     }
 
     override fun initActions() {
-        binding.mapMenu.setOnClickListener {
-            getDrawerMenu()?.open()
-        }
     }
 
     override fun intiData() {
     }
 
     override fun obverseFromViewModel(scope: LifecycleCoroutineScope) {
-
+        scope.launch {
+            viewModel.myPark.collect {
+                repeatOnLifecycle(Lifecycle.State.STARTED) {
+                    myParkingAdapter.updateData(it)
+                }
+            }
+        }
     }
 
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingViewModel.kt
new file mode 100644
--- /dev/null	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingViewModel.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -0,0 +1,38 @@
+package com.parking.parkingapp.view.my_parking
+
+import android.util.Log
+import androidx.lifecycle.viewModelScope
+import com.google.firebase.auth.FirebaseUser
+import com.parking.parkingapp.common.BaseViewModel
+import com.parking.parkingapp.common.success
+import com.parking.parkingapp.data.model.MyRentedPark
+import com.parking.parkingapp.data.repository.AuthRepository
+import com.parking.parkingapp.data.repository.ParkRepository
+import dagger.hilt.android.lifecycle.HiltViewModel
+import kotlinx.coroutines.flow.MutableStateFlow
+import kotlinx.coroutines.flow.asStateFlow
+import kotlinx.coroutines.launch
+import javax.inject.Inject
+
+@HiltViewModel
+class MyParkingViewModel @Inject constructor(
+    private val parkRepository: ParkRepository,
+    private val authRepository: AuthRepository,
+) : BaseViewModel() {
+    private val _myPark = MutableStateFlow<List<MyRentedPark>>(listOf())
+    val myPark = _myPark.asStateFlow()
+
+    init {
+        viewModelScope.launch {
+            authRepository.getCurrentUser<FirebaseUser>().success { user ->
+                user?.let { fuser ->
+                    parkRepository.getMyRentedPark(fuser.uid).collect { result ->
+                        result.success {
+                            _myPark.value = it ?: listOf()
+                        }
+                    }
+                }
+            }
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -1,11 +1,13 @@
 package com.parking.parkingapp.view.park
 
+import android.annotation.SuppressLint
 import android.app.TimePickerDialog
-import android.graphics.Color
 import android.os.Bundle
+import android.util.Log
 import android.view.LayoutInflater
 import android.view.ViewGroup
 import androidx.fragment.app.setFragmentResult
+import androidx.fragment.app.viewModels
 import androidx.lifecycle.LifecycleCoroutineScope
 import androidx.navigation.fragment.findNavController
 import com.bumptech.glide.Glide
@@ -17,12 +19,21 @@
 import com.parking.parkingapp.view.map.MapboxFragment
 import com.parking.parkingapp.view.map.calculateDecimalTimeDifference
 import com.parking.parkingapp.view.map.formatCurrency
+import com.parking.parkingapp.view.map.formatCurrencyPerHour
 import com.parking.parkingapp.view.map.formatTime
 import com.parking.parkingapp.view.map.isCurrentTimeInRange
 import com.parking.parkingapp.view.map.roundToOneDecimal
+import dagger.hilt.android.AndroidEntryPoint
+import java.time.LocalDate
+import java.time.LocalTime
+import java.time.format.DateTimeFormatter
 import java.util.Calendar
 
+@AndroidEntryPoint
 class ParkDetailFragment: BaseFragment<FragmentParkDetailBinding>() {
+    private val viewModel: ParkDetailViewModel by viewModels()
+
+    private var currentPark: ParkModel? = null
 
     companion object {
         private const val TIME_FORMAT = "%02d:%02d"
@@ -37,8 +48,9 @@
             isShowHeader(true)
             setOnHeaderBack()
         }
-        val park = arguments?.getParcelable(ParkModel::class.java.name) as? ParkModel
-        park?.let {
+        setTotalTime(null, null, 0)
+        currentPark = arguments?.getParcelable(ParkModel::class.java.name) as? ParkModel
+        currentPark?.let {
             (activity as? MainActivity)?.apply {
                 setHeaderTitle(it.name)
             }
@@ -46,12 +58,12 @@
                 .with(requireContext())
                 .load(it.image)
                 .centerCrop()
-                .placeholder(R.drawable.man)
+                .placeholder(R.drawable.parking_placeholder)
                 .into(binding.parkImage)
             binding.parkName.text = it.name
             binding.parkAddress.text = it.address
             binding.detailAddress.text = it.address
-            binding.parkPrice.text = formatCurrency(it.pricePerHour)
+            binding.parkPrice.text = formatCurrencyPerHour(it.pricePerHour)
             binding.parkDistance.text = arguments?.getString(ParkModel::class.java.name + "distance")
             val startTime = formatTime(it.openTime)
             val closeTime = formatTime(it.closeTime)
@@ -63,13 +75,14 @@
                     "$startTime - $closeTime"
                 )
                 setTextColor(
-                    if (isInTime) Color.GREEN
-                    else Color.RED
+                    if (isInTime) requireContext().resources.getColor(R.color.green, null)
+                    else requireContext().resources.getColor(R.color.red, null)
                 )
             }
         }
     }
 
+    @SuppressLint("NewApi")
     override fun initActions() {
         binding.parkDirectionButton.setOnClickListener {
             parentFragment?.setFragmentResult(MapboxFragment::class.java.name, Bundle().apply {
@@ -78,11 +91,19 @@
             findNavController().popBackStack()
         }
         handlePickTime()
+        binding.checkoutButton.setOnClickListener {
+            viewModel.submitCheckout(
+                currentPark!!,
+                binding.pickedStartTime.text.toString(),
+                binding.pickedEndTime.text.toString(),
+                binding.totalTime.text.split(" ").first().toDouble()
+            )
+        }
     }
 
     private fun handlePickTime() {
         var startTime: Calendar? = null
-        var endtime: Calendar? = null
+        var endTime: Calendar? = null
         val calendar = Calendar.getInstance()
         val hour = calendar.get(Calendar.HOUR_OF_DAY)
         val minute = calendar.get(Calendar.MINUTE)
@@ -91,36 +112,146 @@
                 startTime = Calendar.getInstance().apply {
                     set(Calendar.HOUR_OF_DAY, selectedHour)
                     set(Calendar.MINUTE, selectedMinute)
-                }
-                val time = String.format(TIME_FORMAT, selectedHour, selectedMinute)
+                }.validatePickedTime(
+                    startTime = startTime,
+                    endTime = endTime,
+                    parkModel = currentPark!!,
+                    isStartTime = true
+                )
+                val time =
+                    String.format(TIME_FORMAT, startTime!!.get(Calendar.HOUR_OF_DAY), startTime!!.get(Calendar.MINUTE))
                 binding.pickedStartTime.text = time
-                if (startTime != null && endtime != null) {
-                    binding.totalTime.text = getString(
-                        R.string.total_time,
-                        calculateDecimalTimeDifference(startTime!!, endtime!!).roundToOneDecimal().toString()
-                    )
-                }
+                setTotalTime(startTime, endTime, currentPark!!.pricePerHour)
             }, hour, minute, true)
             timePicker.show()
         }
 
         binding.detailPickEndTime.setOnClickListener {
             val timePicker = TimePickerDialog(requireContext(), { _, selectedHour, selectedMinute ->
-                endtime = Calendar.getInstance().apply {
+                endTime = Calendar.getInstance().apply {
                     set(Calendar.HOUR_OF_DAY, selectedHour)
                     set(Calendar.MINUTE, selectedMinute)
-                }
-                val time = String.format(TIME_FORMAT, selectedHour, selectedMinute)
+                }.validatePickedTime(
+                    startTime = startTime,
+                    endTime = endTime,
+                    parkModel = currentPark!!,
+                    isStartTime = false
+                )
+                val time =
+                    String.format(TIME_FORMAT, endTime!!.get(Calendar.HOUR_OF_DAY), endTime!!.get(Calendar.MINUTE))
                 binding.pickedEndTime.text = time
-                binding.totalTime.text = getString(
-                    R.string.total_time,
-                    calculateDecimalTimeDifference(startTime!!, endtime!!).roundToOneDecimal().toString()
-                )
+                setTotalTime(startTime, endTime, currentPark!!.pricePerHour)
             }, hour, minute, true)
             timePicker.show()
         }
     }
 
+    private fun setTotalTime(startTime: Calendar?, endTime: Calendar?, price: Int) {
+        if (startTime != null && endTime != null) {
+            val totalTime = calculateDecimalTimeDifference(startTime, endTime).roundToOneDecimal()
+            binding.checkoutButton.apply {
+                text = getString(
+                    R.string.detail_checkout,
+                    formatCurrency(totalTime * price)
+                ).uppercase()
+                isEnabled = true
+                backgroundTintList = resources.getColorStateList(R.color.black, null)
+            }
+            binding.totalTime.apply {
+                text = getString(
+                    R.string.total_time,
+                    totalTime.toString()
+                )
+                backgroundTintList = resources.getColorStateList(R.color.main_yellow, null)
+            }
+        } else {
+            binding.checkoutButton.apply {
+                isEnabled = false
+                backgroundTintList = resources.getColorStateList(R.color.gray, null)
+            }
+            binding.totalTime.apply {
+                backgroundTintList = resources.getColorStateList(R.color.gray, null)
+            }
+        }
+    }
+
+    @SuppressLint("NewApi")
+    private fun Calendar.validatePickedTime(
+        startTime: Calendar?,
+        endTime: Calendar?,
+        parkModel: ParkModel,
+        isStartTime: Boolean
+    ): Calendar {
+        val formatter = DateTimeFormatter.ofPattern("h:mma")
+        val start = LocalTime.parse(formatTime(parkModel.openTime), formatter)
+        val close = LocalTime.parse(formatTime(parkModel.closeTime), formatter)
+        val pickedLocalTime = LocalTime.of(this.get(Calendar.HOUR_OF_DAY), this.get(Calendar.MINUTE))
+        val pickedStartTime = startTime?.let { LocalTime.of(it.get(Calendar.HOUR_OF_DAY), it.get(Calendar.MINUTE)) }
+        val pickedEndTime = endTime?.let { LocalTime.of(it.get(Calendar.HOUR_OF_DAY), it.get(Calendar.MINUTE)) }
+        val isInTime = isCurrentTimeInRange(formatTime(parkModel.openTime), formatTime(parkModel.closeTime))
+        val now = LocalTime.now()
+        return if (isStartTime) {
+            if (pickedLocalTime.isBefore(start)) {
+                Calendar.getInstance().apply {
+                    set(
+                        Calendar.HOUR_OF_DAY, if (isInTime) now.hour
+                        else start.hour
+                    )
+                    set(
+                        Calendar.MINUTE, if (isInTime) now.minute
+                        else start.minute
+                    )
+                }
+            } else if (pickedLocalTime.isBefore(now) || pickedLocalTime.isAfter(close)) {
+                Calendar.getInstance().apply {
+                    set(Calendar.HOUR_OF_DAY, now.hour)
+                    set(Calendar.MINUTE, now.minute)
+                }
+            } else if (pickedEndTime != null && pickedLocalTime.isAfter(pickedEndTime)) {
+                Calendar.getInstance().apply {
+                    val nowPlusHour = pickedEndTime.hour + 1
+                    val hour = if (nowPlusHour < close.hour) nowPlusHour else close.hour
+                    set(Calendar.HOUR_OF_DAY, hour)
+                    set(Calendar.MINUTE, now.minute)
+                }
+            } else {
+                this
+            }
+        } else {
+            if (pickedLocalTime.isAfter(close)) {
+                Calendar.getInstance().apply {
+                    set(Calendar.HOUR_OF_DAY, close.hour)
+                    set(Calendar.MINUTE, close.minute)
+                }
+            } else if (pickedLocalTime.isBefore(now)
+                || pickedLocalTime.isBefore(start)
+            ) {
+                Calendar.getInstance().apply {
+                    val nowPlusHour = now.hour + 1
+                    val hour = if ((nowPlusHour) < close.hour) {
+                        if (pickedStartTime != null && nowPlusHour <= pickedStartTime.hour) {
+                            pickedStartTime.hour + 1
+                        } else {
+                            nowPlusHour
+                        }
+                    } else {
+                        close.hour
+                    }
+                    set(Calendar.HOUR_OF_DAY, hour)
+                    set(Calendar.MINUTE, now.minute)
+                }
+            } else if (pickedStartTime != null && pickedLocalTime <= pickedStartTime) {
+                Calendar.getInstance().apply {
+                    val hour = if ((pickedStartTime.hour + 1) < close.hour) pickedStartTime.hour + 1 else close.hour
+                    set(Calendar.HOUR_OF_DAY, hour)
+                    set(Calendar.MINUTE, now.minute)
+                }
+            } else {
+                this
+            }
+        }
+    }
+
     override fun intiData() {
 
     }
Index: app/src/main/java/com/parking/parkingapp/view/park/ParkDetailViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailViewModel.kt
new file mode 100644
--- /dev/null	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailViewModel.kt	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -0,0 +1,49 @@
+package com.parking.parkingapp.view.park
+
+import android.annotation.SuppressLint
+import android.util.Log
+import androidx.lifecycle.viewModelScope
+import com.google.firebase.auth.FirebaseUser
+import com.parking.parkingapp.common.BaseViewModel
+import com.parking.parkingapp.common.fail
+import com.parking.parkingapp.common.success
+import com.parking.parkingapp.data.model.MyRentedPark
+import com.parking.parkingapp.data.model.ParkModel
+import com.parking.parkingapp.data.repository.AuthRepository
+import com.parking.parkingapp.data.repository.ParkRepository
+import dagger.hilt.android.lifecycle.HiltViewModel
+import kotlinx.coroutines.launch
+import java.time.LocalDate
+import java.time.LocalTime
+import javax.inject.Inject
+
+@HiltViewModel
+class ParkDetailViewModel @Inject constructor(
+    private val authRepository: AuthRepository,
+    private val parkRepository: ParkRepository,
+) : BaseViewModel() {
+
+    @SuppressLint("NewApi")
+    fun submitCheckout(parkModel: ParkModel, startTime: String, endTime: String, totalPay: Double) =
+        viewModelScope.launch {
+            authRepository.getCurrentUser<FirebaseUser>().success { user ->
+                user?.also {
+                    parkRepository.rentPark(
+                        MyRentedPark(
+                            id = "",
+                            userId = it.uid,
+                            park = parkModel,
+                            startTime = startTime,
+                            endTime = endTime,
+                            totalPay = totalPay.toInt(),
+                            rentedDate = LocalDate.now().toString()
+                        )
+                    ).success {
+                        Log.e("tudm", "submitCheckout: ", )
+                    }.fail {
+                        Log.e("tudm", "fail:$it ", )
+                    }
+                }
+            }
+        }
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/res/layout/activity_main.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -45,16 +45,15 @@
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
                 android:layout_gravity="center"
-                android:text="Title"
                 android:textAlignment="center"
                 android:textColor="@color/black"
-                android:textSize="22sp"
+                android:textSize="18sp"
                 android:textStyle="bold" />
         </FrameLayout>
 
         <View
             android:layout_width="match_parent"
-            android:layout_height="1dp"
+            android:layout_height="0.5dp"
             android:background="@color/gray" />
 
         <androidx.fragment.app.FragmentContainerView
Index: app/src/main/res/layout/fragment_mapbox.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_mapbox.xml b/app/src/main/res/layout/fragment_mapbox.xml
--- a/app/src/main/res/layout/fragment_mapbox.xml	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/res/layout/fragment_mapbox.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -121,7 +121,7 @@
                 android:id="@+id/park_image"
                 android:layout_width="50dp"
                 android:layout_height="50dp"
-                android:src="@color/red"
+                android:src="@drawable/parking_placeholder"
                 app:layout_constraintBottom_toBottomOf="parent"
                 app:layout_constraintStart_toStartOf="parent"
                 app:layout_constraintTop_toTopOf="parent"
Index: app/src/main/res/layout/fragment_my_parking.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_my_parking.xml b/app/src/main/res/layout/fragment_my_parking.xml
--- a/app/src/main/res/layout/fragment_my_parking.xml	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/res/layout/fragment_my_parking.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
@@ -7,19 +7,8 @@
     android:gravity="center"
     tools:context=".view.history.HistoryFragment">
 
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="My parking" />
-
-    <ImageButton
-        android:id="@+id/map_menu"
-        style="@style/RoundedWhiteButton"
-        android:layout_width="52dp"
-        android:layout_height="52dp"
-        android:padding="10dp"
-        android:scaleType="fitXY"
-        android:src="@drawable/menu"
-        tools:ignore="ContentDescription" />
-
-</LinearLayout>
\ No newline at end of file
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/my_parking_rcv"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_park_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_park_detail.xml b/app/src/main/res/layout/fragment_park_detail.xml
--- a/app/src/main/res/layout/fragment_park_detail.xml	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/res/layout/fragment_park_detail.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -102,7 +102,7 @@
                 android:id="@+id/park_image"
                 android:layout_width="80dp"
                 android:layout_height="80dp"
-                android:src="@color/red"
+                android:src="@drawable/parking_placeholder"
                 app:layout_constraintBottom_toBottomOf="parent"
                 app:layout_constraintEnd_toEndOf="parent"
                 app:layout_constraintTop_toTopOf="parent"
@@ -110,6 +110,7 @@
         </androidx.constraintlayout.widget.ConstraintLayout>
 
         <View
+            android:id="@+id/park_info_divider"
             android:layout_width="match_parent"
             android:layout_height="0.5dp"
             android:background="@color/gray"
@@ -124,7 +125,7 @@
             android:padding="12dp"
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintStart_toStartOf="parent"
-            app:layout_constraintTop_toBottomOf="@id/park_info_container">
+            app:layout_constraintTop_toBottomOf="@id/park_info_divider">
 
             <ImageView
                 android:layout_width="wrap_content"
@@ -207,7 +208,6 @@
             app:layout_constraintTop_toBottomOf="@id/park_detail_container">
 
             <LinearLayout
-                android:id="@+id/park_time_container"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
                 android:orientation="vertical">
@@ -271,11 +271,12 @@
                 </LinearLayout>
 
                 <LinearLayout
+                    android:visibility="gone"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content">
 
                     <LinearLayout
-                        android:id="@+id/detail_pick_start_time"
+                        android:id="@+id/detail_pick_start_date"
                         android:layout_width="0dp"
                         android:layout_height="wrap_content"
                         android:layout_weight="1"
@@ -288,13 +289,13 @@
                         <TextView
                             android:layout_width="wrap_content"
                             android:layout_height="wrap_content"
-                            android:text="@string/open_time_title"
+                            android:text="Ngày đến"
                             android:textColor="@color/black"
                             android:textSize="18sp"
                             android:textStyle="bold" />
 
                         <TextView
-                            android:id="@+id/picked_start_time"
+                            android:id="@+id/picked_start_date"
                             android:layout_width="wrap_content"
                             android:layout_height="wrap_content"
                             android:text="@string/pick_time" />
@@ -302,7 +303,7 @@
 
 
                     <LinearLayout
-                        android:id="@+id/detail_pick_end_time"
+                        android:id="@+id/detail_pick_end_date"
                         android:layout_width="0dp"
                         android:layout_height="wrap_content"
                         android:layout_weight="1"
@@ -321,7 +322,7 @@
                             android:textStyle="bold" />
 
                         <TextView
-                            android:id="@+id/picked_end_time"
+                            android:id="@+id/picked_end_date"
                             android:layout_width="wrap_content"
                             android:layout_height="wrap_content"
                             android:text="@string/pick_time" />
@@ -329,17 +330,25 @@
                 </LinearLayout>
             </LinearLayout>
 
-            <View
-                android:layout_width="match_parent"
-                android:layout_height="0.5dp"
-                android:layout_gravity="center"
-                android:background="@color/gray" />
-
             <View
                 android:layout_width="0.5dp"
                 android:layout_height="match_parent"
                 android:layout_gravity="center"
                 android:background="@color/gray" />
+
+            <TextView
+                android:id="@+id/total_time"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginBottom="10dp"
+                android:background="@drawable/rounded_shape"
+                android:paddingHorizontal="10dp"
+                android:paddingVertical="3dp"
+                android:text="@string/total_time_default"
+                android:textColor="@color/white"
+                android:textSize="16sp"
+                android:textStyle="bold" />
         </FrameLayout>
 
         <FrameLayout
@@ -362,11 +371,11 @@
                 android:indeterminateTint="@color/black" />
 
             <androidx.appcompat.widget.AppCompatButton
-                android:id="@+id/login_btn"
+                android:id="@+id/checkout_button"
                 style="@style/BlackFilledButton"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
-                android:text="Thanh Toan 500.000đ" />
+                android:text="@string/detail_checkout_default" />
         </FrameLayout>
     </androidx.constraintlayout.widget.ConstraintLayout>
 </androidx.core.widget.NestedScrollView>
\ No newline at end of file
Index: app/src/main/res/layout/my_parking_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/my_parking_item.xml b/app/src/main/res/layout/my_parking_item.xml
new file mode 100644
--- /dev/null	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
+++ b/app/src/main/res/layout/my_parking_item.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -0,0 +1,146 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/park_info_container"
+    android:layout_width="match_parent"
+    android:layout_height="80dp"
+    android:layout_marginHorizontal="20dp"
+    android:background="@drawable/white_rounded_outline"
+    android:elevation="4dp"
+    android:padding="10dp"
+    android:visibility="gone"
+    tools:visibility="visible">
+
+    <ImageView
+        android:id="@+id/my_park_image"
+        android:layout_width="50dp"
+        android:layout_height="50dp"
+        android:src="@drawable/parking_placeholder"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        tools:ignore="ContentDescription" />
+
+    <TextView
+        android:id="@+id/my_park_name"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="10dp"
+        android:text="Bai do Long Thanh"
+        android:textColor="@color/black"
+        android:textStyle="bold"
+        app:layout_constraintBottom_toTopOf="@id/my_park_address"
+        app:layout_constraintStart_toEndOf="@id/my_park_image"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+        android:id="@+id/my_park_address"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="10dp"
+        android:text="Hanoi, VietNam"
+        android:textSize="10sp"
+        app:layout_constraintStart_toEndOf="@id/my_park_image"
+        app:layout_constraintTop_toBottomOf="@id/my_park_name"
+        tools:ignore="SmallSp" />
+
+    <ImageView
+        android:id="@+id/my_park_coin"
+        android:layout_width="10dp"
+        android:layout_height="10dp"
+        android:layout_marginStart="10dp"
+        android:background="@drawable/coin"
+        app:layout_constraintBottom_toBottomOf="@id/my_park_price"
+        app:layout_constraintStart_toEndOf="@id/my_park_image"
+        app:layout_constraintTop_toTopOf="@id/my_park_price"
+        tools:ignore="ContentDescription" />
+
+    <TextView
+        android:id="@+id/my_park_price"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="3dp"
+        android:text="500.000d"
+        android:textColor="@color/black"
+        android:textSize="10sp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toStartOf="@id/my_park_dot1"
+        app:layout_constraintStart_toEndOf="@id/my_park_coin"
+        app:layout_constraintTop_toBottomOf="@id/my_park_address"
+        tools:ignore="SmallSp" />
+
+    <ImageView
+        android:id="@+id/my_park_dot1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="3dp"
+        android:src="@drawable/dot"
+        app:layout_constraintBottom_toBottomOf="@id/my_park_price"
+        app:layout_constraintEnd_toStartOf="@id/my_park_time_icon"
+        app:layout_constraintStart_toEndOf="@id/my_park_price"
+        app:layout_constraintTop_toTopOf="@id/my_park_price"
+        tools:ignore="ContentDescription" />
+
+    <ImageView
+        android:id="@+id/my_park_time_icon"
+        android:layout_width="10dp"
+        android:layout_height="10dp"
+        android:src="@drawable/time"
+        app:layout_constraintBottom_toBottomOf="@id/my_park_price"
+        app:layout_constraintEnd_toStartOf="@id/my_park_time"
+        app:layout_constraintStart_toEndOf="@id/my_park_dot1"
+        app:layout_constraintTop_toTopOf="@id/my_park_price"
+        tools:ignore="ContentDescription" />
+
+    <TextView
+        android:id="@+id/my_park_time"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="3dp"
+        android:text="10:00-13:00"
+        android:textColor="@color/black"
+        android:textSize="10sp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toEndOf="@id/my_park_time_icon"
+        app:layout_constraintEnd_toStartOf="@id/my_park_dot2"
+        app:layout_constraintTop_toBottomOf="@id/my_park_address"
+        tools:ignore="SmallSp" />
+
+    <ImageView
+        android:id="@+id/my_park_dot2"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="3dp"
+        android:src="@drawable/dot"
+        app:layout_constraintBottom_toBottomOf="@id/my_park_price"
+        app:layout_constraintEnd_toStartOf="@id/my_park_date_icon"
+        app:layout_constraintStart_toEndOf="@id/my_park_time"
+        app:layout_constraintTop_toTopOf="@id/my_park_price"
+        tools:ignore="ContentDescription" />
+
+    <ImageView
+        android:id="@+id/my_park_date_icon"
+        android:layout_width="10dp"
+        android:layout_height="10dp"
+        android:src="@drawable/calendar"
+        app:layout_constraintBottom_toBottomOf="@id/my_park_price"
+        app:layout_constraintEnd_toStartOf="@id/my_park_date"
+        app:layout_constraintStart_toEndOf="@id/my_park_dot2"
+        app:layout_constraintTop_toTopOf="@id/my_park_price"
+        tools:ignore="ContentDescription" />
+
+    <TextView
+        android:id="@+id/my_park_date"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="3dp"
+        android:text="22/11/20224"
+        android:textColor="@color/black"
+        android:textSize="10sp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toEndOf="@id/my_park_date_icon"
+        app:layout_constraintTop_toBottomOf="@id/my_park_address"
+        tools:ignore="SmallSp" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
--- a/app/src/main/res/values/colors.xml	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/res/values/colors.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -18,4 +18,5 @@
     <color name="colorTransparent">#00FF0000</color>
     <color name="blue_gray">#E8EEF3</color>
     <color name="sub_yellow">#EFDE6E</color>
+    <color name="green">#008c3d</color>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision dfb2a08f732332c496b310b83a8a6b7672df432d)
+++ b/app/src/main/res/values/strings.xml	(revision 52f3366e7aca0f66fff78c7bba715299bdd14ff9)
@@ -30,4 +30,8 @@
     <string name="direction">Direction</string>
     <string name="total_time">%s Giờ</string>
     <string name="start_day">Ngày thuê</string>
+    <string name="total_time_default">0 Giờ</string>
+    <string name="detail_checkout">Thanh toán %s</string>
+    <string name="detail_checkout_default">Thanh toán 0Đ</string>
+    <string name="my_park_time">%s - %s</string>
 </resources>
\ No newline at end of file
diff --git a/app/src/main/res/drawable/calendar.png b/app/src/main/res/drawable/calendar.png
new file mode 100644
index 0000000000000000000000000000000000000000..8c30ce33e34f3dfdec02f5f6560bcaf83a901a3d
GIT binary patch
literal 6785
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
PoASvMp2w??hF<zFO~b+g

diff --git a/app/src/main/res/drawable/parking_placeholder.png b/app/src/main/res/drawable/parking_placeholder.png
new file mode 100644
index 0000000000000000000000000000000000000000..61a505b95df334007eedf61e3be8686a2036ef39
GIT binary patch
literal 15593
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
ZOtkpUWw`L(T?l;1Nh?W}K70A*{{V?&;?Mv9

diff --git a/app/src/main/res/drawable/time.png b/app/src/main/res/drawable/time.png
new file mode 100644
index 0000000000000000000000000000000000000000..2de918b6bca9fe45ff5e4c6e4f74c877284e90cc
GIT binary patch
literal 11568
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
I>)1*E2MS^_{r~^~

