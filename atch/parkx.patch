Subject: [PATCH] parkx
---
Index: app/src/main/java/com/parking/parkingapp/common/BDX.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/common/BDX.kt b/app/src/main/java/com/parking/parkingapp/common/BDX.kt
deleted file mode 100644
--- a/app/src/main/java/com/parking/parkingapp/common/BDX.kt	
+++ /dev/null	
@@ -1,11 +0,0 @@
-package com.parking.parkingapp.common
-
-enum class BDX(
-    val lat: Double,
-    val long: Double,
-    val label: String
-) {
-    BDX1(21.009340598652518, 105.82435938510464, " Bãi đỗ xe Thái Hà"),
-    BDX2(21.03518123753838, 105.8100852675858, "Bãi đỗ xe Ba Đình"),
-    BDX3(21.014365407553424, 105.80357422198051, "Bãi đỗ xe Cầu Giấy")
-}
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/model/AutoCompleteModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/model/AutoCompleteModel.kt b/app/src/main/java/com/parking/parkingapp/data/model/AutoCompleteModel.kt
--- a/app/src/main/java/com/parking/parkingapp/data/model/AutoCompleteModel.kt	
+++ b/app/src/main/java/com/parking/parkingapp/data/model/AutoCompleteModel.kt	
@@ -17,4 +17,13 @@
         this.properties.name,
         this.properties.place_formatted
     )
+}
+
+fun ParkModel.toAutoCompleteModel(): AutoCompleteModel {
+    return AutoCompleteModel(
+        this.id,
+        Point.fromLngLat(this.long, this.lat),
+        this.name,
+        this.address
+    )
 }
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
--- a/app/src/main/res/values/colors.xml	
+++ b/app/src/main/res/values/colors.xml	
@@ -16,4 +16,7 @@
     <color name="box_fill">#EDEDED</color>
     <color name="gray_trans">#59000000</color>
     <color name="colorTransparent">#00FF0000</color>
+    <color name="blue_gray">#E8EEF3</color>
+    <color name="sub_yellow">#EFDE6E</color>
+    <color name="green">#008c3d</color>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt b/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt
--- a/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt	
+++ b/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/AuthRepositoryImpl.kt	
@@ -4,6 +4,8 @@
 import com.google.firebase.auth.FirebaseAuth
 import com.google.firebase.auth.ktx.userProfileChangeRequest
 import com.google.firebase.firestore.CollectionReference
+import com.parking.parkingapp.common.CollectionRef
+import com.parking.parkingapp.common.FireCollectionRef
 import com.parking.parkingapp.common.Resource
 import com.parking.parkingapp.data.entity.FireUserEntity
 import com.parking.parkingapp.data.repository.AuthRepository
@@ -11,7 +13,7 @@
 import javax.inject.Inject
 
 class AuthRepositoryImpl @Inject constructor(
-    private val fireStoreUserCollection: CollectionReference,
+    @FireCollectionRef(CollectionRef.USER) private val fireStoreUserCollection: CollectionReference,
     private val firebaseAuth: FirebaseAuth,
 ): AuthRepository {
 
@@ -30,7 +32,7 @@
     ): Resource<FireUserEntity> {
         return try {
             val fireUser = firebaseAuth.signInWithEmailAndPassword(email, pass).await().user!!
-            val user = FireUserEntity(fireUser.uid, fireUser.displayName, email, null)
+            val user = FireUserEntity(fireUser.uid, email)
             Resource.Success(user)
         } catch (e: Exception) {
             Resource.Fail(errorMessage = e.message)
@@ -52,9 +54,9 @@
     ): Resource<FireUserEntity> {
         return try {
             val fireUser = firebaseAuth.createUserWithEmailAndPassword(email, pass).await().user!!
-            val user = FireUserEntity(fireUser.uid, "", email, null)
+            val user = FireUserEntity(fireUser.uid, email)
             fireStoreUserCollection.document(fireUser.uid)
-                .collection("info")
+                .collection(CollectionRef.INFO.value)
                 .document(fireUser.uid)
                 .set(user)
                 .await()
Index: app/src/main/java/com/parking/parkingapp/view/BaseFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/BaseFragment.kt b/app/src/main/java/com/parking/parkingapp/view/BaseFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/BaseFragment.kt	
+++ b/app/src/main/java/com/parking/parkingapp/view/BaseFragment.kt	
@@ -30,6 +30,10 @@
         savedInstanceState: Bundle?
     ) {
         super.onViewCreated(view, savedInstanceState)
+        (activity as? MainActivity)?.apply {
+            isShowHeader(false)
+            isShowMenu(false)
+        }
         initViews()
         initActions()
         intiData()
Index: app/src/main/res/layout/fragment_drawer_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_drawer_menu.xml b/app/src/main/res/layout/fragment_drawer_menu.xml
--- a/app/src/main/res/layout/fragment_drawer_menu.xml	
+++ b/app/src/main/res/layout/fragment_drawer_menu.xml	
@@ -62,7 +62,7 @@
             android:layout_height="wrap_content"
             android:text="Username"
             android:textColor="@color/white"
-            android:textSize="16sp"
+            android:textSize="20sp"
             android:textStyle="bold" />
 
         <Space
Index: app/src/main/java/com/parking/parkingapp/view/splash/SplashScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/splash/SplashScreen.kt b/app/src/main/java/com/parking/parkingapp/view/splash/SplashScreen.kt
--- a/app/src/main/java/com/parking/parkingapp/view/splash/SplashScreen.kt	
+++ b/app/src/main/java/com/parking/parkingapp/view/splash/SplashScreen.kt	
@@ -64,7 +64,7 @@
             .setPopUpTo(R.id.splashFragment, true)
             .build()
         if (isLogged) {
-            findNavController().navigate(R.id.action_splashFragment_to_mapboxFragment, null, navOption)
+            findNavController().navigate(R.id.action_splashFragment_to_mapHolderFragment, null, navOption)
         } else {
             findNavController().navigate(R.id.action_splashFragment_to_loginFragment,null, navOption)
 
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	
+++ b/app/src/main/res/layout/activity_main.xml	
@@ -15,7 +15,8 @@
             android:layout_height="wrap_content"
             android:paddingHorizontal="16dp"
             android:paddingVertical="12dp"
-            android:visibility="gone">
+            android:visibility="gone"
+            tools:visibility="visible">
 
             <LinearLayout
                 android:id="@+id/header_back"
@@ -45,16 +46,24 @@
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
                 android:layout_gravity="center"
-                android:text="Title"
                 android:textAlignment="center"
                 android:textColor="@color/black"
-                android:textSize="22sp"
+                android:textSize="18sp"
                 android:textStyle="bold" />
+
+            <ImageView
+                android:id="@+id/header_menu"
+                android:layout_width="30dp"
+                android:layout_height="30dp"
+                android:layout_gravity="end"
+                android:src="@drawable/menu"
+                android:visibility="gone"
+                tools:ignore="ContentDescription" />
         </FrameLayout>
 
         <View
             android:layout_width="match_parent"
-            android:layout_height="1dp"
+            android:layout_height="0.5dp"
             android:background="@color/gray" />
 
         <androidx.fragment.app.FragmentContainerView
@@ -66,6 +75,15 @@
             app:navGraph="@navigation/nav_graph" />
     </LinearLayout>
 
+    <androidx.fragment.app.FragmentContainerView
+        android:visibility="gone"
+        android:id="@+id/map_nav_fragment"
+        android:name="androidx.navigation.fragment.NavHostFragment"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:defaultNavHost="true"
+        app:navGraph="@navigation/map_nav_graph" />
+
     <androidx.fragment.app.FragmentContainerView
         tools:visibility="invisible"
         android:id="@+id/drawer_menu"
Index: app/src/main/res/layout/fragment_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_profile.xml b/app/src/main/res/layout/fragment_profile.xml
--- a/app/src/main/res/layout/fragment_profile.xml	
+++ b/app/src/main/res/layout/fragment_profile.xml	
@@ -92,12 +92,13 @@
         android:textSize="16sp" />
 
     <EditText
-        android:enabled="false"
         android:id="@+id/profile_email"
         style="@style/EditTextWithOutline"
+        android:textColor="@color/gray"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:autofillHints=""
+        android:enabled="false"
         android:inputType="textEmailSubject"
         tools:ignore="LabelFor" />
 
Index: app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt	
+++ b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingFragment.kt	
@@ -2,31 +2,52 @@
 
 import android.view.LayoutInflater
 import android.view.ViewGroup
+import androidx.fragment.app.viewModels
 import androidx.lifecycle.LifecycleCoroutineScope
+import androidx.recyclerview.widget.LinearLayoutManager
 import com.parking.parkingapp.databinding.FragmentMyParkingBinding
 import com.parking.parkingapp.view.BaseFragment
+import com.parking.parkingapp.view.MainActivity
+import dagger.hilt.android.AndroidEntryPoint
+import kotlinx.coroutines.launch
 
+@AndroidEntryPoint
 class MyParkingFragment: BaseFragment<FragmentMyParkingBinding>() {
+    private val viewModel: MyParkingViewModel by viewModels()
+
+    private val myParkingAdapter by lazy { MyParkingAdapter() }
     override fun inflateBinding(
         inflater: LayoutInflater,
         container: ViewGroup?
     ): FragmentMyParkingBinding = FragmentMyParkingBinding.inflate(inflater, container, false)
 
     override fun initViews() {
-
+        (activity as? MainActivity)?.apply {
+            isShowHeader(true)
+            setOnHeaderBack()
+            setHeaderTitle("My Parking")
+            isShowMenu(true)
+        }
+        binding.myParkingRcv.apply {
+            layoutManager = LinearLayoutManager(requireContext())
+            adapter = myParkingAdapter
+        }
     }
 
     override fun initActions() {
-        binding.mapMenu.setOnClickListener {
-            getDrawerMenu()?.open()
-        }
+        //suppress
     }
 
     override fun intiData() {
+        viewModel.fetchData()
     }
 
     override fun obverseFromViewModel(scope: LifecycleCoroutineScope) {
-
+        scope.launch {
+            viewModel.myPark.collect {
+                myParkingAdapter.updateData(it)
+            }
+        }
     }
 
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuFragment.kt b/app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuFragment.kt	
+++ b/app/src/main/java/com/parking/parkingapp/view/drawer_menu/DrawerMenuFragment.kt	
@@ -53,7 +53,7 @@
 
         binding.drawerMapButton.setOnClickListener {
             (activity as? MainActivity)?.apply {
-                mainNavController().navigate(R.id.mapboxFragment)
+                mainNavController().navigate(R.id.mapHolderFragment)
             }
             close()
         }
@@ -96,7 +96,7 @@
                     is State.Success -> {
                         close() {
                             (activity as? MainActivity)?.apply {
-                                mainNavController().navigate(R.id.action_homeFragment_to_loginFragment)
+                                mainNavController().navigate(R.id.loginFragment)
                             }
                         }
                     }
Index: app/src/main/res/layout/fragment_my_parking.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_my_parking.xml b/app/src/main/res/layout/fragment_my_parking.xml
--- a/app/src/main/res/layout/fragment_my_parking.xml	
+++ b/app/src/main/res/layout/fragment_my_parking.xml	
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
@@ -7,19 +7,8 @@
     android:gravity="center"
     tools:context=".view.history.HistoryFragment">
 
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="My parking" />
-
-    <ImageButton
-        android:id="@+id/map_menu"
-        style="@style/RoundedWhiteButton"
-        android:layout_width="52dp"
-        android:layout_height="52dp"
-        android:padding="10dp"
-        android:scaleType="fitXY"
-        android:src="@drawable/menu"
-        tools:ignore="ContentDescription" />
-
-</LinearLayout>
\ No newline at end of file
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/my_parking_rcv"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/profile/ProfileFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/profile/ProfileFragment.kt b/app/src/main/java/com/parking/parkingapp/view/profile/ProfileFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/profile/ProfileFragment.kt	
+++ b/app/src/main/java/com/parking/parkingapp/view/profile/ProfileFragment.kt	
@@ -47,7 +47,7 @@
     override fun initViews() {
         (activity as? MainActivity)?.apply {
             isShowHeader(true)
-            setOnHeaderBack { findNavController().popBackStack() }
+            setOnHeaderBack()
             setHeaderTitle(applicationContext.getString(R.string.password))
         }
     }
Index: app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt b/app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt	
+++ b/app/src/main/java/com/parking/parkingapp/view/map/MapboxFragment.kt	
@@ -1,11 +1,10 @@
 package com.parking.parkingapp.view.map
 
-import android.Manifest
 import android.annotation.SuppressLint
-import android.content.pm.PackageManager
+import android.app.Activity.RESULT_OK
 import android.graphics.Bitmap
 import android.graphics.BitmapFactory
-import android.graphics.Canvas
+import android.os.Bundle
 import android.text.Editable
 import android.text.TextWatcher
 import android.util.Log
@@ -15,12 +14,19 @@
 import android.view.View.GONE
 import android.view.View.VISIBLE
 import android.view.ViewGroup
-import androidx.core.app.ActivityCompat
+import android.view.animation.AnimationUtils
+import android.widget.Toast
+import androidx.activity.result.contract.ActivityResultContracts
 import androidx.core.content.ContextCompat
+import androidx.fragment.app.setFragmentResultListener
 import androidx.fragment.app.viewModels
+import androidx.lifecycle.Lifecycle
 import androidx.lifecycle.LifecycleCoroutineScope
-import androidx.navigation.fragment.findNavController
+import androidx.lifecycle.lifecycleScope
+import androidx.lifecycle.repeatOnLifecycle
 import androidx.recyclerview.widget.LinearLayoutManager
+import com.bumptech.glide.Glide
+import com.google.gson.Gson
 import com.mapbox.api.directions.v5.DirectionsCriteria
 import com.mapbox.api.directions.v5.models.RouteOptions
 import com.mapbox.core.constants.Constants
@@ -30,6 +36,7 @@
 import com.mapbox.maps.CameraOptions
 import com.mapbox.maps.EdgeInsets
 import com.mapbox.maps.ImageHolder
+import com.mapbox.maps.LayerPosition
 import com.mapbox.maps.MapboxMap
 import com.mapbox.maps.Style
 import com.mapbox.maps.extension.style.expressions.dsl.generated.interpolate
@@ -42,6 +49,9 @@
 import com.mapbox.maps.plugin.animation.camera
 import com.mapbox.maps.plugin.annotation.AnnotationConfig
 import com.mapbox.maps.plugin.annotation.annotations
+import com.mapbox.maps.plugin.annotation.generated.OnPointAnnotationClickListener
+import com.mapbox.maps.plugin.annotation.generated.PointAnnotation
+import com.mapbox.maps.plugin.annotation.generated.PointAnnotationManager
 import com.mapbox.maps.plugin.annotation.generated.PointAnnotationOptions
 import com.mapbox.maps.plugin.annotation.generated.createPointAnnotationManager
 import com.mapbox.maps.plugin.attribution.attribution
@@ -58,14 +68,17 @@
 import com.mapbox.navigation.core.lifecycle.MapboxNavigationObserver
 import com.mapbox.navigation.core.lifecycle.requireMapboxNavigation
 import com.parking.parkingapp.R
-import com.parking.parkingapp.common.BDX
+import com.parking.parkingapp.common.hasVisible
 import com.parking.parkingapp.common.hideKeyboard
+import com.parking.parkingapp.data.model.ParkModel
 import com.parking.parkingapp.databinding.FragmentMapboxBinding
 import com.parking.parkingapp.view.BaseFragment
 import com.parking.parkingapp.view.MainActivity
 import com.parking.parkingapp.view.map.ui.PDivierItemDecoration
-import com.parking.parkingapp.view.map.ui.ParkingMarker
+import com.parking.parkingapp.view.park.ParkDetailFragment
 import dagger.hilt.android.AndroidEntryPoint
+import kotlinx.coroutines.Job
+import kotlinx.coroutines.delay
 import kotlinx.coroutines.launch
 
 @AndroidEntryPoint
@@ -81,6 +94,9 @@
         )
         const val ROUTE_FOUND_LAYER_ID = "route-found-layer-id"
         const val ROUTE_FOUND_SOURCE_ID = "route-found-source-id"
+        const val ROAD_LAYER = "road-label"
+        const val SYMBOL_LAYER_ID = "symbol_layer_id"
+        const val SYMBOL_SOURCE_ID = "symbol_source_id"
         const val LOCATION_PERMISSION_REQUEST_CODE = 113
 
     }
@@ -91,6 +107,21 @@
 
     private var currentLocation: Point? = null
     private var markedLocation: Point? = null
+    private var currentShowingPark: ParkModel? = null
+    private var pointAnnotationManager: PointAnnotationManager? = null
+    private var isRouteHasBeenDraw = false
+
+    private val gpsRequestLauncher = registerForActivityResult(
+        ActivityResultContracts.StartIntentSenderForResult()
+    ) { result ->
+        if (result.resultCode == RESULT_OK) {
+            Toast.makeText(requireContext(), getString(R.string.gps_is_on), Toast.LENGTH_SHORT)
+                .show()
+        } else {
+            Toast.makeText(requireContext(), getString(R.string.gps_is_off), Toast.LENGTH_SHORT)
+                .show()
+        }
+    }
 
     override fun inflateBinding(
         inflater: LayoutInflater,
@@ -110,20 +141,48 @@
 
             override fun onDetached(mapboxNavigation: MapboxNavigation) {
                 mapboxNavigation.unregisterRoutesObserver(routesObserver)
+
             }
         }
     )
 
     override fun initViews() {
-        checkLocationPermission()
+        checkLocationPermission(requireContext(), requireActivity())
+        requestGPS(
+            requireActivity(),
+            gpsRequestLauncher
+        )
         (activity as? MainActivity)?.apply {
             isShowHeader(false)
         }
+        binding.mapView.mapboxMap.apply {
+            loadStyle(
+                style(Style.MAPBOX_STREETS) {
+                    +lineLayerPreset(ROUTE_FOUND_LAYER_ID, ROUTE_FOUND_SOURCE_ID)
+                    +geoJsonSource(ROUTE_FOUND_SOURCE_ID)
+                }
+            ) {
+                it.apply {
+                    moveStyleLayer(ROUTE_FOUND_LAYER_ID, LayerPosition(null, ROAD_LAYER, null))
+                }
+                updateCamera(currentLocation ?: DEFAULT_LOCATION)
+                subscribeCameraChanged {
+                    viewModel.getParkInRange(cameraState.center)
+                }
+            }
+        }
         binding.mapView.apply {
+            pointAnnotationManager = annotations.createPointAnnotationManager(
+                AnnotationConfig(
+                    layerId = SYMBOL_LAYER_ID,
+                    sourceId = SYMBOL_SOURCE_ID
+                )
+            )
             compass.enabled = false
             logo.enabled = false
             attribution.enabled = false
             scalebar.position = Gravity.BOTTOM or Gravity.START
+            scalebar.isMetricUnits = true
             location.apply {
                 locationPuck = LocationPuck2D(
                     topImage = ImageHolder.Companion.from(R.drawable.location_puck),
@@ -141,22 +200,19 @@
                     }.toJson()
                 )
                 enabled = true
+                layerAbove = SYMBOL_LAYER_ID
                 addOnIndicatorPositionChangedListener { position ->
-                    currentLocation = position
-                }
-            }
-        }
-        binding.mapView.mapboxMap.apply {
-            loadStyle(
-                style(Style.MAPBOX_STREETS) {
-                    +lineLayerPreset(ROUTE_FOUND_LAYER_ID, ROUTE_FOUND_SOURCE_ID)
-                    +geoJsonSource(ROUTE_FOUND_SOURCE_ID)
+                    if (currentLocation == null) {
+                        currentLocation = position
+                    } else if (currentLocation!!.distanceTo(position) > 5) {
+                        updateRidingRoute(position)
+                        currentLocation = position
+                    }
                 }
-            ) {
-                dumbMarker()
-                updateCamera(currentLocation ?: DEFAULT_LOCATION)
             }
+
         }
+
 
         binding.mapSuggestRcv.apply {
             layoutManager = LinearLayoutManager(requireContext())
@@ -168,36 +224,6 @@
         }
     }
 
-    private fun dumbMarker() {
-        addAnnotationToMap(
-            Point.fromLngLat(BDX.BDX1.long, BDX.BDX1.lat),
-            createBitmapFromView(
-                ParkingMarker.Builder(requireContext())
-                    .slotStatus(ParkingMarker.Companion.SLOT.S100)
-                    .suggestStatus(ParkingMarker.Companion.STATUS.GOOD)
-                    .build()
-            )
-        )
-        addAnnotationToMap(
-            Point.fromLngLat(BDX.BDX2.long, BDX.BDX2.lat),
-            createBitmapFromView(
-                ParkingMarker.Builder(requireContext())
-                    .slotStatus(ParkingMarker.Companion.SLOT.S0)
-                    .suggestStatus(ParkingMarker.Companion.STATUS.BAD)
-                    .build()
-            )
-        )
-        addAnnotationToMap(
-            Point.fromLngLat(BDX.BDX3.long, BDX.BDX3.lat),
-            createBitmapFromView(
-                ParkingMarker.Builder(requireContext())
-                    .slotStatus(ParkingMarker.Companion.SLOT.S50)
-                    .suggestStatus(ParkingMarker.Companion.STATUS.NORMAL)
-                    .build()
-            )
-        )
-    }
-
     override fun initActions() {
         binding.mapMenu.setOnClickListener {
             getDrawerMenu()?.open()
@@ -217,6 +243,7 @@
         }
         placeAutocompleteAdapter.apply {
             setOnItemClick { point ->
+                binding.mapSearchEdt.setText("")
                 markedLocation = point
                 transformRightIcon(true)
                 goToLocation(
@@ -270,6 +297,71 @@
                 //suppress
             }
         })
+
+        pointAnnotationManager?.apply {
+            addClickListener(
+                OnPointAnnotationClickListener { pointAnnotation ->
+                    handleOnMarkerClick(pointAnnotation)
+                    isRouteHasBeenDraw = false
+                    markedLocation = pointAnnotation.point
+                    transformRightIcon(true)
+                    false
+                }
+            )
+        }
+
+        binding.parkInfoContainer.setOnClickListener {
+            parentFragment?.setFragmentResultListener(MapboxFragment::class.java.name) { _, bundle ->
+                if (bundle.getBoolean(ParkDetailFragment::class.java.name)) {
+                    if (currentLocation == null || currentShowingPark == null) return@setFragmentResultListener
+                    direction(
+                        currentLocation!!,
+                        Point.fromLngLat(currentShowingPark!!.long, currentShowingPark!!.lat)
+                    )
+                }
+            }
+            (activity as MainActivity).mainNavController()
+                .navigate(R.id.parkDetailFragment, Bundle().apply {
+                    putParcelable(ParkModel::class.java.name, currentShowingPark)
+                    putString(
+                        ParkModel::class.java.name + "distance",
+                        binding.parkDistance.text.toString()
+                    )
+                })
+        }
+    }
+
+    private fun handleOnMarkerClick(pointAnnotation: PointAnnotation) {
+        val parkModel = runCatching {
+            Gson().fromJson(pointAnnotation.getData(), ParkModel::class.java)
+        }.getOrNull()
+        if (currentLocation == null || parkModel == null) return
+        currentShowingPark = parkModel
+        val animation = AnimationUtils.loadAnimation(requireContext(), R.anim.slide_up)
+        getOnRoadDistance(
+            currentLocation!!,
+            Point.fromLngLat(parkModel.long, parkModel.lat)
+        ) { distance ->
+            parkModel.let {
+                Glide
+                    .with(requireContext())
+                    .load(it.image)
+                    .centerCrop()
+                    .placeholder(R.drawable.parking_placeholder)
+                    .into(binding.parkImage)
+                binding.parkName.text = it.name
+                binding.parkAddress.text = it.address
+                binding.parkPrice.text = formatCurrencyPerHour(it.pricePerHour)
+                binding.parkDistance.text = getString(
+                    R.string.distance_meter,
+                    distance.toInt().toString()
+                )
+            }
+            binding.parkInfoContainer.apply {
+                hasVisible = true
+                startAnimation(animation)
+            }
+        }
     }
 
     override fun intiData() {
@@ -283,6 +375,30 @@
                 transformRcv()
             }
         }
+        scope.launch {
+            repeatOnLifecycle(Lifecycle.State.STARTED) {
+                viewModel.parkInRange.collect { listPark ->
+                    pointAnnotationManager?.deleteAll()
+                    listPark.forEach {
+                        addAnnotationToMap(
+                            point = Point.fromLngLat(it.long, it.lat),
+                            parkModel = it
+                        )
+                    }
+                }
+            }
+        }
+    }
+
+    private var updateRidingJob: Job? = null
+    private fun updateRidingRoute(position: Point) {
+        if (updateRidingJob?.isCompleted == false) return
+        updateRidingJob = viewLifecycleOwner.lifecycleScope.launch {
+            if (isRouteHasBeenDraw && markedLocation != null) {
+                direction(position, markedLocation!!)
+            }
+            delay(1000L)
+        }
     }
 
     private fun direction(
@@ -291,7 +407,7 @@
     ) {
         val routeOptions =
             RouteOptions.builder()
-                .applyDefaultNavigationOptions(DirectionsCriteria.PROFILE_CYCLING)
+                .applyDefaultNavigationOptions(DirectionsCriteria.PROFILE_DRIVING)
                 .coordinatesList(listOf(start, end))
                 .build()
 
@@ -314,6 +430,7 @@
                 routes: List<NavigationRoute>,
                 routerOrigin: String
             ) {
+                isRouteHasBeenDraw = true
                 drawRoute(
                     binding.mapView.mapboxMap,
                     routes.firstOrNull()?.directionsRoute?.geometry() ?: ""
@@ -322,6 +439,41 @@
         })
     }
 
+    private fun getOnRoadDistance(
+        start: Point,
+        end: Point,
+        onDistance: (Double) -> Unit
+    ) {
+        val routeOptions =
+            RouteOptions.builder()
+                .applyDefaultNavigationOptions(DirectionsCriteria.PROFILE_DRIVING)
+                .coordinatesList(listOf(start, end))
+                .build()
+
+        mapboxNavigation.requestRoutes(routeOptions, object: NavigationRouterCallback {
+            override fun onCanceled(
+                routeOptions: RouteOptions,
+                routerOrigin: String
+            ) {
+                onDistance.invoke(start.distanceTo(end))
+            }
+
+            override fun onFailure(
+                reasons: List<RouterFailure>,
+                routeOptions: RouteOptions
+            ) {
+                onDistance.invoke(start.distanceTo(end))
+            }
+
+            override fun onRoutesReady(
+                routes: List<NavigationRoute>,
+                routerOrigin: String
+            ) {
+                onDistance.invoke(routes.firstOrNull()?.directionsRoute?.distance() ?: 0.0)
+            }
+        })
+    }
+
     private fun drawRoute(
         mapboxMap: MapboxMap,
         geometry: String,
@@ -371,7 +523,9 @@
 
     private fun addAnnotationToMap(
         point: Point,
-        markerView: Bitmap? = null
+        markerView: Bitmap? = null,
+        clearOldMarker: Boolean = false,
+        parkModel: ParkModel? = null
     ) {
         val markerIcon = markerView ?: run {
             val redMarker = BitmapFactory.decodeResource(
@@ -385,14 +539,12 @@
                 true
             )
         }
-        val pointAnnotationManager = binding.mapView.annotations.createPointAnnotationManager(
-            AnnotationConfig()
-        )
-//        pointAnnotationManager.deleteAll()
         val pointAnnotationOptions: PointAnnotationOptions = PointAnnotationOptions()
             .withPoint(point)
             .withIconImage(markerIcon)
-        pointAnnotationManager.create(pointAnnotationOptions)
+
+        parkModel?.let { pointAnnotationOptions.withData(Gson().toJsonTree(parkModel)) }
+        pointAnnotationManager?.create(pointAnnotationOptions)
     }
 
     private fun updateCamera(
@@ -412,40 +564,4 @@
         )
         (activity as MainActivity).isFirstTimeLogin = false
     }
-
-    private fun checkLocationPermission() {
-        if (ContextCompat.checkSelfPermission(
-                requireContext(),
-                Manifest.permission.ACCESS_FINE_LOCATION
-            )
-            != PackageManager.PERMISSION_GRANTED
-        ) {
-            ActivityCompat.requestPermissions(
-                requireActivity(),
-                arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),
-                LOCATION_PERMISSION_REQUEST_CODE
-            )
-        }
-    }
-
-    private fun createBitmapFromView(
-        view: View,
-        divScale: Double = 2.5
-    ): Bitmap {
-        view.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED)
-        view.layout(0, 0, view.measuredWidth, view.measuredHeight)
-        val bitmap = Bitmap.createBitmap(
-            view.measuredWidth,
-            view.measuredHeight,
-            Bitmap.Config.ARGB_8888
-        )
-        val canvas = Canvas(bitmap)
-        view.draw(canvas)
-        return Bitmap.createScaledBitmap(
-            bitmap,
-            (view.measuredWidth / divScale).toInt(),
-            (view.measuredHeight / divScale).toInt(),
-            true
-        )
-    }
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginFragment.kt b/app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginFragment.kt
--- a/app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginFragment.kt	
+++ b/app/src/main/java/com/parking/parkingapp/view/authenticate/login/LoginFragment.kt	
@@ -126,7 +126,7 @@
         val navOption = NavOptions.Builder()
             .setPopUpTo(R.id.loginFragment, true)
             .build()
-        findNavController().navigate(R.id.action_loginFragment_to_mapboxFragment, null, navOption)
+        findNavController().navigate(R.id.action_loginFragment_to_mapHolderFragment, null, navOption)
     }
 
     override fun inflateBinding(
Index: app/src/main/java/com/parking/parkingapp/common/FireCollectionRef.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/common/FireCollectionRef.kt b/app/src/main/java/com/parking/parkingapp/common/FireCollectionRef.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/common/FireCollectionRef.kt	
@@ -0,0 +1,14 @@
+package com.parking.parkingapp.common
+
+import javax.inject.Qualifier
+
+@Qualifier
+@Retention(AnnotationRetention.RUNTIME)
+annotation class FireCollectionRef(val collectionRef: CollectionRef)
+
+enum class CollectionRef(val value: String) {
+    PARK("park"),
+    USER("user"),
+    INFO("info"),
+    MY_PARK("my_park"),
+}
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/entity/ParkEntity.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/entity/ParkEntity.kt b/app/src/main/java/com/parking/parkingapp/data/entity/ParkEntity.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/data/entity/ParkEntity.kt	
@@ -0,0 +1,18 @@
+package com.parking.parkingapp.data.entity
+
+import java.io.Serializable
+
+data class ParkEntity(
+    val id: String = "",
+    val name: String = "",
+    val address: String = "",
+    val detailAddress: String = "",
+    val image: String = "",
+    val maxSlot: Int = 0,
+    val currentSlot: Int = 0,
+    val lat: Double = 0.0,
+    val long: Double = 0.0,
+    val pricePerHour: Int = 0,
+    val openTime: Double = 0.0,
+    val closeTime: Double = 0.0
+): Serializable
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/di/NetWorkModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/di/NetWorkModule.kt b/app/src/main/java/com/parking/parkingapp/di/NetWorkModule.kt
--- a/app/src/main/java/com/parking/parkingapp/di/NetWorkModule.kt	
+++ b/app/src/main/java/com/parking/parkingapp/di/NetWorkModule.kt	
@@ -1,18 +1,20 @@
 package com.parking.parkingapp.di
 
-import com.google.android.libraries.places.api.model.AutocompleteSessionToken
-import com.google.android.libraries.places.api.net.PlacesClient
 import com.google.firebase.auth.FirebaseAuth
 import com.google.firebase.auth.ktx.auth
 import com.google.firebase.firestore.CollectionReference
 import com.google.firebase.firestore.ktx.firestore
 import com.google.firebase.ktx.Firebase
 import com.parking.parkingapp.common.APIConst
+import com.parking.parkingapp.common.CollectionRef
+import com.parking.parkingapp.common.FireCollectionRef
 import com.parking.parkingapp.data.repository.AuthRepository
 import com.parking.parkingapp.data.repository.DirectionsApi
 import com.parking.parkingapp.data.repository.MapRepository
+import com.parking.parkingapp.data.repository.ParkRepository
 import com.parking.parkingapp.data.repositoryImpl.AuthRepositoryImpl
 import com.parking.parkingapp.data.repositoryImpl.MapRepositoryImpl
+import com.parking.parkingapp.data.repositoryImpl.ParkRepositoryImpl
 import dagger.Module
 import dagger.Provides
 import dagger.hilt.InstallIn
@@ -26,11 +28,6 @@
 @Module
 @InstallIn(SingletonComponent::class)
 object NetWorkModule {
-    @Singleton
-    @Provides
-    fun provideFireStoreUserCollection(): CollectionReference =
-        Firebase.firestore.collection("user")
-
     @Singleton
     @Provides
     fun provideFirebaseAuth(): FirebaseAuth = Firebase.auth
@@ -64,4 +61,22 @@
             .build()
             .create(DirectionsApi::class.java)
     }
+
+    @Singleton
+    @Provides
+    fun provideParkRepository(
+        parkRepositoryImpl: ParkRepositoryImpl
+    ): ParkRepository = parkRepositoryImpl
+
+    @Singleton
+    @Provides
+    @FireCollectionRef(CollectionRef.PARK)
+    fun provideParkCollection(): CollectionReference =
+        Firebase.firestore.collection(CollectionRef.PARK.value)
+
+    @Singleton
+    @Provides
+    @FireCollectionRef(CollectionRef.USER)
+    fun provideUserCollection(): CollectionReference =
+        Firebase.firestore.collection(CollectionRef.USER.value)
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt b/app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/data/model/ParkModel.kt	
@@ -0,0 +1,55 @@
+package com.parking.parkingapp.data.model
+
+import android.os.Parcelable
+import com.parking.parkingapp.data.entity.ParkEntity
+import kotlinx.parcelize.Parcelize
+
+@Parcelize
+data class ParkModel(
+    val id: String,
+    val name: String,
+    val address: String,
+    val detailAddress: String,
+    val image: String,
+    val maxSlot: Int,
+    val currentSlot: Int,
+    val lat: Double,
+    val long: Double,
+    val pricePerHour: Int,
+    val openTime: Double,
+    val closeTime: Double
+): Parcelable
+
+fun ParkEntity.toParkModel(): ParkModel {
+    return ParkModel(
+        this.id,
+        this.name,
+        this.address,
+        this.detailAddress,
+        this.image,
+        this.maxSlot,
+        this.currentSlot,
+        this.lat,
+        this.long,
+        this.pricePerHour,
+        this.openTime,
+        this.closeTime,
+    )
+}
+
+fun ParkModel.toParkEntity(): ParkEntity {
+    return ParkEntity(
+        this.id,
+        this.name,
+        this.address,
+        this.detailAddress,
+        this.image,
+        this.maxSlot,
+        this.currentSlot,
+        this.lat,
+        this.long,
+        this.pricePerHour,
+        this.openTime,
+        this.closeTime,
+    )
+}
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt b/app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/data/repository/ParkRepository.kt	
@@ -0,0 +1,13 @@
+package com.parking.parkingapp.data.repository
+
+import com.parking.parkingapp.common.Resource
+import com.parking.parkingapp.data.model.MyRentedPark
+import com.parking.parkingapp.data.model.ParkModel
+import kotlinx.coroutines.flow.Flow
+
+interface ParkRepository {
+    fun getPark(): Flow<Resource<List<ParkModel>>>
+    suspend fun rentPark(myRentedPark: MyRentedPark): Resource<MyRentedPark>
+    fun getMyRentedPark(userId: String): Flow<Resource<List<MyRentedPark>>>
+    fun upDate()
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_mapbox.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_mapbox.xml b/app/src/main/res/layout/fragment_mapbox.xml
--- a/app/src/main/res/layout/fragment_mapbox.xml	
+++ b/app/src/main/res/layout/fragment_mapbox.xml	
@@ -102,6 +102,125 @@
             app:layout_constraintBottom_toBottomOf="parent"
             app:layout_constraintEnd_toEndOf="parent"
             tools:ignore="ContentDescription" />
+
+        <androidx.constraintlayout.widget.ConstraintLayout
+            android:id="@+id/park_info_container"
+            android:layout_width="0dp"
+            android:layout_height="80dp"
+            android:layout_marginHorizontal="20dp"
+            android:background="@drawable/white_rounded_outline"
+            android:elevation="4dp"
+            android:padding="10dp"
+            android:visibility="gone"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toStartOf="@id/map_track"
+            app:layout_constraintStart_toStartOf="parent"
+            tools:visibility="visible">
+
+            <ImageView
+                android:id="@+id/park_image"
+                android:layout_width="50dp"
+                android:layout_height="50dp"
+                android:src="@drawable/parking_placeholder"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toTopOf="parent"
+                tools:ignore="ContentDescription" />
+
+            <TextView
+                android:id="@+id/park_name"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="10dp"
+                android:text="Bai do Long Thanh"
+                android:textColor="@color/black"
+                android:textStyle="bold"
+                app:layout_constraintBottom_toTopOf="@id/park_address"
+                app:layout_constraintStart_toEndOf="@id/park_image"
+                app:layout_constraintTop_toTopOf="parent" />
+
+            <TextView
+                android:id="@+id/park_address"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="10dp"
+                android:text="Hanoi, VietNam"
+                android:textSize="10sp"
+                app:layout_constraintStart_toEndOf="@id/park_image"
+                app:layout_constraintTop_toBottomOf="@id/park_name"
+                tools:ignore="SmallSp" />
+
+            <ImageView
+                android:id="@+id/park_coin"
+                android:layout_width="10dp"
+                android:layout_height="10dp"
+                android:layout_marginStart="10dp"
+                android:background="@drawable/coin"
+                app:layout_constraintBottom_toBottomOf="@id/park_price"
+                app:layout_constraintStart_toEndOf="@id/park_image"
+                app:layout_constraintTop_toTopOf="@id/park_price"
+                tools:ignore="ContentDescription" />
+
+            <TextView
+                android:id="@+id/park_price"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginHorizontal="3dp"
+                android:text="20.000d/h"
+                android:textColor="@color/black"
+                android:textSize="10sp"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintEnd_toStartOf="@id/park_dot"
+                app:layout_constraintStart_toEndOf="@id/park_coin"
+                app:layout_constraintTop_toBottomOf="@id/park_address"
+                tools:ignore="SmallSp" />
+
+            <ImageView
+                android:id="@+id/park_dot"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginHorizontal="3dp"
+                android:src="@drawable/dot"
+                app:layout_constraintBottom_toBottomOf="@id/park_price"
+                app:layout_constraintEnd_toStartOf="@id/park_direction"
+                app:layout_constraintStart_toEndOf="@id/park_price"
+                app:layout_constraintTop_toTopOf="@id/park_price"
+                tools:ignore="ContentDescription" />
+
+            <ImageView
+                android:id="@+id/park_direction"
+                android:layout_width="10dp"
+                android:layout_height="10dp"
+                android:src="@drawable/gps"
+                app:layout_constraintBottom_toBottomOf="@id/park_price"
+                app:layout_constraintEnd_toStartOf="@id/park_distance"
+                app:layout_constraintStart_toEndOf="@id/park_dot"
+                app:layout_constraintTop_toTopOf="@id/park_price"
+                tools:ignore="ContentDescription" />
+
+            <TextView
+                android:id="@+id/park_distance"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginHorizontal="3dp"
+                android:text="200m"
+                android:textColor="@color/black"
+                android:textSize="10sp"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintStart_toEndOf="@id/park_direction"
+                app:layout_constraintTop_toBottomOf="@id/park_address"
+                tools:ignore="SmallSp" />
+
+            <ImageView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:src="@drawable/icon_park_outline_right"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintTop_toTopOf="parent"
+                tools:ignore="ContentDescription" />
+
+        </androidx.constraintlayout.widget.ConstraintLayout>
     </androidx.constraintlayout.widget.ConstraintLayout>
 
 </FrameLayout>
\ No newline at end of file
Index: app/src/main/res/navigation/nav_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/nav_graph.xml b/app/src/main/res/navigation/nav_graph.xml
--- a/app/src/main/res/navigation/nav_graph.xml	
+++ b/app/src/main/res/navigation/nav_graph.xml	
@@ -12,14 +12,10 @@
             android:id="@+id/action_loginFragment_to_registerFragment"
             app:destination="@id/registerFragment" />
         <action
-            android:id="@+id/action_loginFragment_to_homeFragment"
-            app:launchSingleTop="true"
-            app:popUpTo="@id/loginFragment"
+            android:id="@+id/action_loginFragment_to_mapHolderFragment"
             app:popUpToInclusive="true"
-            app:destination="@id/homeFragment" />
-        <action
-            android:id="@+id/action_loginFragment_to_mapboxFragment"
-            app:destination="@id/mapboxFragment" />
+            app:popUpTo="@id/mapHolderFragment"
+            app:destination="@id/mapHolderFragment" />
     </fragment>
     <fragment
         android:id="@+id/registerFragment"
@@ -34,35 +30,13 @@
         android:name="com.parking.parkingapp.view.splash.SplashScreen"
         android:label="SplashScreen" >
         <action
-            android:id="@+id/action_splashFragment_to_homeFragment"
-            app:destination="@id/homeFragment" />
-        <action
             android:id="@+id/action_splashFragment_to_loginFragment"
             app:destination="@id/loginFragment" />
         <action
-            android:id="@+id/action_splashFragment_to_mapboxFragment"
-            app:destination="@id/mapboxFragment" />
+            android:id="@+id/action_splashFragment_to_mapHolderFragment"
+            app:destination="@id/mapHolderFragment" />
     </fragment>
     <fragment
-        android:id="@+id/homeFragment"
-        android:name="com.parking.parkingapp.view.home.HomeFragment"
-        android:label="fragment_home"
-        tools:layout="@layout/fragment_home" >
-        <action
-            android:id="@+id/action_homeFragment_to_loginFragment"
-            app:launchSingleTop="true"
-            app:popUpTo="@id/homeFragment"
-            app:popUpToInclusive="true"
-            app:destination="@id/loginFragment" />
-        <action
-            android:id="@+id/action_homeFragment_to_mapboxFragment"
-            app:destination="@id/mapboxFragment" />
-    </fragment>
-    <fragment
-        android:id="@+id/mapboxFragment"
-        android:name="com.parking.parkingapp.view.map.MapboxFragment"
-        android:label="MapboxFragment" />
-    <fragment
         android:id="@+id/profileFragment"
         android:name="com.parking.parkingapp.view.profile.ProfileFragment"
         android:label="fragment_profile"
@@ -77,4 +51,29 @@
         android:name="com.parking.parkingapp.view.my_parking.MyParkingFragment"
         android:label="fragment_my_parking"
         tools:layout="@layout/fragment_my_parking" />
+    <fragment
+        android:id="@+id/mapHolderFragment"
+        android:name="com.parking.parkingapp.view.map.MapHolderFragment"
+        android:label="fragment_map_holder"
+        tools:layout="@layout/fragment_map_holder" />
+    <fragment
+        android:id="@+id/parkDetailFragment"
+        android:name="com.parking.parkingapp.view.park.ParkDetailFragment"
+        android:label="fragment_park_detail"
+        tools:layout="@layout/fragment_park_detail" >
+        <action
+            android:id="@+id/action_parkDetailFragment_to_parkReservationFragment"
+            app:destination="@id/parkReservationFragment" />
+    </fragment>
+    <fragment
+        android:id="@+id/parkReservationFragment"
+        android:name="com.parking.parkingapp.view.park.ParkReservationFragment"
+        android:label="fragment_park_reservation"
+        tools:layout="@layout/fragment_park_reservation" >
+        <action
+            android:id="@+id/action_parkReservationFragment_to_mapHolderFragment"
+            app:popUpToInclusive="true"
+            app:popUpTo="@id/mapHolderFragment"
+            app:destination="@id/mapHolderFragment" />
+    </fragment>
 </navigation>
\ No newline at end of file
Index: app/src/main/res/drawable/dash_line.xml
===================================================================
diff --git a/app/src/main/res/drawable/dash_line.xml b/app/src/main/res/drawable/dash_line.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/dash_line.xml	
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="line">
+    <stroke
+        android:width="1dp"
+        android:color="@color/black"
+        android:dashWidth="10dp"
+        android:dashGap="5dp" />
+</shape>
\ No newline at end of file
Index: app/src/main/res/drawable/dot.xml
===================================================================
diff --git a/app/src/main/res/drawable/dot.xml b/app/src/main/res/drawable/dot.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/dot.xml	
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="4dp"
+    android:height="4dp"
+    android:viewportWidth="4"
+    android:viewportHeight="4">
+  <path
+      android:pathData="M2,2m-2,0a2,2 0,1 1,4 0a2,2 0,1 1,-4 0"
+      android:fillColor="#000000"/>
+</vector>
Index: app/src/main/java/com/parking/parkingapp/view/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/MainActivity.kt b/app/src/main/java/com/parking/parkingapp/view/MainActivity.kt
--- a/app/src/main/java/com/parking/parkingapp/view/MainActivity.kt	
+++ b/app/src/main/java/com/parking/parkingapp/view/MainActivity.kt	
@@ -48,11 +48,18 @@
                 }
             }
         })
+
         supportFragmentManager.findFragmentById(R.id.nav_host_fragment)?.childFragmentManager?.let {
             it.addOnBackStackChangedListener {
                 handleOnScreenChange(it.fragments.lastOrNull())
             }
         }
+        binding.headerMenu.setOnClickListener {
+            ((supportFragmentManager
+                .findFragmentById(R.id.drawer_menu) as? NavHostFragment)
+                ?.childFragmentManager
+                ?.primaryNavigationFragment as? DrawerMenuFragment)?.open()
+        }
     }
 
     private fun handleOnScreenChange(screen: Fragment?) {
@@ -73,9 +80,17 @@
 
     fun mainNavController() = findNavController(R.id.nav_host_fragment)
 
-    fun setOnHeaderBack(onBack: (() -> Unit)? = null) {
+    fun visibleMapScreen(isVisible: Boolean) {
+        binding.mapNavFragment.hasVisible = isVisible
+    }
+
+    fun setOnHeaderBack(
+        onBack: (() -> Unit)? = null,
+        backListener: (() -> Unit)? = null
+    ) {
         binding.headerBack.setOnClickListener {
-            onBack?.invoke() ?: findNavController(R.id.nav_host_fragment).popBackStack()
+            onBack?.invoke() ?: mainNavController().popBackStack()
+            backListener?.invoke()
         }
     }
 
@@ -87,6 +102,10 @@
         binding.header.hasVisible = isShow
     }
 
+    fun isShowMenu(isShow: Boolean) {
+        binding.headerMenu.hasVisible = isShow
+    }
+
 
     override fun inflateBinding(): ActivityMainBinding = ActivityMainBinding.inflate(layoutInflater)
 }
\ No newline at end of file
Index: app/src/main/res/drawable/icon_park_outline_right.xml
===================================================================
diff --git a/app/src/main/res/drawable/icon_park_outline_right.xml b/app/src/main/res/drawable/icon_park_outline_right.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/icon_park_outline_right.xml	
@@ -0,0 +1,13 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="41dp"
+    android:height="36dp"
+    android:viewportWidth="41"
+    android:viewportHeight="36">
+  <path
+      android:pathData="M16.229,9L26.479,18L16.229,27"
+      android:strokeLineJoin="round"
+      android:strokeWidth="4"
+      android:fillColor="#00000000"
+      android:strokeColor="#000000"
+      android:strokeLineCap="round"/>
+</vector>
Index: app/src/main/res/drawable/ri_direction_fill.xml
===================================================================
diff --git a/app/src/main/res/drawable/ri_direction_fill.xml b/app/src/main/res/drawable/ri_direction_fill.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/ri_direction_fill.xml	
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+  <path
+      android:pathData="M9,10C8.735,10 8.48,10.105 8.293,10.293C8.105,10.48 8,10.735 8,11V15H10V12H13V14.5L16.5,11L13,7.5V10H9ZM12.707,1.393L22.607,11.293C22.795,11.481 22.9,11.735 22.9,12C22.9,12.265 22.795,12.519 22.607,12.707L12.707,22.607C12.519,22.795 12.265,22.9 12,22.9C11.735,22.9 11.481,22.795 11.293,22.607L1.393,12.707C1.206,12.519 1.1,12.265 1.1,12C1.1,11.735 1.206,11.481 1.393,11.293L11.293,1.393C11.481,1.206 11.735,1.1 12,1.1C12.265,1.1 12.519,1.206 12.707,1.393Z"
+      android:fillColor="#000000"/>
+</vector>
Index: app/src/main/res/layout/fragment_map_holder.xml
===================================================================
diff --git a/app/src/main/res/layout/fragment_map_holder.xml b/app/src/main/res/layout/fragment_map_holder.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/fragment_map_holder.xml	
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".view.map.MapHolderFragment">
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:text="@string/hello_blank_fragment" />
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_park_detail.xml
===================================================================
diff --git a/app/src/main/res/layout/fragment_park_detail.xml b/app/src/main/res/layout/fragment_park_detail.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/fragment_park_detail.xml	
@@ -0,0 +1,394 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.core.widget.NestedScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/blue_gray"
+    tools:context=".view.park.ParkDetailFragment">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:background="@color/blue_gray">
+
+        <androidx.constraintlayout.widget.ConstraintLayout
+            android:id="@+id/park_info_container"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:background="@color/white"
+            android:padding="10dp"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            tools:visibility="visible">
+
+
+            <TextView
+                android:id="@+id/park_name"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="10dp"
+                android:text="Bai do Long Thanh"
+                android:textColor="@color/black"
+                android:textSize="20sp"
+                android:textStyle="bold"
+                app:layout_constraintBottom_toTopOf="@id/park_address"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toTopOf="parent" />
+
+            <TextView
+                android:id="@+id/park_address"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="8dp"
+                android:text="Hanoi, VietNam"
+                android:textSize="14sp"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toBottomOf="@id/park_name"
+                tools:ignore="SmallSp" />
+
+            <ImageView
+                android:id="@+id/park_coin"
+                android:layout_width="18dp"
+                android:layout_height="19dp"
+                android:layout_marginStart="10dp"
+                android:background="@drawable/basil_location_solid"
+                app:layout_constraintBottom_toBottomOf="@id/park_price"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toTopOf="@id/park_price"
+                tools:ignore="ContentDescription" />
+
+            <TextView
+                android:id="@+id/park_price"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginHorizontal="3dp"
+                android:text="19 Slot trống"
+                android:textColor="@color/black"
+                android:textSize="14sp"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintStart_toEndOf="@id/park_coin"
+                app:layout_constraintTop_toBottomOf="@id/park_address"
+                tools:ignore="SmallSp" />
+
+
+            <ImageView
+                android:id="@+id/park_direction"
+                android:layout_width="18dp"
+                android:layout_height="18dp"
+                android:layout_marginStart="18dp"
+                android:src="@drawable/gps"
+                app:layout_constraintBottom_toBottomOf="@id/park_price"
+                app:layout_constraintEnd_toStartOf="@id/park_distance"
+                app:layout_constraintStart_toEndOf="@id/park_price"
+                app:layout_constraintTop_toTopOf="@id/park_price"
+                tools:ignore="ContentDescription" />
+
+            <TextView
+                android:id="@+id/park_distance"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginHorizontal="3dp"
+                android:text="200m"
+                android:textColor="@color/black"
+                android:textSize="14sp"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintStart_toEndOf="@id/park_direction"
+                app:layout_constraintTop_toBottomOf="@id/park_address"
+                tools:ignore="SmallSp" />
+
+            <ImageView
+                android:id="@+id/park_image"
+                android:layout_width="80dp"
+                android:layout_height="80dp"
+                android:src="@drawable/parking_placeholder"
+                app:layout_constraintBottom_toBottomOf="parent"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintTop_toTopOf="parent"
+                tools:ignore="ContentDescription" />
+        </androidx.constraintlayout.widget.ConstraintLayout>
+
+        <View
+            android:id="@+id/park_info_divider"
+            android:layout_width="match_parent"
+            android:layout_height="0.5dp"
+            android:background="@color/gray"
+            app:layout_constraintTop_toBottomOf="@id/park_info_container" />
+
+        <LinearLayout
+            android:id="@+id/park_direction_button"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:background="@color/white"
+            android:gravity="center"
+            android:padding="12dp"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/park_info_divider">
+
+            <ImageView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:src="@drawable/ri_direction_fill" />
+
+            <Space
+                android:layout_width="6dp"
+                android:layout_height="wrap_content" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/direction"
+                android:textColor="@color/black"
+                android:textSize="18sp"
+                android:textStyle="bold" />
+        </LinearLayout>
+
+        <LinearLayout
+            android:id="@+id/park_detail_container"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginVertical="30dp"
+            android:layout_marginTop="28dp"
+            android:background="@color/white"
+            android:orientation="vertical"
+            android:padding="20dp"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintHorizontal_bias="0.0"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/park_direction_button">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/park_detail"
+                android:textColor="@color/black"
+                android:textSize="20sp"
+                android:textStyle="bold" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/park_address"
+                android:textSize="16sp"
+                android:textStyle="bold" />
+
+            <TextView
+                android:id="@+id/detail_address"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginVertical="15dp"
+                android:text="@string/lorem" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/active_time"
+                android:textSize="16sp"
+                android:textStyle="bold" />
+
+            <TextView
+                android:id="@+id/detail_time"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Open Now-"
+                android:textColor="@color/black"
+                android:textSize="16sp"
+                android:textStyle="bold" />
+        </LinearLayout>
+
+        <FrameLayout
+            android:id="@+id/park_time_container"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginVertical="30dp"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/park_detail_container">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="vertical">
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:baselineAligned="false">
+
+                    <LinearLayout
+                        android:id="@+id/detail_pick_start_time"
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1"
+                        android:background="@color/white"
+                        android:gravity="center"
+                        android:orientation="vertical"
+                        android:paddingTop="8dp"
+                        android:paddingBottom="20sp">
+
+                        <TextView
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="@string/open_time_title"
+                            android:textColor="@color/black"
+                            android:textSize="18sp"
+                            android:textStyle="bold" />
+
+                        <TextView
+                            android:id="@+id/picked_start_time"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="@string/pick_time" />
+                    </LinearLayout>
+
+                    <LinearLayout
+                        android:id="@+id/detail_pick_end_time"
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1"
+                        android:background="@color/white"
+                        android:gravity="center"
+                        android:orientation="vertical"
+                        android:paddingTop="8dp"
+                        android:paddingBottom="20sp">
+
+                        <TextView
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="@string/close_time_title"
+                            android:textColor="@color/black"
+                            android:textSize="18sp"
+                            android:textStyle="bold" />
+
+                        <TextView
+                            android:id="@+id/picked_end_time"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="@string/pick_time" />
+                    </LinearLayout>
+                </LinearLayout>
+
+                <LinearLayout
+                    android:visibility="gone"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content">
+
+                    <LinearLayout
+                        android:id="@+id/detail_pick_start_date"
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1"
+                        android:background="@color/white"
+                        android:gravity="center"
+                        android:orientation="vertical"
+                        android:paddingTop="8dp"
+                        android:paddingBottom="20sp">
+
+                        <TextView
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="Ngày đến"
+                            android:textColor="@color/black"
+                            android:textSize="18sp"
+                            android:textStyle="bold" />
+
+                        <TextView
+                            android:id="@+id/picked_start_date"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="@string/pick_time" />
+                    </LinearLayout>
+
+
+                    <LinearLayout
+                        android:id="@+id/detail_pick_end_date"
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1"
+                        android:background="@color/white"
+                        android:gravity="center"
+                        android:orientation="vertical"
+                        android:paddingTop="8dp"
+                        android:paddingBottom="20sp">
+
+                        <TextView
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="@string/close_time_title"
+                            android:textColor="@color/black"
+                            android:textSize="18sp"
+                            android:textStyle="bold" />
+
+                        <TextView
+                            android:id="@+id/picked_end_date"
+                            android:layout_width="wrap_content"
+                            android:layout_height="wrap_content"
+                            android:text="@string/pick_time" />
+                    </LinearLayout>
+                </LinearLayout>
+            </LinearLayout>
+
+            <View
+                android:layout_width="0.5dp"
+                android:layout_height="match_parent"
+                android:layout_gravity="center"
+                android:background="@color/gray" />
+
+            <TextView
+                android:id="@+id/total_time"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginBottom="10dp"
+                android:background="@drawable/rounded_shape"
+                android:paddingHorizontal="10dp"
+                android:paddingVertical="3dp"
+                android:text="@string/total_time_default"
+                android:textColor="@color/white"
+                android:textSize="16sp"
+                android:textStyle="bold" />
+        </FrameLayout>
+
+        <TextView
+            android:id="@+id/park_error"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Wrong"
+            android:textColor="@color/red"
+            android:visibility="gone"
+            app:layout_constraintBottom_toTopOf="@id/park_button_container"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            tools:visibility="visible" />
+
+        <FrameLayout
+            android:id="@+id/park_button_container"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginHorizontal="20dp"
+            android:layout_marginTop="30dp"
+            android:layout_marginBottom="30dp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/park_time_container">
+
+            <ProgressBar
+                android:id="@+id/park_loading"
+                android:layout_width="50dp"
+                android:layout_height="50dp"
+                android:layout_gravity="center"
+                android:indeterminate="true"
+                android:indeterminateTint="@color/black" />
+
+            <androidx.appcompat.widget.AppCompatButton
+                android:id="@+id/checkout_button"
+                style="@style/BlackFilledButton"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/detail_checkout_default" />
+        </FrameLayout>
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</androidx.core.widget.NestedScrollView>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_park_reservation.xml
===================================================================
diff --git a/app/src/main/res/layout/fragment_park_reservation.xml b/app/src/main/res/layout/fragment_park_reservation.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/fragment_park_reservation.xml	
@@ -0,0 +1,127 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/sub_yellow"
+    android:gravity="center"
+    android:orientation="vertical"
+    tools:context=".view.park.ParkReservationFragment">
+
+    <FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:layout_marginHorizontal="20dp"
+        android:background="@drawable/white_rounded_outline"
+        android:paddingVertical="20dp">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:divider="@drawable/divider_vertical"
+            android:gravity="center"
+            android:orientation="vertical"
+            android:showDividers="middle"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/payment_success"
+                android:textColor="@color/black"
+                android:textSize="26sp"
+                android:textStyle="bold" />
+
+            <View
+                android:layout_width="match_parent"
+                android:layout_height="0.5dp"
+                android:background="@color/gray" />
+
+            <TextView
+                android:id="@+id/reservation_park_bill"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="500.000d"
+                android:textColor="@color/quantum_googgreen"
+                android:textSize="35sp"
+                android:textStyle="bold" />
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/rent_success"
+                android:textColor="@color/black"
+                android:textSize="18sp" />
+
+            <ImageView
+                android:layout_width="150dp"
+                android:layout_height="150dp"
+                android:src="@drawable/success" />
+
+            <TextView
+                android:id="@+id/reservation_park_id"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/booking_id" />
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:clipChildren="false"
+                android:clipToPadding="false"
+                android:gravity="center_vertical"
+                android:orientation="horizontal">
+
+                <View
+                    android:layout_width="40dp"
+                    android:layout_height="40dp"
+                    android:background="@drawable/rounded_shape"
+                    android:backgroundTint="@color/sub_yellow"
+                    android:translationX="-20dp" />
+
+                <View
+                    android:layout_width="0dp"
+                    android:layout_height="2dp"
+                    android:layout_weight="1"
+                    android:background="@drawable/dash_line" />
+
+                <View
+                    android:layout_width="40dp"
+                    android:layout_height="40dp"
+                    android:background="@drawable/rounded_shape"
+                    android:backgroundTint="@color/sub_yellow"
+                    android:translationX="20dp" />
+            </LinearLayout>
+
+            <TextView
+                android:id="@+id/reservation_park_name"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Bai do Xe Long Thanh"
+                android:textColor="@color/black"
+                android:textSize="26sp"
+                android:textStyle="bold" />
+
+            <TextView
+                android:id="@+id/reservation_park_address"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Long Thanh, TP.Ho Chi Minh" />
+        </LinearLayout>
+    </FrameLayout>
+
+    <androidx.appcompat.widget.AppCompatButton
+        android:id="@+id/done_button"
+        style="@style/BlackFilledButton"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="15dp"
+        android:layout_marginVertical="20dp"
+        android:backgroundTint="@color/green"
+        android:text="Done" />
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	
+++ b/app/src/main/res/values/strings.xml	
@@ -17,4 +17,28 @@
     <string name="back">Back</string>
     <string name="can_t_login_reset_password">Can\'t login?  <u>Reset password</u></string>
     <string name="change_profile_fail">CHANGE PROFILE FAIL</string>
+    <string name="distance_meter">%sm</string>
+    <string name="open_time">Open Now - %s</string>
+    <string name="closed_time">Closed - %s</string>
+    <string name="lorem">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</string>
+    <string name="active_time">GIỜ HOẠT ĐỘNG</string>
+    <string name="park_detail">Chi tiết</string>
+    <string name="park_address">ĐỊA CHỈ</string>
+    <string name="open_time_title">Giờ đến</string>
+    <string name="close_time_title">Giờ đi</string>
+    <string name="pick_time">Chọn giờ</string>
+    <string name="direction">Direction</string>
+    <string name="total_time">%s Giờ</string>
+    <string name="start_day">Ngày thuê</string>
+    <string name="total_time_default">0 Giờ</string>
+    <string name="detail_checkout">Thanh toán %s</string>
+    <string name="detail_checkout_default">Thanh toán 0Đ</string>
+    <string name="my_park_time">%s - %s</string>
+    <string name="payment_success">Thanh toán thành công</string>
+    <string name="rent_success">Bạn đã đặt chỗ thành công</string>
+    <string name="booking_id">BOOKING ID : %s</string>
+    <string name="gps_is_on">GPS đã được bật</string>
+    <string name="gps_is_off">GPS không được bật</string>
+    <string name="start_time_not_valid">Thời gian bắt đầu không hợp lệ</string>
+    <string name="end_time_not_valid">Thời gian kết thúc không hợp lệ</string>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt b/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/data/repositoryImpl/ParkRepositoryImpl.kt	
@@ -0,0 +1,95 @@
+package com.parking.parkingapp.data.repositoryImpl
+
+import android.util.Log
+import com.google.firebase.firestore.CollectionReference
+import com.google.firebase.firestore.SetOptions
+import com.google.firebase.firestore.ktx.firestore
+import com.google.firebase.ktx.Firebase
+import com.parking.parkingapp.common.CollectionRef
+import com.parking.parkingapp.common.FireCollectionRef
+import com.parking.parkingapp.common.Resource
+import com.parking.parkingapp.common.parkStub
+import com.parking.parkingapp.data.entity.ParkEntity
+import com.parking.parkingapp.data.entity.RentParkEntity
+import com.parking.parkingapp.data.model.MyRentedPark
+import com.parking.parkingapp.data.model.ParkModel
+import com.parking.parkingapp.data.model.toMyRentedPark
+import com.parking.parkingapp.data.model.toParkModel
+import com.parking.parkingapp.data.model.toRentParkEntity
+import com.parking.parkingapp.data.repository.ParkRepository
+import kotlinx.coroutines.channels.awaitClose
+import kotlinx.coroutines.flow.Flow
+import kotlinx.coroutines.flow.callbackFlow
+import kotlinx.coroutines.tasks.await
+import javax.inject.Inject
+
+class ParkRepositoryImpl @Inject constructor(
+    @FireCollectionRef(CollectionRef.PARK) private val parkCollectionRef: CollectionReference,
+    @FireCollectionRef(CollectionRef.USER) private val userCollectionRef: CollectionReference,
+): ParkRepository {
+    override fun getPark(): Flow<Resource<List<ParkModel>>> =
+        callbackFlow {
+            runCatching {
+                parkCollectionRef.addSnapshotListener { value, error ->
+                    error?.let {
+                        trySend(Resource.Fail(it.message))
+                    }
+                    value?.let { snapShots ->
+                        trySend(Resource.Success(snapShots.documents.mapNotNull {
+                            it.toObject(ParkEntity::class.java)?.toParkModel()
+                        }))
+                    }
+                }
+            }.onFailure {
+                send(Resource.Fail(it.message))
+            }
+            awaitClose()
+        }
+
+    override suspend fun rentPark(myRentedPark: MyRentedPark): Resource<MyRentedPark> {
+        return try {
+            val result: MyRentedPark
+            userCollectionRef
+                .document(myRentedPark.userId)
+                .collection(CollectionRef.MY_PARK.value)
+                .document().apply {
+                    result = myRentedPark.copy(id = this.id)
+                    set(result.toRentParkEntity()).await()
+                }
+            Resource.Success(result)
+        } catch (e: Exception) {
+            Resource.Fail(e.message)
+        }
+    }
+
+    override fun getMyRentedPark(userId: String): Flow<Resource<List<MyRentedPark>>> =
+        callbackFlow {
+            runCatching {
+                userCollectionRef
+                    .document(userId)
+                    .collection(CollectionRef.MY_PARK.value)
+                    .get().addOnSuccessListener { snapShots ->
+                        trySend(Resource.Success(snapShots.documents.mapNotNull {
+                            it.toObject(RentParkEntity::class.java)?.toMyRentedPark()
+                        }))
+                    }.addOnFailureListener {
+                        trySend(Resource.Fail(it.message))
+                    }
+            }.onFailure {
+                send(Resource.Fail(it.message))
+            }
+            awaitClose()
+        }
+
+    override fun upDate() {
+        Firebase.firestore.runTransaction { transaction ->
+            parkStub.forEach { park ->
+                transaction.set(
+                    parkCollectionRef.document(park.id),
+                    park,
+                    SetOptions.merge()
+                )
+            }
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/map/MapHolderFragment.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/map/MapHolderFragment.kt b/app/src/main/java/com/parking/parkingapp/view/map/MapHolderFragment.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/view/map/MapHolderFragment.kt	
@@ -0,0 +1,29 @@
+package com.parking.parkingapp.view.map
+
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import com.parking.parkingapp.R
+import com.parking.parkingapp.view.MainActivity
+
+class MapHolderFragment: Fragment() {
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        return inflater.inflate(R.layout.fragment_map_holder, container, false)
+    }
+
+    override fun onStart() {
+        super.onStart()
+        (activity as MainActivity).visibleMapScreen(true)
+    }
+    override fun onStop() {
+        super.onStop()
+        (activity as MainActivity).visibleMapScreen(false)
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/map/MarkerLabel.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/map/MarkerLabel.kt b/app/src/main/java/com/parking/parkingapp/view/map/MarkerLabel.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/view/map/MarkerLabel.kt	
@@ -0,0 +1,5 @@
+package com.parking.parkingapp.view.map
+
+data class MarkerLabel(
+    val group: String
+)
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt b/app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt
--- a/app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt	
+++ b/app/src/main/java/com/parking/parkingapp/view/map/MapboxUtils.kt	
@@ -1,11 +1,37 @@
 package com.parking.parkingapp.view.map
 
+import android.Manifest
+import android.annotation.SuppressLint
+import android.app.Activity
+import android.content.Context
+import android.content.IntentSender
+import android.content.pm.PackageManager
+import android.graphics.Bitmap
+import android.graphics.Canvas
 import android.graphics.Color
+import android.view.View
+import androidx.activity.result.ActivityResultLauncher
+import androidx.activity.result.IntentSenderRequest
+import androidx.core.app.ActivityCompat
+import androidx.core.content.ContextCompat
+import com.google.android.gms.common.api.ResolvableApiException
+import com.google.android.gms.location.Granularity
+import com.google.android.gms.location.LocationRequest
+import com.google.android.gms.location.LocationServices
+import com.google.android.gms.location.LocationSettingsRequest
+import com.google.android.gms.location.Priority
+import com.mapbox.geojson.Point
 import com.mapbox.maps.extension.style.StyleExtensionImpl
 import com.mapbox.maps.extension.style.layers.generated.LineLayer
 import com.mapbox.maps.extension.style.layers.generated.lineLayer
 import com.mapbox.maps.extension.style.layers.properties.generated.LineCap
 import com.mapbox.maps.extension.style.layers.properties.generated.LineJoin
+import com.mapbox.turf.TurfMeasurement
+import java.text.DecimalFormat
+import java.time.LocalTime
+import java.time.format.DateTimeFormatter
+import java.util.Calendar
+import java.util.Locale
 
 fun StyleExtensionImpl.Builder.lineLayerPreset(
     layerId: String,
@@ -19,4 +45,133 @@
     lineJoin(lineJoin)
     lineColor(Color.parseColor(lineColor))
     lineWidth(lineWidth)
+}
+
+fun Point.distanceTo(destination: Point): Double =
+    TurfMeasurement.distance(this, destination, "meters")
+
+fun formatCurrencyPerHour(amount: Int): String {
+    val formatter = DecimalFormat("#,###")
+    return "${formatter.format(amount)}đ/h"
+}
+
+fun formatCurrency(amount: Double): String {
+    val formatter = DecimalFormat("#,###")
+    return "${formatter.format(amount)}đ"
+}
+
+fun formatTime(hour: Double): String {
+    val hours = hour.toInt()
+    val minutes = ((hour - hours) * 60).toInt()
+    val isPM = hours >= 12
+    val formattedHours = if (hours == 0) 12 else if (hours > 12) hours - 12 else hours
+    val formattedMinutes = minutes.toString().padStart(2, '0')
+    val period = if (isPM) "PM" else "AM"
+
+    return "$formattedHours:$formattedMinutes$period"
+}
+
+@SuppressLint("NewApi")
+fun isCurrentTimeInRange(
+    startTime: String,
+    endTime: String
+): Boolean {
+    val formatter = DateTimeFormatter.ofPattern("h:mma", Locale.US)
+    val start = LocalTime.parse(startTime, formatter)
+    val end = LocalTime.parse(endTime, formatter)
+    val now = LocalTime.now()
+
+    return if (start.isBefore(end)) {
+        now.isAfter(start) && now.isBefore(end)
+    } else {
+        now.isAfter(start) || now.isBefore(end)
+    }
+}
+
+@SuppressLint("NewApi")
+fun isCurrentTimeInRange(
+    startTime: LocalTime,
+    endTime: LocalTime,
+    currentTime: LocalTime? = null
+): Boolean {
+    val now = currentTime ?: LocalTime.now()
+    return if (startTime.isBefore(endTime)) {
+        now.isAfter(startTime) && now.isBefore(endTime)
+    } else {
+        now.isAfter(startTime) || now.isBefore(endTime)
+    }
+}
+
+fun calculateDecimalTimeDifference(startTime: Calendar, endTime: Calendar): Double {
+    val diffInMillis = endTime.timeInMillis - startTime.timeInMillis
+    return diffInMillis.toDouble() / (1000 * 60 * 60)
+}
+
+fun Double.roundToOneDecimal(): Double {
+    val decimalFormat = DecimalFormat("#.#")
+    return decimalFormat.format(this).toDouble()
+}
+
+fun checkLocationPermission(
+    context: Context,
+    activity: Activity
+) {
+    if (ContextCompat.checkSelfPermission(
+            context, Manifest.permission.ACCESS_FINE_LOCATION
+        ) != PackageManager.PERMISSION_GRANTED
+    ) {
+        ActivityCompat.requestPermissions(
+            activity,
+            arrayOf(Manifest.permission.ACCESS_FINE_LOCATION),
+            MapboxFragment.LOCATION_PERMISSION_REQUEST_CODE
+        )
+    }
+}
+
+fun requestGPS(
+    activity: Activity,
+    requestLauncher: ActivityResultLauncher<IntentSenderRequest>
+) {
+    val settingsRequest = LocationSettingsRequest.Builder()
+        .addLocationRequest(LocationRequest.Builder(Priority.PRIORITY_HIGH_ACCURACY, 1000).apply {
+            setMinUpdateDistanceMeters(1000F)
+            setGranularity(Granularity.GRANULARITY_PERMISSION_LEVEL)
+            setWaitForAccurateLocation(true)
+        }.build())
+        .build()
+
+    LocationServices.getSettingsClient(activity)
+        .checkLocationSettings(settingsRequest)
+        .addOnFailureListener { exception ->
+            if (exception is ResolvableApiException) {
+                try {
+                    val intentSenderRequest = IntentSenderRequest.Builder(exception.resolution)
+                        .build()
+                    requestLauncher.launch(intentSenderRequest)
+                } catch (sendEx: IntentSender.SendIntentException) {
+                    sendEx.printStackTrace()
+                }
+            }
+        }
+}
+
+fun createBitmapFromView(
+    view: View,
+    divScale: Double = 2.5
+): Bitmap {
+    view.measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED)
+    view.layout(0, 0, view.measuredWidth, view.measuredHeight)
+    val bitmap = Bitmap.createBitmap(
+        view.measuredWidth,
+        view.measuredHeight,
+        Bitmap.Config.ARGB_8888
+    )
+    val canvas = Canvas(bitmap)
+    view.draw(canvas)
+    return Bitmap.createScaledBitmap(
+        bitmap,
+        (view.measuredWidth / divScale).toInt(),
+        (view.measuredHeight / divScale).toInt(),
+        true
+    )
 }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailFragment.kt	
@@ -0,0 +1,250 @@
+package com.parking.parkingapp.view.park
+
+import android.annotation.SuppressLint
+import android.app.TimePickerDialog
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.ViewGroup
+import androidx.fragment.app.setFragmentResult
+import androidx.fragment.app.viewModels
+import androidx.lifecycle.LifecycleCoroutineScope
+import androidx.navigation.fragment.findNavController
+import com.bumptech.glide.Glide
+import com.parking.parkingapp.R
+import com.parking.parkingapp.common.State
+import com.parking.parkingapp.common.hasVisible
+import com.parking.parkingapp.data.model.MyRentedPark
+import com.parking.parkingapp.data.model.ParkModel
+import com.parking.parkingapp.databinding.FragmentParkDetailBinding
+import com.parking.parkingapp.view.BaseFragment
+import com.parking.parkingapp.view.MainActivity
+import com.parking.parkingapp.view.map.MapboxFragment
+import com.parking.parkingapp.view.map.calculateDecimalTimeDifference
+import com.parking.parkingapp.view.map.formatCurrency
+import com.parking.parkingapp.view.map.formatCurrencyPerHour
+import com.parking.parkingapp.view.map.formatTime
+import com.parking.parkingapp.view.map.isCurrentTimeInRange
+import com.parking.parkingapp.view.map.roundToOneDecimal
+import dagger.hilt.android.AndroidEntryPoint
+import kotlinx.coroutines.launch
+import java.util.Calendar
+
+@AndroidEntryPoint
+class ParkDetailFragment: BaseFragment<FragmentParkDetailBinding>() {
+    private val viewModel: ParkDetailViewModel by viewModels()
+
+    private var currentPark: ParkModel? = null
+
+    companion object {
+        private const val TIME_FORMAT = "%02d:%02d"
+    }
+    override fun inflateBinding(
+        inflater: LayoutInflater,
+        container: ViewGroup?
+    ): FragmentParkDetailBinding = FragmentParkDetailBinding.inflate(inflater, container, false)
+
+    override fun initViews() {
+        (activity as? MainActivity)?.apply {
+            isShowHeader(true)
+            setOnHeaderBack()
+        }
+        setTotalTime(null, null, 0)
+        currentPark = arguments?.getParcelable(ParkModel::class.java.name) as? ParkModel
+        currentPark?.let {
+            (activity as? MainActivity)?.apply {
+                setHeaderTitle(it.name)
+            }
+            Glide
+                .with(requireContext())
+                .load(it.image)
+                .centerCrop()
+                .placeholder(R.drawable.parking_placeholder)
+                .into(binding.parkImage)
+            binding.parkName.text = it.name
+            binding.parkAddress.text = it.address
+            binding.detailAddress.text = it.detailAddress
+            binding.parkPrice.text = formatCurrencyPerHour(it.pricePerHour)
+            binding.parkDistance.text = arguments?.getString(ParkModel::class.java.name + "distance")
+            val startTime = formatTime(it.openTime)
+            val closeTime = formatTime(it.closeTime)
+            binding.detailTime.apply {
+                val isInTime = isCurrentTimeInRange(startTime, closeTime)
+                text = getString(
+                    if (isInTime) R.string.open_time
+                    else R.string.closed_time,
+                    "$startTime - $closeTime"
+                )
+                setTextColor(
+                    if (isInTime) requireContext().resources.getColor(R.color.green, null)
+                    else requireContext().resources.getColor(R.color.red, null)
+                )
+            }
+        }
+    }
+
+    @SuppressLint("NewApi")
+    override fun initActions() {
+        binding.parkDirectionButton.setOnClickListener {
+            parentFragment?.setFragmentResult(MapboxFragment::class.java.name, Bundle().apply {
+                putBoolean(ParkDetailFragment::class.java.name, true)
+            })
+            findNavController().popBackStack()
+        }
+        handlePickTime()
+        binding.checkoutButton.setOnClickListener {
+            viewModel.submitCheckout(
+                currentPark!!,
+                binding.pickedStartTime.text.toString(),
+                binding.pickedEndTime.text.toString(),
+                binding.totalTime.text.split(" ").first().toDouble(),
+                isCurrentTimeInRange(
+                    formatTime(currentPark!!.openTime),
+                    formatTime(currentPark!!.closeTime)
+                )
+            )
+        }
+    }
+
+    private fun handlePickTime() {
+        var startTime: Calendar? = null
+        var endTime: Calendar? = null
+        val calendar = Calendar.getInstance()
+        val hour = calendar.get(Calendar.HOUR_OF_DAY)
+        val minute = calendar.get(Calendar.MINUTE)
+        binding.detailPickStartTime.setOnClickListener {
+            val timePicker = TimePickerDialog(requireContext(), { _, selectedHour, selectedMinute ->
+                startTime = Calendar.getInstance().apply {
+                    set(Calendar.HOUR_OF_DAY, selectedHour)
+                    set(Calendar.MINUTE, selectedMinute)
+                }.validatePickedTime(
+                    startTime = startTime,
+                    endTime = endTime,
+                    parkModel = currentPark!!,
+                    isStartTime = true
+                )
+                if (startTime == null) {
+                    binding.parkError.apply {
+                        text = getString(R.string.start_time_not_valid)
+                        hasVisible = true
+                    }
+                    return@TimePickerDialog
+                }
+                binding.parkError.hasVisible = false
+                val time =
+                    String.format(TIME_FORMAT, startTime!!.get(Calendar.HOUR_OF_DAY), startTime!!.get(Calendar.MINUTE))
+                binding.pickedStartTime.text = time
+                setTotalTime(startTime, endTime, currentPark!!.pricePerHour)
+            }, hour, minute, true)
+            timePicker.show()
+        }
+
+        binding.detailPickEndTime.setOnClickListener {
+            val timePicker = TimePickerDialog(requireContext(), { _, selectedHour, selectedMinute ->
+                endTime = Calendar.getInstance().apply {
+                    set(Calendar.HOUR_OF_DAY, selectedHour)
+                    set(Calendar.MINUTE, selectedMinute)
+                }.validatePickedTime(
+                    startTime = startTime,
+                    endTime = endTime,
+                    parkModel = currentPark!!,
+                    isStartTime = false
+                )
+                if (endTime == null) {
+                    binding.parkError.apply {
+                        text = getString(R.string.end_time_not_valid)
+                        hasVisible = true
+                    }
+                    return@TimePickerDialog
+                }
+                binding.parkError.hasVisible = false
+                val time =
+                    String.format(TIME_FORMAT, endTime!!.get(Calendar.HOUR_OF_DAY), endTime!!.get(Calendar.MINUTE))
+                binding.pickedEndTime.text = time
+                setTotalTime(startTime, endTime, currentPark!!.pricePerHour)
+            }, hour, minute, true)
+            timePicker.show()
+        }
+    }
+
+    private fun setTotalTime(startTime: Calendar?, endTime: Calendar?, price: Int) {
+        if (startTime != null && endTime != null) {
+            val totalTime = calculateDecimalTimeDifference(startTime, endTime).roundToOneDecimal()
+            binding.checkoutButton.apply {
+                text = getString(
+                    R.string.detail_checkout,
+                    formatCurrency(totalTime * price)
+                ).uppercase()
+                isEnabled = true
+                backgroundTintList = resources.getColorStateList(R.color.black, null)
+            }
+            binding.totalTime.apply {
+                text = getString(
+                    R.string.total_time,
+                    totalTime.toString()
+                )
+                backgroundTintList = resources.getColorStateList(R.color.main_yellow, null)
+            }
+        } else {
+            binding.checkoutButton.apply {
+                isEnabled = false
+                backgroundTintList = resources.getColorStateList(R.color.gray, null)
+            }
+            binding.totalTime.apply {
+                backgroundTintList = resources.getColorStateList(R.color.gray, null)
+            }
+        }
+    }
+
+    override fun intiData() {
+        //suppress
+    }
+
+    override fun obverseFromViewModel(scope: LifecycleCoroutineScope) {
+        scope.launch {
+            viewModel.singleEvent.collect { state ->
+                loadingVisible(state == State.Loading)
+                handleError((state as? State.Error)?.error as? RentError)
+                when (state) {
+                    is State.Error -> {
+                        handleError(state.error as RentError)
+                    }
+
+                    State.Idle -> {
+                        //suppress
+                    }
+
+                    State.Loading -> {
+                        //suppress
+                    }
+
+                    is State.Success -> findNavController().navigate(
+                        R.id.action_parkDetailFragment_to_parkReservationFragment,
+                        Bundle().apply {
+                            putParcelable(
+                                MyRentedPark::class.java.name,
+                                (state.success as RentSuccess).result
+                            )
+                        }
+                    )
+                }
+            }
+        }
+    }
+
+    private fun loadingVisible(isLoading: Boolean) {
+        binding.parkLoading.hasVisible = isLoading
+        binding.checkoutButton.hasVisible = !isLoading
+    }
+
+    private fun handleError(rentError: RentError?) {
+        if (rentError != null) {
+            binding.parkError.apply {
+                text = rentError.errorMessage
+                hasVisible = true
+            }
+        } else {
+            binding.parkError.hasVisible = false
+        }
+
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/park/ParkReservationFragment.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/park/ParkReservationFragment.kt b/app/src/main/java/com/parking/parkingapp/view/park/ParkReservationFragment.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/view/park/ParkReservationFragment.kt	
@@ -0,0 +1,48 @@
+package com.parking.parkingapp.view.park
+
+import android.view.LayoutInflater
+import android.view.ViewGroup
+import androidx.lifecycle.LifecycleCoroutineScope
+import androidx.navigation.fragment.findNavController
+import com.parking.parkingapp.R
+import com.parking.parkingapp.data.model.MyRentedPark
+import com.parking.parkingapp.databinding.FragmentParkReservationBinding
+import com.parking.parkingapp.view.BaseFragment
+import com.parking.parkingapp.view.MainActivity
+import com.parking.parkingapp.view.map.formatCurrency
+
+class ParkReservationFragment: BaseFragment<FragmentParkReservationBinding>() {
+    override fun inflateBinding(
+        inflater: LayoutInflater,
+        container: ViewGroup?
+    ): FragmentParkReservationBinding = FragmentParkReservationBinding.inflate(inflater, container, false)
+
+    override fun initViews() {
+        (activity as? MainActivity)?.apply {
+            isShowHeader(false)
+            setOnHeaderBack()
+        }
+        (arguments?.getParcelable(MyRentedPark::class.java.name) as? MyRentedPark)?.let {
+            binding.reservationParkName.text = it.park.name
+            binding.reservationParkAddress.text = it.park.address
+            binding.reservationParkBill.text = formatCurrency(it.totalPay.toDouble()).uppercase()
+            binding.reservationParkId.text = getString(R.string.booking_id, it.id)
+        }
+    }
+
+    override fun initActions() {
+        binding.doneButton.setOnClickListener {
+            findNavController().navigate(
+                R.id.action_parkReservationFragment_to_mapHolderFragment
+            )
+        }
+    }
+
+    override fun intiData() {
+        //suppress
+    }
+
+    override fun obverseFromViewModel(scope: LifecycleCoroutineScope) {
+        //suppress
+    }
+}
\ No newline at end of file
Index: app/src/main/res/drawable/basil_location_solid.xml
===================================================================
diff --git a/app/src/main/res/drawable/basil_location_solid.xml b/app/src/main/res/drawable/basil_location_solid.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/basil_location_solid.xml	
@@ -0,0 +1,13 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="20dp"
+    android:height="21dp"
+    android:viewportWidth="20"
+    android:viewportHeight="21">
+  <path
+      android:pathData="M7.292,8.75C7.292,7.996 7.577,7.272 8.085,6.739C8.593,6.206 9.282,5.906 10,5.906C10.718,5.906 11.407,6.206 11.915,6.739C12.423,7.272 12.708,7.996 12.708,8.75C12.708,9.504 12.423,10.227 11.915,10.761C11.407,11.294 10.718,11.594 10,11.594C9.282,11.594 8.593,11.294 8.085,10.761C7.577,10.227 7.292,9.504 7.292,8.75Z"
+      android:fillColor="#000000"/>
+  <path
+      android:pathData="M3.145,7.767C3.284,6.008 4.047,4.368 5.283,3.173C6.52,1.977 8.139,1.313 9.82,1.313H10.18C11.861,1.313 13.48,1.977 14.717,3.173C15.953,4.368 16.716,6.008 16.855,7.767C17.009,9.731 16.431,11.681 15.244,13.207L11.25,18.337C11.099,18.531 10.908,18.688 10.692,18.795C10.476,18.903 10.239,18.959 10,18.959C9.761,18.959 9.524,18.903 9.308,18.795C9.092,18.688 8.901,18.531 8.75,18.337L4.757,13.207C3.569,11.681 2.991,9.731 3.145,7.767ZM10,4.594C8.95,4.594 7.943,5.032 7.201,5.811C6.459,6.591 6.042,7.648 6.042,8.75C6.042,9.852 6.459,10.91 7.201,11.689C7.943,12.468 8.95,12.906 10,12.906C11.05,12.906 12.057,12.468 12.799,11.689C13.541,10.91 13.958,9.852 13.958,8.75C13.958,7.648 13.541,6.591 12.799,5.811C12.057,5.032 11.05,4.594 10,4.594Z"
+      android:fillColor="#000000"
+      android:fillType="evenOdd"/>
+</vector>
Index: app/src/main/res/layout/my_parking_item.xml
===================================================================
diff --git a/app/src/main/res/layout/my_parking_item.xml b/app/src/main/res/layout/my_parking_item.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/my_parking_item.xml	
@@ -0,0 +1,146 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/park_info_container"
+    android:layout_width="match_parent"
+    android:layout_height="100dp"
+    android:layout_marginVertical="15dp"
+    android:layout_marginHorizontal="10dp"
+    android:background="@drawable/white_rounded_outline"
+    android:elevation="4dp"
+    android:padding="10dp">
+
+    <ImageView
+        android:id="@+id/my_park_image"
+        android:layout_width="80dp"
+        android:layout_height="80dp"
+        android:src="@drawable/parking_placeholder"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        tools:ignore="ContentDescription" />
+
+    <TextView
+        android:id="@+id/my_park_name"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="10dp"
+        android:text="Bai do Long Thanh"
+        android:textColor="@color/black"
+        android:textStyle="bold"
+        android:textSize="18sp"
+        app:layout_constraintBottom_toTopOf="@id/my_park_address"
+        app:layout_constraintStart_toEndOf="@id/my_park_image"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <TextView
+        android:id="@+id/my_park_address"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="10dp"
+        android:text="Hanoi, VietNam"
+        android:textSize="14sp"
+        app:layout_constraintStart_toEndOf="@id/my_park_image"
+        app:layout_constraintTop_toBottomOf="@id/my_park_name"
+        tools:ignore="SmallSp" />
+
+    <ImageView
+        android:id="@+id/my_park_coin"
+        android:layout_width="@dimen/sub_icon_park_card"
+        android:layout_height="@dimen/sub_icon_park_card"
+        android:layout_marginStart="10dp"
+        android:background="@drawable/coin"
+        app:layout_constraintBottom_toBottomOf="@id/my_park_price"
+        app:layout_constraintStart_toEndOf="@id/my_park_image"
+        app:layout_constraintTop_toTopOf="@id/my_park_price"
+        tools:ignore="ContentDescription" />
+
+    <TextView
+        android:id="@+id/my_park_price"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="3dp"
+        android:text="500.000d"
+        android:textColor="@color/black"
+        android:textSize="@dimen/sub_string_park_card"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toStartOf="@id/my_park_dot1"
+        app:layout_constraintStart_toEndOf="@id/my_park_coin"
+        app:layout_constraintTop_toBottomOf="@id/my_park_address"
+        tools:ignore="SmallSp" />
+
+    <ImageView
+        android:id="@+id/my_park_dot1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="3dp"
+        android:src="@drawable/dot"
+        app:layout_constraintBottom_toBottomOf="@id/my_park_price"
+        app:layout_constraintEnd_toStartOf="@id/my_park_time_icon"
+        app:layout_constraintStart_toEndOf="@id/my_park_price"
+        app:layout_constraintTop_toTopOf="@id/my_park_price"
+        tools:ignore="ContentDescription" />
+
+    <ImageView
+        android:id="@+id/my_park_time_icon"
+        android:layout_width="@dimen/sub_icon_park_card"
+        android:layout_height="@dimen/sub_icon_park_card"
+        android:src="@drawable/time"
+        app:layout_constraintBottom_toBottomOf="@id/my_park_price"
+        app:layout_constraintEnd_toStartOf="@id/my_park_time"
+        app:layout_constraintStart_toEndOf="@id/my_park_dot1"
+        app:layout_constraintTop_toTopOf="@id/my_park_price"
+        tools:ignore="ContentDescription" />
+
+    <TextView
+        android:id="@+id/my_park_time"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="3dp"
+        android:text="10:00-13:00"
+        android:textColor="@color/black"
+        android:textSize="@dimen/sub_string_park_card"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toEndOf="@id/my_park_time_icon"
+        app:layout_constraintEnd_toStartOf="@id/my_park_dot2"
+        app:layout_constraintTop_toBottomOf="@id/my_park_address"
+        tools:ignore="SmallSp" />
+
+    <ImageView
+        android:id="@+id/my_park_dot2"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="3dp"
+        android:src="@drawable/dot"
+        app:layout_constraintBottom_toBottomOf="@id/my_park_price"
+        app:layout_constraintEnd_toStartOf="@id/my_park_date_icon"
+        app:layout_constraintStart_toEndOf="@id/my_park_time"
+        app:layout_constraintTop_toTopOf="@id/my_park_price"
+        tools:ignore="ContentDescription" />
+
+    <ImageView
+        android:id="@+id/my_park_date_icon"
+        android:layout_width="@dimen/sub_icon_park_card"
+        android:layout_height="@dimen/sub_icon_park_card"
+        android:src="@drawable/calendar"
+        app:layout_constraintBottom_toBottomOf="@id/my_park_price"
+        app:layout_constraintEnd_toStartOf="@id/my_park_date"
+        app:layout_constraintStart_toEndOf="@id/my_park_dot2"
+        app:layout_constraintTop_toTopOf="@id/my_park_price"
+        tools:ignore="ContentDescription" />
+
+    <TextView
+        android:id="@+id/my_park_date"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginHorizontal="3dp"
+        android:text="22/11/20224"
+        android:textColor="@color/black"
+        android:textSize="@dimen/sub_string_park_card"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toEndOf="@id/my_park_date_icon"
+        app:layout_constraintTop_toBottomOf="@id/my_park_address"
+        tools:ignore="SmallSp" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/common/Stub.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/common/Stub.kt b/app/src/main/java/com/parking/parkingapp/common/Stub.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/common/Stub.kt	
@@ -0,0 +1,270 @@
+package com.parking.parkingapp.common
+
+import com.parking.parkingapp.data.entity.ParkEntity
+
+val parkStub = listOf(
+    ParkEntity(
+        id = "hWrol",
+        name = "92 Khương trung",
+        address = "Thanh Xuân, Hà Nội, Vietnam",
+        detailAddress = "92 P.Khương Trung, Khương Trung, Thanh Xuân, Hà Nội, Vietnam",
+        image = "https://media.vneconomy.vn/images/upload/2023/12/27/bai-do-xe1.jpg",
+        maxSlot = 30,
+        currentSlot = 0,
+        lat = 20.998917,
+        long = 105.819134,
+        pricePerHour = 15000,
+        openTime = 6.0,
+        closeTime = 22.0,
+    ),
+    ParkEntity(
+        id = "mMniQ",
+        name = "302 Láng",
+        address = "Đống Đa, Hà Nội, Vietnam",
+        detailAddress = "Nhà 13 Ng. 302 Đ. Láng, Thịnh Quang, Đống Đa, Hà Nội, Vietnam",
+        image = "https://cqm.vn/wp-content/uploads/z3931945320771_d9d67ac273afb962bd36fff32b7de74d.jpg",
+        maxSlot = 40,
+        currentSlot = 0,
+        lat = 21.007536737112677,
+        long = 105.81600874518435,
+        pricePerHour = 17000,
+        openTime = 5.0,
+        closeTime = 23.0,
+    ),
+    ParkEntity(
+        id = "xThss",
+        name = "Vincom Nguyễn Chí Thanh",
+        address = "Đống Đa, Hà Nội, Vietnam",
+        detailAddress = "Vincom Center, 54A Đ. Nguyễn Chí Thanh, Láng Thượng, Đống Đa, Hà Nội, Vietnam",
+        image = "https://eparking.vn/wp-content/uploads/2024/03/tieu-chuan-bai-dau-xe-chung-cu.jpg",
+        maxSlot = 200,
+        currentSlot = 0,
+        lat = 21.022975888608478,
+        long = 105.80960262062881,
+        pricePerHour = 20000,
+        openTime = 6.0,
+        closeTime = 23.0,
+    ),
+    ParkEntity(
+        id = "jV1U0",
+        name = "10A Quang Trung",
+        address = "Hà Đông, Hà Nội, Vietnam",
+        detailAddress = "10A Đ. Quang Trung, P. Nguyễn Trãi, Hà Đông, Hà Nội, Vietnam",
+        image = "https://tl.cdnchinhphu.vn/344445545208135680/2022/6/27/img-5828-16563035923211045998597.jpg",
+        maxSlot = 100,
+        currentSlot = 0,
+        lat = 20.971804596502384,
+        long = 105.7762988260981,
+        pricePerHour = 12000,
+        openTime = 6.0,
+        closeTime = 22.0,
+    ),
+    ParkEntity(
+        id = "6uR83",
+        name = "29 Đình Thôn",
+        address = "Nam Từ Liêm, Hà Nội, Vietnam",
+        detailAddress = "29 Đ. Đình Thôn, Đình Thôn, Nam Từ Liêm, Hà Nội, Vietnam",
+        image = "https://autopro8.mediacdn.vn/134505113543774208/2022/9/25/screen-shot-2022-09-25-at-142119-166409050575816658016-1664101083021-1664101083198311437017.png",
+        maxSlot = 50,
+        currentSlot = 0,
+        21.02050818645722, 105.77859890528029,
+        pricePerHour = 12000,
+        openTime = 6.0,
+        closeTime = 22.0,
+    ),
+    ParkEntity(
+        id = "1ZPHh",
+        name = "104 Trần Bình",
+        address = "Cầu Giấy, Hà Nội, Vietnam",
+        detailAddress = "104 P. Trần Bình, Mỹ Đình, Cầu Giấy, Hà Nội, Vietnam",
+        image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTQlwPDfZWCr_VXOcEfAdkZqOkRnJdgTQqehQ&s",
+        maxSlot = 95,
+        currentSlot = 0,
+        21.03130815553721, 105.77691423450361,
+        pricePerHour = 10000,
+        openTime = 6.0,
+        closeTime = 23.0,
+    ),
+    ParkEntity(
+        id = "fOWG4",
+        name = "155 Cầu Giấy",
+        address = "Cầu Giấy, Hà Nội, Vietnam",
+        detailAddress = "2 Ng. 155 Đ. Cầu Giấy, Quan Hoa, Cầu Giấy, Hà Nội, Vietnam",
+        image = "https://www.secom.vn/wp-content/uploads/2024/06/bai-do-xe-thong-minh-la-gi.jpg",
+        maxSlot = 90,
+        currentSlot = 0,
+        21.032351009760763, 105.79763517780864,
+        pricePerHour = 13000,
+        openTime = 6.0,
+        closeTime = 23.0,
+    ),
+    ParkEntity(
+        id = "JH6dO",
+        name = "109 Trần Hưng Đạo",
+        address = "Hoàn Kiếm, Hà Nội, Vietnam",
+        detailAddress = "109 Trần Hưng Đạo, Cửa Nam, Hoàn Kiếm, Hà Nội, Vietnam",
+        image = "https://aozoom.com.vn/storage/uploads/news/27-07-2023/12088cb28c3db934de9b013689c5eb2233ffdc76.jpg",
+        maxSlot = 75,
+        currentSlot = 0,
+        21.02333109627214, 105.84197383659325,
+        pricePerHour = 25000,
+        openTime = 6.0,
+        closeTime = 23.0,
+    ),
+    ParkEntity(
+        id = "ndLvX",
+        name = "164 Nguyễn Văn Cừ",
+        address = "Long Biên, Hà Nội, Vietnam",
+        detailAddress = "164 Đ. Nguyễn Văn Cừ, Bồ Đề, Long Biên, Hà Nội 100000, Vietnam",
+        image = "https://maisonoffice.vn/wp-content/uploads/2024/08/bai-do-xe-hoi.jpg",
+        maxSlot = 75,
+        currentSlot = 0,
+        21.0429183546513, 105.87141241134204,
+        pricePerHour = 14000,
+        openTime = 7.0,
+        closeTime = 21.0,
+    ),
+    ParkEntity(
+        id = "ZyjGL",
+        name = "447 Nguyễn Văn Linh",
+        address = "Long Biên, Hà Nội, Vietnam",
+        detailAddress = "447 Đ. Nguyễn Văn Linh, Phúc Đồng, Long Biên, Hà Nội, Vietnam",
+        image = "https://acihome.vn/uploads/15/giai-phap-thiet-ke-bai-do-xe-tai-resort.jpg",
+        maxSlot = 85,
+        currentSlot = 0,
+        21.034871960097647, 105.90467265557372,
+        pricePerHour = 15000,
+        openTime = 6.0,
+        closeTime = 21.0,
+    ),
+    ParkEntity(
+        id = "gKsDd",
+        name = "244 Võ Chí Công",
+        address = "Tây Hồ, Hà Nội, Vietnam",
+        detailAddress = "244 Đ. Võ Chí Công, Xuân La, Tây Hồ, Hà Nội, Vietnam",
+        image = "https://shopping.saigoncentre.com.vn/Data/Sites/1/News/32/013.jpg",
+        maxSlot = 150,
+        currentSlot = 0,
+        21.05836438764959, 105.80468983026418,
+        pricePerHour = 18000,
+        openTime = 6.0,
+        closeTime = 23.5,
+    ),
+    ParkEntity(
+        id = "qt2O6",
+        name = "64 Đường Cầu",
+        address = "Bắc Từ Liêm, Hà Nội, Vietnam",
+        detailAddress = "64 Đường Cầu, Phúc Diễn, Bắc Từ Liêm, Hà Nội, Vietnam",
+        image = "https://acihome.com.vn/uploads/15/thiet-ke-bai-do-xe-oto-thong-dung.jpg",
+        maxSlot = 130,
+        currentSlot = 0,
+        21.04644969978108, 105.7499930621451,
+        pricePerHour = 16000,
+        openTime = 6.0,
+        closeTime = 22.5,
+    ),
+    ParkEntity(
+        id = "VAqkx",
+        name = "238 Đại Từ",
+        address = "Hoàng Mai, Hà Nội, Vietnam",
+        detailAddress = "238 P. Đại Từ, Đại Kim, Hoàng Mai, Hà Nội, Vietnam",
+        image = "https://decocrete.eu/wp-content/uploads/2022/05/e0139c815e509f0ec641.jpg",
+        maxSlot = 100,
+        currentSlot = 0,
+        20.97059898298291, 105.83238071228075,
+        pricePerHour = 19000,
+        openTime = 6.0,
+        closeTime = 21.5,
+    ),
+    ParkEntity(
+        id = "y3viX",
+        name = "147 Tân Mai",
+        address = "Hoàng Mai, Hà Nội, Vietnam",
+        detailAddress = "147 P. Tân Mai, Tân Mai, Hoàng Mai, Hà Nội, Vietnam",
+        image = "https://media-cdn-v2.laodong.vn/storage/newsportal/2023/7/21/1219522/DJI_0943.JPG",
+        maxSlot = 80,
+        currentSlot = 0,
+        20.9834752461977, 105.85121888456176,
+        pricePerHour = 19000,
+        openTime = 6.0,
+        closeTime = 21.5,
+    ),
+    ParkEntity(
+        id = "qXP9X",
+        name = "89 Giải Phóng",
+        address = "Hai Bà Trưng, Hà Nội, Vietnam",
+        detailAddress = "89 Đ. Giải Phóng, Đồng Tâm, Hai Bà Trưng, Hà Nội, Vietnam",
+        image = "https://www.galaxyoffice.vn/wp-content/uploads/2024/06/bai-giu-xe-oto-quan-thanh-xuan.jpg",
+        maxSlot = 230,
+        currentSlot = 0,
+        21.002792973389525, 105.84157241140929,
+        pricePerHour = 19000,
+        openTime = 6.0,
+        closeTime = 23.5,
+    ),
+    ParkEntity(
+        id = "fuv2M",
+        name = "208 Xã Đàn",
+        address = "Đống Đa, Hà Nội, Vietnam",
+        detailAddress = "208 P. Xã Đàn, Phương Liên, Đống Đa, Hà Nội, Vietnam",
+        image = "https://uniquevietnam.vn/wp-content/uploads/2021/07/quang-cao-tai-bai-gui-xe-16-1207x800.jpg",
+        maxSlot = 85,
+        currentSlot = 0,
+        21.011767813942946, 105.83686714065693,
+        pricePerHour = 19000,
+        openTime = 6.0,
+        closeTime = 23.5,
+    ),
+    ParkEntity(
+        id = "03rXX",
+        name = "290 Kim Mã",
+        address = "Ba Đình, Hà Nội, Vietnam",
+        detailAddress = "11 Ng. 290 P. Kim Mã, Kim Mã, Ba Đình, Hà Nội, Vietnam",
+        image = "https://visaho.vn/upload_images/images/2023/12/23/quy-dinh-cho-do-xe-chung-cu.png",
+        maxSlot = 65,
+        currentSlot = 0,
+        21.031932863951198, 105.82247199822677,
+        pricePerHour = 15000,
+        openTime = 6.0,
+        closeTime = 22.5,
+    ),
+    ParkEntity(
+        id = "9dhXa",
+        name = "67 Văn Cao",
+        address = "Ba Đình, Hà Nội, Vietnam",
+        detailAddress = "67 Đ. Văn Cao, Liễu Giai, Ba Đình, Hà Nội, Vietnam",
+        image = "https://nld.mediacdn.vn/2019/7/14/bai-xe-ngam--15630735571051888097108.jpg",
+        maxSlot = 55,
+        currentSlot = 0,
+        21.04021907992392, 105.81614233134084,
+        pricePerHour = 18000,
+        openTime = 6.0,
+        closeTime = 21.5,
+    ),
+    ParkEntity(
+        id = "O5zQ2",
+        name = "26 Nguyễn Đình Hoàn",
+        address = "Cầu Giấy, Hà Nội, Vietnam",
+        detailAddress = "26 P. Nguyễn Đình Hoàn, Nghĩa Đô, Cầu Giấy, Hà Nội, Vietnam",
+        image = "https://eparking.vn/wp-content/uploads/2024/03/tieu-chuan-ve-kich-thuoc-cho-do-xe-trong-tang-ham.jpg",
+        maxSlot = 80,
+        currentSlot = 0,
+        21.044913506915076, 105.80517486271579,
+        pricePerHour = 20000,
+        openTime = 6.0,
+        closeTime = 23.0,
+    ),
+    ParkEntity(
+        id = "DvR3t",
+        name = "1A Âu Cơ",
+        address = "Tây Hồ, Hà Nội, Vietnam",
+        detailAddress = "1A Đ. Âu Cơ, Quảng An, Tây Hồ, Hà Nội, Vietnam",
+        image = "https://image.nhatime.vn/blogs/image/tieu-chuan-bai-dau-xe-chung-cu-moi-nhat_2022051314194058490300.jpeg",
+        maxSlot = 70,
+        currentSlot = 0,
+        21.059269003094666, 105.83393366232016,
+        pricePerHour = 18000,
+        openTime = 6.0,
+        closeTime = 23.0,
+    ),
+)
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/park/ParkDetailUtils.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailUtils.kt b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailUtils.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailUtils.kt	
@@ -0,0 +1,93 @@
+package com.parking.parkingapp.view.park
+
+import android.annotation.SuppressLint
+import com.parking.parkingapp.data.model.ParkModel
+import com.parking.parkingapp.view.map.formatTime
+import com.parking.parkingapp.view.map.isCurrentTimeInRange
+import java.time.LocalTime
+import java.time.format.DateTimeFormatter
+import java.util.Calendar
+import java.util.Locale
+
+@SuppressLint("NewApi")
+fun Calendar.validatePickedTime(
+    startTime: Calendar?,
+    endTime: Calendar?,
+    parkModel: ParkModel,
+    isStartTime: Boolean
+): Calendar? {
+    val formatter = DateTimeFormatter.ofPattern("h:mma", Locale.US)
+    val start = LocalTime.parse(formatTime(parkModel.openTime), formatter)
+    val close = LocalTime.parse(formatTime(parkModel.closeTime), formatter)
+    val pickedLocalTime = LocalTime.of(this.get(Calendar.HOUR_OF_DAY), this.get(Calendar.MINUTE))
+    val pickedStartTime = startTime?.let {
+        LocalTime.of(
+            it.get(Calendar.HOUR_OF_DAY), it.get(
+                Calendar.MINUTE
+            )
+        )
+    }
+    val pickedEndTime = endTime?.let {
+        LocalTime.of(
+            it.get(Calendar.HOUR_OF_DAY),
+            it.get(Calendar.MINUTE)
+        )
+    }
+    val isInTime = isCurrentTimeInRange(
+        formatTime(parkModel.openTime),
+        formatTime(parkModel.closeTime)
+    )
+    val now = LocalTime.now()
+    val isOpen = isCurrentTimeInRange(start, close)
+    return if (isStartTime) {
+        when {
+            pickedLocalTime.isBefore(start) -> {
+                Calendar.getInstance().apply {
+                    set(
+                        Calendar.HOUR_OF_DAY, if (isInTime) now.hour
+                        else start.hour
+                    )
+                    set(
+                        Calendar.MINUTE, if (isInTime) now.minute
+                        else start.minute
+                    )
+                }
+            }
+
+            !isCurrentTimeInRange(now, close, pickedLocalTime) -> {
+                if (isOpen) {
+                    Calendar.getInstance().apply {
+                        set(Calendar.HOUR_OF_DAY, now.hour)
+                        set(Calendar.MINUTE, now.minute)
+                    }
+                } else {
+                    Calendar.getInstance().apply {
+                        set(Calendar.HOUR_OF_DAY, start.hour)
+                        set(Calendar.MINUTE, start.minute)
+                    }
+                }
+            }
+
+            pickedEndTime != null && pickedLocalTime.isAfter(pickedEndTime) -> {
+                null
+            }
+
+            else -> this
+        }
+    } else {
+        when {
+            pickedLocalTime.isAfter(close) -> {
+                Calendar.getInstance().apply {
+                    set(Calendar.HOUR_OF_DAY, close.hour)
+                    set(Calendar.MINUTE, close.minute)
+                }
+            }
+
+            pickedLocalTime.isBefore(now) || pickedLocalTime.isBefore(start) -> null
+
+            pickedStartTime != null && pickedLocalTime <= pickedStartTime -> null
+
+            else -> this
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/values/values.xml
===================================================================
diff --git a/app/src/main/res/values/values.xml b/app/src/main/res/values/values.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/values/values.xml	
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <dimen name="sub_string_park_card">12sp</dimen>
+    <dimen name="sub_icon_park_card">12dp</dimen>
+</resources>
\ No newline at end of file
Index: app/src/main/res/navigation/map_nav_graph.xml
===================================================================
diff --git a/app/src/main/res/navigation/map_nav_graph.xml b/app/src/main/res/navigation/map_nav_graph.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/navigation/map_nav_graph.xml	
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<navigation xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/map_nav_graph"
+    app:startDestination="@id/mapboxFragment">
+
+    <fragment
+        android:id="@+id/mapboxFragment"
+        android:name="com.parking.parkingapp.view.map.MapboxFragment"
+        android:label="MapboxFragment" />
+</navigation>
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/entity/RentParkEntity.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/entity/RentParkEntity.kt b/app/src/main/java/com/parking/parkingapp/data/entity/RentParkEntity.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/data/entity/RentParkEntity.kt	
@@ -0,0 +1,13 @@
+package com.parking.parkingapp.data.entity
+
+import java.io.Serializable
+
+data class RentParkEntity(
+    val id: String = "",
+    val userId: String = "",
+    val park: ParkEntity = ParkEntity(),
+    val startTime: String = "",
+    val endTime: String = "",
+    val totalPay: Int = 0,
+    val rentedDate: String = ""
+): Serializable
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/data/model/MyRentedPark.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/model/MyRentedPark.kt b/app/src/main/java/com/parking/parkingapp/data/model/MyRentedPark.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/data/model/MyRentedPark.kt	
@@ -0,0 +1,40 @@
+package com.parking.parkingapp.data.model
+
+import android.os.Parcelable
+import com.parking.parkingapp.data.entity.RentParkEntity
+import kotlinx.parcelize.Parcelize
+
+@Parcelize
+data class MyRentedPark(
+    val id: String,
+    val userId: String,
+    val park: ParkModel,
+    val startTime: String,
+    val endTime: String,
+    val totalPay: Int,
+    val rentedDate: String
+): Parcelable
+
+fun RentParkEntity.toMyRentedPark(): MyRentedPark {
+    return MyRentedPark(
+        id = this.id,
+        userId = this.userId,
+        park = this.park.toParkModel(),
+        startTime = this.startTime,
+        endTime = this.endTime,
+        totalPay = this.totalPay,
+        rentedDate = this.rentedDate,
+    )
+}
+
+fun MyRentedPark.toRentParkEntity(): RentParkEntity {
+    return RentParkEntity(
+        id = this.id,
+        userId = this.userId,
+        park = this.park.toParkEntity(),
+        startTime = this.startTime,
+        endTime = this.endTime,
+        totalPay = this.totalPay,
+        rentedDate = this.rentedDate,
+    )
+}
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingAdapter.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingAdapter.kt b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingAdapter.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingAdapter.kt	
@@ -0,0 +1,57 @@
+package com.parking.parkingapp.view.my_parking
+
+import android.view.LayoutInflater
+import android.view.ViewGroup
+import androidx.recyclerview.widget.RecyclerView
+import androidx.recyclerview.widget.RecyclerView.ViewHolder
+import com.bumptech.glide.Glide
+import com.parking.parkingapp.R
+import com.parking.parkingapp.data.model.MyRentedPark
+import com.parking.parkingapp.databinding.MyParkingItemBinding
+import com.parking.parkingapp.view.map.formatCurrency
+import com.parking.parkingapp.view.map.formatCurrencyPerHour
+
+class MyParkingAdapter : RecyclerView.Adapter<MyParkingAdapter.MyParkingViewHolder>() {
+    private val myParkingList = mutableListOf<MyRentedPark>()
+
+    fun updateData(newList: List<MyRentedPark>) {
+        myParkingList.clear()
+        myParkingList.addAll(newList)
+        notifyDataSetChanged()
+    }
+
+    inner class MyParkingViewHolder(val binding: MyParkingItemBinding) : ViewHolder(binding.root) {
+        fun bind(myRentedPark: MyRentedPark) {
+            Glide
+                .with(binding.root.context)
+                .load(myRentedPark.park.image)
+                .centerCrop()
+                .placeholder(R.drawable.parking_placeholder)
+                .into(binding.myParkImage)
+            binding.myParkName.text = myRentedPark.park.name
+            binding.myParkAddress.text = myRentedPark.park.address
+            binding.myParkPrice.text = formatCurrency(myRentedPark.totalPay.toDouble())
+            binding.myParkTime.text = binding.root.context.getString(
+                R.string.my_park_time,
+                myRentedPark.startTime, myRentedPark.endTime
+            )
+            binding.myParkDate.text = myRentedPark.rentedDate
+        }
+    }
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): MyParkingViewHolder {
+        return MyParkingViewHolder(
+            MyParkingItemBinding.inflate(
+                LayoutInflater.from(parent.context),
+                parent,
+                false
+            )
+        )
+    }
+
+    override fun getItemCount(): Int = myParkingList.size
+
+    override fun onBindViewHolder(holder: MyParkingViewHolder, position: Int) {
+        holder.bind(myParkingList[position])
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingViewModel.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/view/my_parking/MyParkingViewModel.kt	
@@ -0,0 +1,38 @@
+package com.parking.parkingapp.view.my_parking
+
+import android.util.Log
+import androidx.lifecycle.viewModelScope
+import com.google.firebase.auth.FirebaseUser
+import com.parking.parkingapp.common.BaseViewModel
+import com.parking.parkingapp.common.success
+import com.parking.parkingapp.data.model.MyRentedPark
+import com.parking.parkingapp.data.repository.AuthRepository
+import com.parking.parkingapp.data.repository.ParkRepository
+import dagger.hilt.android.lifecycle.HiltViewModel
+import kotlinx.coroutines.flow.MutableStateFlow
+import kotlinx.coroutines.flow.asStateFlow
+import kotlinx.coroutines.launch
+import javax.inject.Inject
+
+@HiltViewModel
+class MyParkingViewModel @Inject constructor(
+    private val parkRepository: ParkRepository,
+    private val authRepository: AuthRepository,
+) : BaseViewModel() {
+    private val _myPark = MutableStateFlow<List<MyRentedPark>>(listOf())
+    val myPark = _myPark.asStateFlow()
+
+    fun fetchData() {
+        viewModelScope.launch {
+            authRepository.getCurrentUser<FirebaseUser>().success { user ->
+                user?.let { fuser ->
+                    parkRepository.getMyRentedPark(fuser.uid).collect { result ->
+                        result.success {
+                            _myPark.value = it?.toList() ?: listOf()
+                        }
+                    }
+                }
+            }
+        }
+
+    }    }
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/park/ParkDetailViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailViewModel.kt
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/com/parking/parkingapp/view/park/ParkDetailViewModel.kt	
@@ -0,0 +1,66 @@
+package com.parking.parkingapp.view.park
+
+import android.annotation.SuppressLint
+import androidx.lifecycle.viewModelScope
+import com.google.firebase.auth.FirebaseUser
+import com.parking.parkingapp.common.BaseViewModel
+import com.parking.parkingapp.common.ErrorDataState
+import com.parking.parkingapp.common.State
+import com.parking.parkingapp.common.SuccessDataState
+import com.parking.parkingapp.common.fail
+import com.parking.parkingapp.common.success
+import com.parking.parkingapp.data.model.MyRentedPark
+import com.parking.parkingapp.data.model.ParkModel
+import com.parking.parkingapp.data.repository.AuthRepository
+import com.parking.parkingapp.data.repository.ParkRepository
+import dagger.hilt.android.lifecycle.HiltViewModel
+import kotlinx.coroutines.launch
+import java.time.LocalDate
+import javax.inject.Inject
+
+@HiltViewModel
+class ParkDetailViewModel @Inject constructor(
+    private val authRepository: AuthRepository,
+    private val parkRepository: ParkRepository,
+) : BaseViewModel() {
+
+    @SuppressLint("NewApi")
+    fun submitCheckout(
+        parkModel: ParkModel,
+        startTime: String,
+        endTime: String,
+        totalPay: Double,
+        isSubmitInOpenTime: Boolean
+    ) =
+        viewModelScope.launch {
+            sendSingleEvent(State.Loading)
+            authRepository.getCurrentUser<FirebaseUser>().success { user ->
+                user?.also {
+                    parkRepository.rentPark(
+                        MyRentedPark(
+                            id = "",
+                            userId = it.uid,
+                            park = parkModel,
+                            startTime = startTime,
+                            endTime = endTime,
+                            totalPay = (totalPay * parkModel.pricePerHour).toInt(),
+                            rentedDate = if (isSubmitInOpenTime) LocalDate.now().toString()
+                            else LocalDate.now().plusDays(1).toString()
+                        )
+                    ).success { result ->
+                        sendSingleEvent(State.Success(RentSuccess(result)))
+                    }.fail { error ->
+                        sendSingleEvent(State.Error(RentError(error)))
+                    }
+                }
+            }
+        }
+}
+
+data class RentSuccess(
+    val result: MyRentedPark?
+): SuccessDataState
+
+data class RentError(
+    val errorMessage: String?
+): ErrorDataState
\ No newline at end of file
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	
+++ b/gradle/libs.versions.toml	
@@ -11,6 +11,7 @@
 constraintlayout = "2.1.4"
 firebase-bom = "33.4.0"
 googleServices = "4.4.2"
+googleServicesLocation = "21.0.1"
 firebaseStorage = "21.0.1"
 firebaseAuth = "23.0.0"
 firebaseFirestore = "25.1.0"
@@ -50,7 +51,7 @@
 androidx-navigation-ui = { group = "androidx.navigation", name = "navigation-ui-ktx", version.ref = "navigationFragment" }
 google-service-map = { group = "com.google.android.gms", name = "play-services-maps", version.ref = "google-service" }
 map-support = { group = "com.google.android.libraries.places", name = "places", version.ref = "map-support" }
-google-service-location = { group = "com.google.android.gms", name = "play-services-location", version.ref = "googleServices" }
+google-service-location = { group = "com.google.android.gms", name = "play-services-location", version.ref = "googleServicesLocation" }
 retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
 retrofit-converter = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit" }
 api-logger = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "api-logger" }
Index: app/src/main/java/com/parking/parkingapp/view/map/PlaceAutocompleteAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/map/PlaceAutocompleteAdapter.kt b/app/src/main/java/com/parking/parkingapp/view/map/PlaceAutocompleteAdapter.kt
--- a/app/src/main/java/com/parking/parkingapp/view/map/PlaceAutocompleteAdapter.kt	
+++ b/app/src/main/java/com/parking/parkingapp/view/map/PlaceAutocompleteAdapter.kt	
@@ -2,10 +2,10 @@
 
 import android.view.LayoutInflater
 import android.view.ViewGroup
-import androidx.recyclerview.widget.DiffUtil
 import androidx.recyclerview.widget.RecyclerView
 import androidx.recyclerview.widget.RecyclerView.ViewHolder
 import com.mapbox.geojson.Point
+import com.parking.parkingapp.common.hasVisible
 import com.parking.parkingapp.data.model.AutoCompleteModel
 import com.parking.parkingapp.databinding.SuggestItemBinding
 
@@ -19,7 +19,14 @@
                 onItemClick?.invoke(item.coordinates)
             }
             binding.suggestText.text = item.addressName
-            binding.suggestSubText.text = item.placeName
+            binding.suggestSubText.apply {
+                if (item.placeName.isNotBlank()) {
+                    hasVisible = true
+                    text = item.placeName
+                } else {
+                    hasVisible = false
+                }
+            }
         }
     }
 
@@ -30,25 +37,9 @@
     }
 
     fun updateList(data: List<AutoCompleteModel>) {
-        val diffCallback = object: DiffUtil.Callback() {
-            override fun getOldListSize(): Int = suggestList.size
-
-            override fun getNewListSize(): Int = data.size
-
-            override fun areItemsTheSame(
-                oldItemPosition: Int,
-                newItemPosition: Int
-            ): Boolean = suggestList[oldItemPosition].id == data[oldItemPosition].id
-
-            override fun areContentsTheSame(
-                oldItemPosition: Int,
-                newItemPosition: Int
-            ): Boolean = suggestList[oldItemPosition] == data[oldItemPosition]
-        }
         suggestList.clear()
         suggestList.addAll(data)
         notifyDataSetChanged()
-//        DiffUtil.calculateDiff(diffCallback).dispatchUpdatesTo(this)
     }
 
     override fun onCreateViewHolder(
Index: app/src/main/java/com/parking/parkingapp/data/entity/FireUserEntity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/data/entity/FireUserEntity.kt b/app/src/main/java/com/parking/parkingapp/data/entity/FireUserEntity.kt
--- a/app/src/main/java/com/parking/parkingapp/data/entity/FireUserEntity.kt	
+++ b/app/src/main/java/com/parking/parkingapp/data/entity/FireUserEntity.kt	
@@ -6,7 +6,5 @@
 @Parcelize
 data class FireUserEntity(
     val id: String = "",
-    val name: String? = null,
-    val email: String = "",
-    val image: String? = null
+    val email: String = ""
 ): Parcelable
\ No newline at end of file
Index: app/src/main/java/com/parking/parkingapp/view/map/MapViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/parking/parkingapp/view/map/MapViewModel.kt b/app/src/main/java/com/parking/parkingapp/view/map/MapViewModel.kt
--- a/app/src/main/java/com/parking/parkingapp/view/map/MapViewModel.kt	
+++ b/app/src/main/java/com/parking/parkingapp/view/map/MapViewModel.kt	
@@ -1,9 +1,14 @@
 package com.parking.parkingapp.view.map
 
 import androidx.lifecycle.viewModelScope
+import com.mapbox.geojson.Point
 import com.parking.parkingapp.common.BaseViewModel
+import com.parking.parkingapp.common.success
 import com.parking.parkingapp.data.model.AutoCompleteModel
+import com.parking.parkingapp.data.model.ParkModel
+import com.parking.parkingapp.data.model.toAutoCompleteModel
 import com.parking.parkingapp.data.repository.MapRepository
+import com.parking.parkingapp.data.repository.ParkRepository
 import dagger.hilt.android.lifecycle.HiltViewModel
 import kotlinx.coroutines.Job
 import kotlinx.coroutines.delay
@@ -15,6 +20,7 @@
 @HiltViewModel
 class MapViewModel @Inject constructor(
     private val directionRepository: MapRepository,
+    private val parkRepository: ParkRepository,
 ): BaseViewModel() {
     private var debounceJob: Job? = null
 
@@ -23,6 +29,21 @@
     )
     val searchSuggestion = _searchSuggestion.asStateFlow()
 
+    private val _park = mutableListOf<ParkModel>()
+    private val _parkInRange: MutableStateFlow<List<ParkModel>> = MutableStateFlow(listOf())
+    val parkInRange = _parkInRange.asStateFlow()
+
+    init {
+        viewModelScope.launch {
+            parkRepository.getPark().collect { result ->
+                result.success {
+                    _park.clear()
+                    _park.addAll(it?.toList() ?: listOf())
+                }
+            }
+        }
+    }
+
     fun cancelSearch() {
         debounceJob?.cancel()
     }
@@ -34,10 +55,26 @@
         debounceJob = viewModelScope.launch {
             delay(500)
             directionRepository.getSearchSuggestion(query).collect {
-                if (it != null) {
-                    _searchSuggestion.value = it
-                }
-            }
+                _searchSuggestion.value = _park.filter { park ->
+                    park.name.contains(query, true) || park.address.contains(query, true)
+                }.map { park -> park.toAutoCompleteModel() } + (it ?: listOf())
+            }
+        }
+    }
+
+    fun getParkInRange(
+        currentCoordinate: Point,
+        distance: Int = 10000
+    ) {
+        debounceJob?.cancel()
+        debounceJob = viewModelScope.launch {
+            delay(1000)
+            _parkInRange.value = _park.filter {
+                val e = currentCoordinate.distanceTo(
+                    Point.fromLngLat(it.long, it.lat)
+                )
+                 e <= distance
+            }.toList()
         }
     }
 }
\ No newline at end of file
diff --git a/app/src/main/res/drawable/calendar.png b/app/src/main/res/drawable/calendar.png
new file mode 100644
index 0000000000000000000000000000000000000000..8c30ce33e34f3dfdec02f5f6560bcaf83a901a3d
GIT binary patch
literal 6785
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
PoASvMp2w??hF<zFO~b+g

diff --git a/app/src/main/res/drawable/coin.png b/app/src/main/res/drawable/coin.png
new file mode 100644
index 0000000000000000000000000000000000000000..1cd0488663f3d508283dd7b775ca186e6f4e2b4e
GIT binary patch
literal 15463
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
Wad{Y}iOp~T`dC`nm{%VoUHd=cMcEVp

diff --git a/app/src/main/res/drawable/parking_placeholder.png b/app/src/main/res/drawable/parking_placeholder.png
new file mode 100644
index 0000000000000000000000000000000000000000..61a505b95df334007eedf61e3be8686a2036ef39
GIT binary patch
literal 15593
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
ZOtkpUWw`L(T?l;1Nh?W}K70A*{{V?&;?Mv9

diff --git a/app/src/main/res/drawable/success.png b/app/src/main/res/drawable/success.png
new file mode 100644
index 0000000000000000000000000000000000000000..6afae69d8f78c1eb59f674f62fbb9dddfff4479f
GIT binary patch
literal 12602
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

diff --git a/app/src/main/res/drawable/time.png b/app/src/main/res/drawable/time.png
new file mode 100644
index 0000000000000000000000000000000000000000..2de918b6bca9fe45ff5e4c6e4f74c877284e90cc
GIT binary patch
literal 11568
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
I>)1*E2MS^_{r~^~

